<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一章-线性表（有时间补充含有头结点和不含有头结点的链表插入删除操作）</title>
    <url>/2024/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%BA%BF%E6%80%A7%E8%A1%A8%EF%BC%88%E6%9C%89%E6%97%B6%E9%97%B4%E8%A1%A5%E5%85%85%E5%90%AB%E6%9C%89%E5%A4%B4%E7%BB%93%E7%82%B9%E5%92%8C%E4%B8%8D%E5%90%AB%E6%9C%89%E5%A4%B4%E7%BB%93%E7%82%B9%E7%9A%84%E9%93%BE%E8%A1%A8%E6%8F%92%E5%85%A5%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%EF%BC%89/</url>
    <content><![CDATA[<p>定义：具有相同数据类型的n（n&gt;=0）个数据元素的有限序列.<br><code>线性表是一种逻辑结构，表示元素之间的一对一的相邻关系。顺序表和链表是指存储结构，两者属于不同层面的概念。</code></p>
<h3 id="顺序表"><a href="#顺序表" class="headerlink" title="顺序表"></a>顺序表</h3><p>定义：线性表的顺序存储，它是用一组地址连续的存储单元依此存储线性表中的数据元素，从而使得逻辑上相邻的两个元素在物理位置上也相邻。<code>逻辑顺序与物理顺序相同</code>。</p>
<h4 id="存储结构体（静态）"><a href="#存储结构体（静态）" class="headerlink" title="存储结构体（静态）"></a>存储结构体（静态）</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#define MaxSize 50           //定义线性表的最大长度</span><br><span class="line">typedef struct{</span><br><span class="line">	ElemType data[MAxSize];  //顺序表的元素</span><br><span class="line">	int length;              //顺序表的当前长度</span><br><span class="line">}Sqlist;                     //顺序表的类型定义</span><br></pre></td></tr></table></figure></div>
<h4 id="存储结构体（动态）"><a href="#存储结构体（动态）" class="headerlink" title="存储结构体（动态）"></a>存储结构体（动态）</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#define InitSize 100     //表长度的初始定义</span><br><span class="line">typedef struct{</span><br><span class="line">	ElemType *data;      //指示动态分配数组的指针</span><br><span class="line">	int MAxSize,length;  //数组的最大容量和当前个数</span><br><span class="line">}SeqList;                //动态分配数组顺序表的类型定义</span><br></pre></td></tr></table></figure></div>
<p><code>动态分配并不是链式存储，它同样属于顺序存储结构，物理结构没有变化，依然是随机存取方式，只是分配的空间大小可以在运行时动态决定。</code></p>
<h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul>
<li><strong>随机访问</strong>，通过首地址和元素序号可在时间O(1)内找到指定的元素；</li>
<li>存储密度高，每个节点只存储数据元素；</li>
<li>插入和删除需要移动大量元素。</li>
</ul>
<h4 id="插入操作"><a href="#插入操作" class="headerlink" title="插入操作"></a>插入操作</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">bool ListInsert( Sqlist &amp;L,int i,ElemType e ){</span><br><span class="line">	if( i &lt; 1 || i &gt; L.length + 1)       //判断i的范围是否有效</span><br><span class="line">		return false;</span><br><span class="line">	if( L.length &gt;= MaxSize )            //当前存储空间已满，不能插入</span><br><span class="line">		return false;</span><br><span class="line">	for( int j = L.length; j &gt;= i; j--)  //将第i个元素及之后的元素后移</span><br><span class="line">		L.data[j] = L.data[j-1];</span><br><span class="line">	L.data[i-1] = e;                     //在位置i处放入e</span><br><span class="line">	L.length++;                          //线性表长度加1</span><br><span class="line">	return ture;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>平均时间复杂度为O(n)</p>
<h4 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">bool ListDelete(SqList &amp;L,int i,ElemType &amp;e){</span><br><span class="line">	if(i&lt;1||i&gt;L.length)          //判断i的范围是否有效</span><br><span class="line">		return false;</span><br><span class="line">	e = L.data[i-1];             //将被删除的元素赋值给e</span><br><span class="line">	for(int j=i;j&lt;L.length;j++)  //将第i个元素后的元素前移</span><br><span class="line">		L.data[j-1] = L.data[j];</span><br><span class="line">	L.length--;                  //线性表长度减1</span><br><span class="line">	return true;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>平均时间复杂度为O(n)</p>
<h4 id="查找操作"><a href="#查找操作" class="headerlink" title="查找操作"></a>查找操作</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">int LocateElem(SqList L,ElemType e){</span><br><span class="line">	inty i;</span><br><span class="line">	for(i=0;i&lt;L.length;i++)</span><br><span class="line">		if(L.data[i]==e)</span><br><span class="line">			return i+1;  //下标为i的元素值等于e，返回其位序i+1</span><br><span class="line">	return 0;            //退出循环，说明查找失败</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>平均时间复杂度为O(n)</p>
<h3 id="线性表的链式表示"><a href="#线性表的链式表示" class="headerlink" title="线性表的链式表示"></a>线性表的链式表示</h3><h4 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h4><p>定义：线性表的链式存储，通过一组任意的存储单元来存储线性表中的数据元素。</p>
<h5 id="存储结构体"><a href="#存储结构体" class="headerlink" title="存储结构体"></a>存储结构体</h5><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">typedef struct LNode{    //定义单链表结点类型</span><br><span class="line">	ElemType data;       //数据域</span><br><span class="line">	struct LNode *next;  //指针域</span><br><span class="line">}LNode,*LinkList;</span><br></pre></td></tr></table></figure></div>
<p>头结点的优点：</p>
<ul>
<li>由于第一个数据结点的位置被存放在头结点的指针域中，因此在链表的第一个位置上的 操作和在表的其他位置上的操作一致，无须进行特殊处理。</li>
<li>无论链表是否为空，其头指针都指向头结点的非空指针（空表中头结点的指针域为空）， 因此空表和非空表的处理也就得到了统一。</li>
</ul>
<h5 id="头插法建立单链表（存在头指针）"><a href="#头插法建立单链表（存在头指针）" class="headerlink" title="头插法建立单链表（存在头指针）"></a>头插法建立单链表（存在头指针）</h5><p><code>生成链表中的节点次序和输入数据的顺序一致</code><br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%BA%BF%E6%80%A7%E8%A1%A8%EF%BC%88%E6%9C%89%E6%97%B6%E9%97%B4%E8%A1%A5%E5%85%85%E5%90%AB%E6%9C%89%E5%A4%B4%E7%BB%93%E7%82%B9%E5%92%8C%E4%B8%8D%E5%90%AB%E6%9C%89%E5%A4%B4%E7%BB%93%E7%82%B9%E7%9A%84%E9%93%BE%E8%A1%A8%E6%8F%92%E5%85%A5%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%EF%BC%89/List_HeadInsert.png"></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">LinkList List_HeadInsert(LinkList &amp;L){      //逆向建立单链表</span><br><span class="line">	LNode *s;</span><br><span class="line">	int x;</span><br><span class="line">	L = (LinkList)malloc(sizeof(LNode));    //创建头节点</span><br><span class="line">	L-&gt;next = NULL;                         //初始为空链表</span><br><span class="line">	scanf("%d",&amp;x);                         //输入节点的值</span><br><span class="line">	while(x!=9999){                         //输入9999表示结束</span><br><span class="line">		s = (LNode*)malloc(sizeof(LNode));  //创建新的节点</span><br><span class="line">		s-&gt;data = x;</span><br><span class="line">		s-&gt;next = s;                        //将新节点插入表中，L为头指针</span><br><span class="line">		scanf("%d",&amp;x);</span><br><span class="line">	}</span><br><span class="line">	return L;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>平均时间复杂度O(n)</p>
<h5 id="尾插法建立单链表"><a href="#尾插法建立单链表" class="headerlink" title="尾插法建立单链表"></a>尾插法建立单链表</h5><p><code>生成链表中的节点次序和输入数据的顺序一致</code><br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%BA%BF%E6%80%A7%E8%A1%A8%EF%BC%88%E6%9C%89%E6%97%B6%E9%97%B4%E8%A1%A5%E5%85%85%E5%90%AB%E6%9C%89%E5%A4%B4%E7%BB%93%E7%82%B9%E5%92%8C%E4%B8%8D%E5%90%AB%E6%9C%89%E5%A4%B4%E7%BB%93%E7%82%B9%E7%9A%84%E9%93%BE%E8%A1%A8%E6%8F%92%E5%85%A5%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%EF%BC%89/List_TailInsert.png"></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">LinkList List_TailInsert(LinkList &amp;L){  //正向建立单链表</span><br><span class="line">	int x;                              //设元素类型为整型</span><br><span class="line">	L = (LinkList)malloc(sizeof(LNode));</span><br><span class="line">	LNode *s,*r = L;                    //r为表尾指针</span><br><span class="line">	scanf("%d",&amp;x);                     //输入结点的值</span><br><span class="line">	while(x!=9999){                     //输入9999表示结束</span><br><span class="line">		s = (LNode *)malloc(sizeof(LNode));</span><br><span class="line">		s-&gt;data = x;</span><br><span class="line">		r-&gt;next = s;</span><br><span class="line">		r = s;                          //r指向新的表尾节点</span><br><span class="line">		scanf("%d,&amp;x);</span><br><span class="line">	}</span><br><span class="line">	r-&gt;next = NULL;                     //尾结点指针置空</span><br><span class="line">	return L;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>平均时间复杂度O(n)</p>
<h5 id="按序号查找结点"><a href="#按序号查找结点" class="headerlink" title="按序号查找结点"></a>按序号查找结点</h5><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">LNode *GetElem(LinkList L,int i){</span><br><span class="line">	int j=1;             //计数，初始为1</span><br><span class="line">	LNode *p = L-&gt;next;  //第一个结点指针赋给p</span><br><span class="line">	if(i==0) return L;   //若i等于0，则返回头结点</span><br><span class="line">	if(i&lt;1) return NULL; //若i无效，则返回头结点</span><br><span class="line">	while(p&amp;&amp;j&lt;i){       //从第1个节点开始找，查找第i个结点</span><br><span class="line">		p=p-&gt;next;</span><br><span class="line">		j++;</span><br><span class="line">	}</span><br><span class="line">	return p;            //返回第i个结点的指针，若i大于表长，则返回NULL</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>平均时间复杂度O(n)</p>
<h4 id="双链表"><a href="#双链表" class="headerlink" title="双链表"></a>双链表</h4><p>由于单链表只有一个指向后继的指针，使得单链表只能从头结点依次顺序向后遍历则导致访问前驱节点只能从头遍历，时间复杂度为O(n)，为了克服这个缺点，从而引入双链表，双链表每个节点存在两个指针prior和next，分别指向前驱节点和后继节点。</p>
<h5 id="存储结构体-1"><a href="#存储结构体-1" class="headerlink" title="存储结构体"></a>存储结构体</h5><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">typedef struct DNode{           //定义双链表节点类型</span><br><span class="line">	ElemType data;              //数据域</span><br><span class="line">	struct DNode *prior,*next;  //前驱和后继指针</span><br><span class="line">}DNode,*DLinkList;</span><br></pre></td></tr></table></figure></div>
<p><code>注意：进行插入删除操作需要同时改变前驱指针和后继指针</code></p>
<h4 id="循环单链表和循环双链表"><a href="#循环单链表和循环双链表" class="headerlink" title="循环单链表和循环双链表"></a>循环单链表和循环双链表</h4><p>循环单链表和单链表的区别在于，表中最后一个结点的指针不是NULL,而改为指向头结点, 从而整个链表形成一个环。<br><code>对循环单链表设置尾指针效率会更高</code><br><code>循环双链表为空时，头结点的前驱和后继都是本身</code></p>
<h4 id="静态链表"><a href="#静态链表" class="headerlink" title="静态链表"></a>静态链表</h4><p>静态链表借助数组来描述线性表的链式存储结构（指针是结点的相对地址（数组下标），也称为游标）</p>
<h5 id="存储结构体-2"><a href="#存储结构体-2" class="headerlink" title="存储结构体"></a>存储结构体</h5><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#define MaxSize 50  //静态链表的最大长度</span><br><span class="line">typedef struct {    //静态链表结构类型的定义</span><br><span class="line">	ElemType data;  //存储数据元素</span><br><span class="line">	int next;       //下一个元素的数组下标</span><br><span class="line">}SLinkList[MaxSize];</span><br></pre></td></tr></table></figure></div>
<h3 id="顺序存储和链式存储的比较"><a href="#顺序存储和链式存储的比较" class="headerlink" title="顺序存储和链式存储的比较"></a>顺序存储和链式存储的比较</h3><ul>
<li>存取（读写方式）<ul>
<li>顺序存储：可以顺序存取，也可以随机存取；</li>
<li>链式存储：只能从表头顺序存取元素。</li>
</ul>
</li>
<li>逻辑结构与物理结构<ul>
<li>顺序存储：逻辑上相邻的元素，对应的物理存储位置也相邻 ；</li>
<li>链式存储：逻 辑上相邻的元素，物理存储位置不一定相邻，对应的逻辑关系是通过指针链接来表示的。</li>
</ul>
</li>
<li>查找、插入和删除操作<ul>
<li>顺序存储：<ul>
<li>按值查找： <ul>
<li>无序：时间复杂度O(n)</li>
<li>有序：最快时间复杂度O(log(n))</li>
</ul>
</li>
<li>按序号查找：随机访问 O(1)</li>
<li>插入、删除：平均需要移动半个表长的元素</li>
</ul>
</li>
<li>链式存储：存储密度不大，平均时间复杂度O(n) ，插入删除只需要修改相关节点的指针域。</li>
</ul>
</li>
<li>空间分配：<ul>
<li>顺序存储<ul>
<li>静态：预先分配预先大量空间 ，容易造成内存溢出；</li>
<li>动态：需要移动大量元素，操作效率降低</li>
</ul>
</li>
<li>链式存储：操作灵活高效</li>
</ul>
</li>
</ul>
<h3 id="如何选取存储结构"><a href="#如何选取存储结构" class="headerlink" title="如何选取存储结构"></a>如何选取存储结构</h3><ol>
<li>基于存储考虑：难以估计存储规模或者长度，选择链式存储；</li>
<li>基于运算考虑：根据序号查找选择顺序存储，插入删除操作选择链式存储；</li>
<li>基于环境考虑：顺序存储比较稳定，但如果需要频繁进行插入删除等操作更改元素选择链式存储（动态性较强）</li>
</ol>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>第七章-排序</title>
    <url>/2024/10/16/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h1><h2 id="直接插入排序"><a href="#直接插入排序" class="headerlink" title="直接插入排序"></a>直接插入排序</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void InsertSort(ElemType A[],int n){</span><br><span class="line">	int i,j;</span><br><span class="line">	for(i=2;i&lt;=n;i++){                             //将A数组插入已排序好的序列</span><br><span class="line">		if(A[i]&lt;A[i-1]){</span><br><span class="line">			A[0]=A[i];                             //复制为哨兵</span><br><span class="line">			for(j=i-1;A[0]&lt;A[j];--j) A[j+1]=A[j];  //向后挪位</span><br><span class="line">			A[j+1]=A[0];                           //复制到插入位置</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>空间效率：O（1）<br>时间效率：最好情况O（n），最坏情况O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）<br>算法比较稳定，适用于顺序存储和链式存储的线性表</p>
<h2 id="折半插入排序"><a href="#折半插入排序" class="headerlink" title="折半插入排序"></a>折半插入排序</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void InsertSort(ElemType A[],int n){</span><br><span class="line">	int i,j,low,high,mid;</span><br><span class="line">	for(i=2;i&lt;=n;i++){</span><br><span class="line">		A[0]=A[i];                            //将A[i]暂存A[0]</span><br><span class="line">		low=1;high=i-1;                       //设置折半查找范围</span><br><span class="line">		while(low&lt;=high){                     //折半查找</span><br><span class="line">			mid=(low+high)/2;                 //取中间点</span><br><span class="line">			if(A[mid]&gt;A[0]) high=mid-1;       //查找左半子表</span><br><span class="line">			else low=mid+1;                   //查找右半子表</span><br><span class="line">		}</span><br><span class="line">		for(j=i-1;j&gt;high+1;--j) A[j+1]=A[j];  //统一后移元素</span><br><span class="line">		A[high+1]=A[0];</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>时间复杂度O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）  ，是一种稳定排序方法  </p>
<h2 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h2><p>基本思想：先将待排序表分割成若干形如L[i,i+d,i+2d,…,i+kd]的特殊子表，即把相隔某个“增量”的记录组成一个子表，对各个子表分别进行直接插入排序，当整个表中的元素已呈“基本有序”时，在对整个记录进行一次直接插入排序。  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void ShellSort(ElemType A[],int n){</span><br><span class="line">	int dk,i,j;</span><br><span class="line">	for(dk=n/2;dk&gt;=1;dk=dk/2)      //增量变化</span><br><span class="line">		for(i=dk+1;i&lt;=n;++i)</span><br><span class="line">			if(A[i]&lt;A[i-dk]){      //需将A[i]插入有序增量子表</span><br><span class="line">				A[0]=A[i];         //暂存A[0]</span><br><span class="line">				for(j=i-dk;j&gt;0&amp;&amp;A[0]&lt;A[j];j-=dk)</span><br><span class="line">					A[j+dk]=A[j];  //记录后移，查找插入的位置</span><br><span class="line">				A[j+dk]=A[0];      //插入</span><br><span class="line">			}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>空间效率：O（1）<br>时间效率：n在某个特定范围内，O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="3.59ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1586.7 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="TeXAtom" transform="translate(633,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"/><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" transform="translate(778,0)"/></g></g></g></g></g></svg></mjx-container>)；最坏情况O(<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>);不稳定</p>
<h1 id="交换排序"><a href="#交换排序" class="headerlink" title="交换排序"></a>交换排序</h1><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void BubbleSort(ElemType A[],int n){</span><br><span class="line">	for(int i=0;i&lt;n-1;i++){</span><br><span class="line">		bool flag =false;           //表示本趟冒泡是否发生交换的标志</span><br><span class="line">		for(int j=n-1;j&gt;i;j--){     //一趟冒泡过程</span><br><span class="line">			if(A[j-1]&gt;A[j]){        //若为逆序</span><br><span class="line">				swap(A[j-1],A[j]);  //交换</span><br><span class="line">				flag=true;</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">		if(flag==false) return ;</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>空间效率：O（1）<br>时间效率：最好情况O（n），最坏情况O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）。稳定   </p>
<h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void QucikSort(ELemType A[],int low,int high){</span><br><span class="line">	if(low&lt;high){           //递归</span><br><span class="line">		int pivotpos=Partition(A,low,high);</span><br><span class="line">		QucikSort(A,low,pivotpos-1);</span><br><span class="line">		QuickSort(A,pivotpos+1,high);</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line">int Partition(ElemType A[],int low,int high){</span><br><span class="line">	ElemType pivot=A[low];  //将当前表中第一个元素设为枢轴，对表进行划分</span><br><span class="line">	while(low&lt;high){        //循环跳出</span><br><span class="line">		while(low&lt;high&amp;&amp;A[high]&gt;=pivot) --high;</span><br><span class="line">		A[low]=A[high];     //将比枢轴小的元素移动到左端</span><br><span class="line">		while(low&lt;high&amp;&amp;A[high]&lt;=pivot) ++low;</span><br><span class="line">		A[high]=A[low];     //将比枢轴大的元素移动到左端</span><br><span class="line">	}</span><br><span class="line">	A[low]=pivot;           //枢轴元素怒存放到最终位置</span><br><span class="line">	return low;             //返回存放枢轴的最终位置</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>空间效率：O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="5.196ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2296.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1696.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）<br>时间效率：最好情况O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2896.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2296.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>），最坏情况O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）。不稳定<br><em>递归次数与每次划分后得到的分区的处理顺序无关，与各元素的初始排列有关</em>  </p>
<h1 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h1><h2 id="简单选择排序"><a href="#简单选择排序" class="headerlink" title="简单选择排序"></a>简单选择排序</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void SelectSort(ElemType A[],int n){  // 每次选择最小的元素放到固定位置</span><br><span class="line">	for(int i=0;i&lt;n-1;i++){</span><br><span class="line">		int min=i;</span><br><span class="line">		for(int j=i+1;j&lt;n;j++)</span><br><span class="line">			if(A[j]&lt;A[min]) min=j;</span><br><span class="line">		if(min!=i) swap(A[i],A[min]);</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>空间效率：O（1）<br>时间效率：最好情况O（n），最坏情况O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）。不稳定   </p>
<h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><p>堆：父节点大于所有子节点或者小于所有子节点的完全二叉树</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void BuildMaxHeap(ElemType A[],int len){</span><br><span class="line">	for(int i=len/2;i&gt;0;i--) HeadAdjust(A,i,len);  //反复调整堆</span><br><span class="line">}</span><br><span class="line">void HeadAdjust(ElemType A[],int k,int len){</span><br><span class="line">//函数HeadAdjust将元素k为根的子树进行调整</span><br><span class="line">	A[0]=A[k];                                     //暂存子树的根节点</span><br><span class="line">	for(int i=2*k;i&lt;=len;i*=2){                    //向下筛选</span><br><span class="line">		if(i&lt;len&amp;&amp;A[i]&lt;A[i+1]) i++;</span><br><span class="line">		if(A[0]&gt;=A[i]) break;</span><br><span class="line">		else{</span><br><span class="line">			A[k]=A[i];                             //将A[i]调整到双亲结点</span><br><span class="line">			k=i;                                   //继续向下筛选</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	A[k]=A[0];                                     //将筛选出的值放入最终位置</span><br><span class="line">}</span><br><span class="line">void HeapSort(ElemType A[],int len){</span><br><span class="line">	BuildMaxHeap(A,len);                           //初始建堆</span><br><span class="line">	for(int i=len;i&gt;1;i--){                </span><br><span class="line">		Swap(A[i],A[1]);                           //和堆底元素交换</span><br><span class="line">		HeadAdjust(A,1,i-1);                       //调整，把剩余元素整理成堆</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>空间效率：O（1）<br>时间效率：O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2896.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2296.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）。不稳定   </p>
<h1 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h1><p>将两个或两个以上的有序表合并成一个新的有序表  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">ElemType *B=(ElemType *)malloc((n+1)*sizeof(ElemType));</span><br><span class="line">void Merge(ElemType A[],int low,int mid,int high){</span><br><span class="line">	int i,j,k;</span><br><span class="line">	for(k=low;k&lt;=high;k++)</span><br><span class="line">		B[k]=A[k];                   //将A中所有元素复制到B中</span><br><span class="line">	for(i=low,j=mid+1,k=i;i&lt;=mid&amp;&amp;j&lt;=high;k++){</span><br><span class="line">		if(B[i]&lt;=B[j]) A[k]=B[i++];  //比较B的左右两端中的元素</span><br><span class="line">		else A[k]=B[j++];            //将较小值复制到A中</span><br><span class="line">	}</span><br><span class="line">	while(i&lt;=mid) A[k++]=B[i++];     //若第一个表未检测完，复制</span><br><span class="line">	while(j&lt;=high) A[k++]=B[j++];    //若第二个表未检测完，复制</span><br><span class="line">}</span><br><span class="line">void MergeSort(ElemType A[],int low,int high){</span><br><span class="line">	if(low&lt;high){</span><br><span class="line">		int mid=(low+high)/2;        //从中间划分两个子序列</span><br><span class="line">		MergeSort(A,low,mid);        //对左侧子序列进行递归排序</span><br><span class="line">		MergeSort(A,mid+1,high);     //对右侧子序列进行递归排序</span><br><span class="line">		Merge(A,low,mid,high);       //排序</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>空间效率：O（n）<br>时间效率：O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2896.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2296.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）。稳定   </p>
<h1 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h1><p>每次排序根据数字中的每一位进行排序<br>空间效率：O（r）<br>时间效率：O（d(n+r)）。稳定,与序列的初始状态无关  </p>
<table>
<thead>
<tr>
<th>算法种类</th>
<th>最好情况</th>
<th>平均情况</th>
<th>最坏情况</th>
<th>空间复杂度</th>
<th>是否稳定</th>
</tr>
</thead>
<tbody><tr>
<td>直接插入排序</td>
<td>O（n）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（1）</td>
<td>是</td>
</tr>
<tr>
<td>冒泡排序</td>
<td>O（n）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（1）</td>
<td>是</td>
</tr>
<tr>
<td>简单选择排序</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（1）</td>
<td>否</td>
</tr>
<tr>
<td>希尔排序</td>
<td></td>
<td></td>
<td></td>
<td>O（1）</td>
<td>否</td>
</tr>
<tr>
<td>快速排序</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2896.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2296.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2896.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2296.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="5.196ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2296.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1696.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>否</td>
</tr>
<tr>
<td>堆排序</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2896.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2296.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2896.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2296.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2896.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2296.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（1）</td>
<td>否</td>
</tr>
<tr>
<td>2路归并排序</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2896.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2296.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2896.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2296.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="6.553ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2896.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(600,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(898,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1383,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2296.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）</td>
<td>O（n）</td>
<td>是</td>
</tr>
<tr>
<td>基数排序</td>
<td>O（d(n+r)）</td>
<td>O（d(n+r)）</td>
<td>O（d(n+r)）</td>
<td>O（r）</td>
<td>是</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>第三章-串</title>
    <url>/2024/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%B8%B2/</url>
    <content><![CDATA[<p>定义：由零个或多个字符组成的有限序列。记为S=‘a1a2······an’，n=0时称为空串。<br>串中任意多个连续的字符组成的子序列称为该串的<code>子串</code>，包含子串的串称为<code>主串</code>。<br>当两个串的长度相等且每个对应位置的字符都相等时，称两个串是相等的。<br><code>串的逻辑结构和线性表极为相似，区别仅在于串的数据对象限定为字符集。</code></p>
<h3 id="串的存储结构"><a href="#串的存储结构" class="headerlink" title="串的存储结构"></a>串的存储结构</h3><h4 id="定长顺序存储表示"><a href="#定长顺序存储表示" class="headerlink" title="定长顺序存储表示"></a>定长顺序存储表示</h4><p>用一组地址连续的存储单元来存储串值的字符序列。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#define MAXLEN 255    //预定义最大串长为255</span><br><span class="line">typedef struct{</span><br><span class="line">	char ch[MAXLEN];  //每个分量存储一个字符</span><br><span class="line">	int length;       //串的实际长度</span><br><span class="line">}SString</span><br></pre></td></tr></table></figure></div>
<p>串的实际长度只能小于或等于MAXLEN，超过预定义长度的串值会被舍去，称为<code>截断</code>.</p>
<h4 id="堆分配存储表示"><a href="#堆分配存储表示" class="headerlink" title="堆分配存储表示"></a>堆分配存储表示</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">typedef struct{</span><br><span class="line">	char *ch;     //按串长分配存储区，ch指向串的基地址</span><br><span class="line">	int length;   //串的长度</span><br><span class="line">}HString</span><br></pre></td></tr></table></figure></div>
<h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><ul>
<li>StrAssign (&amp;T, chars):赋值操作。把串T赋值为 chars。</li>
<li>StrCopy (&amp;T,S):复制操作。由串S复制得到串T。</li>
<li>StrEmpty (S):判空操作。若S为空串，则返回TRUE,否则返回FALSE。</li>
<li>StrCompare (S,T):比较操作。若S&gt;T,则返回值=0；若S=T,则返回值=0；若S&lt;T, 则返回值&lt;0。</li>
<li>StrLength (S):求串长。返回串S的元素个数。</li>
<li>SubString (&amp;Sub, S, pos, len):求子串。用Sub返回串S的第pos个字符起长度为 len的子串。</li>
<li>Concat (&amp;T,S1,S2)：串联接。用T返回由S1和S2联接而成的新串。</li>
<li>Index(S,T):定位操作。若主串S中存在与串T值相同的子串，则返回它在主串S中第一次出现的位置；否则函数值为0。</li>
<li>ClearString (&amp;S):清空操作。将S清为空串。</li>
<li>DestroyString (&amp; S)：销毁串。将串 S 销毁。</li>
</ul>
<h3 id="简单模式匹配"><a href="#简单模式匹配" class="headerlink" title="简单模式匹配"></a>简单模式匹配</h3><p>子串的定位操作通常称为串的模式匹配，他求的是子串（模式串）在主串中的位置，以下给出暴力匹配算法。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">int Index(SString S,SString T){</span><br><span class="line">	int i=1,j=1;</span><br><span class="line">	while(i&lt;=S.length &amp;&amp; j&lt;=T.length){</span><br><span class="line">		if(S.ch[i] == T.ch[j]){</span><br><span class="line">			++i;++j;</span><br><span class="line">		}</span><br><span class="line">		else{</span><br><span class="line">			i=i-j+2;j=1</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	if(j&gt;T.length) return i-T.length;</span><br><span class="line">	else return 0;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<h3 id="KMP算法"><a href="#KMP算法" class="headerlink" title="KMP算法"></a>KMP算法</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">//得到部分匹配表next[]</span><br><span class="line">void get_next(SString T,int next[]){</span><br><span class="line">	int i=1,j=0;                     //i是字符串遍历索引；j是与后缀匹配长度的索引</span><br><span class="line">	next[1]=0;</span><br><span class="line">	while(i&lt;T.length){</span><br><span class="line">		if(j==0||T.ch[i] == T.ch[j]){//先评判前面是否存在匹配长度，不存在则i所指的位置的匹配长度j重新回到头部位置；若存在则继续评判该i位置元素是否与前面匹配成功的长度的位置j元素是否相等，如果相等，则i下一个元素的后缀匹配长度为j，但是部分匹配成功索引需要对该长度位置的下一个位置进行比对，所以next对应的元素应该为长度加1；不相等，则回到成功匹配长度位置所对应的next元素进行比对。</span><br><span class="line">			++i;++j;</span><br><span class="line">			next[i]=j;</span><br><span class="line">		}else{</span><br><span class="line">			j=next[j];</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">int Index_KMP(SString S,SString T,int next[]){</span><br><span class="line">	int i=1,j=1;</span><br><span class="line">	while(i&lt;=S.length&amp;&amp;j&lt;=T.length){</span><br><span class="line">		if(j==0||S.ch[i]==T.ch[i]){</span><br><span class="line">			++i;++j;</span><br><span class="line">		}else{</span><br><span class="line">			j=next[j];</span><br><span class="line">		}</span><br><span class="line">		if(j&gt;T.length) return i-T.length;</span><br><span class="line">		else return 0;</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>KMP算法时间复杂度为O(m+n),KMP算法仅在主串与子串有很多“部分匹配”是才显得比普通算法快得多</p>
<h3 id="KMP算法优化"><a href="#KMP算法优化" class="headerlink" title="KMP算法优化"></a>KMP算法优化</h3><p>当相同字符在字符串中连续不间断出现很多次时，需要改进next数组，只需要添加多一个判断进行判断当前位置是否与匹配长度位置是否相等。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void get_nextval(SString T,int nextval[])</span><br><span class="line">{</span><br><span class="line">	int i=1;j=0;</span><br><span class="line">	nextval[1]=0;</span><br><span class="line">	while(i&lt;T.length){</span><br><span class="line">		if(j==0||T.ch[i]==T.ch[j]){</span><br><span class="line">			++i;++j;</span><br><span class="line">			if(T.ch[i]!=T.ch[j]) nextval[i]=j;</span><br><span class="line">			else nextval[i]=nextval[j];</span><br><span class="line">		}</span><br><span class="line">		else{</span><br><span class="line">			j=nextval[j];</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>第二章-栈、队列和数组</title>
    <url>/2024/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h1 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h1><p>定义：只允许在一端进行插入或删除操作的 <strong>线性表</strong><br><code>n个不同元素进栈，出战元素不同排列个数为</code><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.912ex;" xmlns="http://www.w3.org/2000/svg" width="7.565ex" height="2.869ex" role="img" focusable="false" viewbox="0 -864.9 3343.8 1267.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(707.2,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mrow" transform="translate(220,-345) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g><rect width="1527.9" height="60" x="120" y="220"/></g><g data-mml-node="msubsup" transform="translate(1767.9,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(845.3,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="TeXAtom" transform="translate(748,-295.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></g></svg></mjx-container></p>
<h4 id="顺序存储结构体"><a href="#顺序存储结构体" class="headerlink" title="顺序存储结构体"></a>顺序存储结构体</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#define MaxSize 50           //定义栈中元素的最大个数</span><br><span class="line">typedef struct{</span><br><span class="line">	Elemtype data[MaxSize];  //存放栈中元素</span><br><span class="line">	int top;                 //栈顶元素</span><br><span class="line">}SqStack;</span><br></pre></td></tr></table></figure></div>
<p><code>后进先出（Last In First Out，LIFO）</code></p>
<h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><ul>
<li>InitStack(&amp;S):初始化空栈</li>
<li>StackEmpty(S):判断栈是否为空，空返回true</li>
<li>Push(&amp;S,x)：进栈，若栈S未满，则将x加入使之成为新栈顶。</li>
<li>Pop(&amp;S,&amp;x)：岀栈，若栈S非空，则弹出栈顶元素，并用x返回。</li>
<li>GetTop (S, &amp;x):读栈顶元素，若栈S非空，则用x返回栈顶元素。</li>
<li>DestroyStack(&amp;S)：销毁栈，并释放栈S占用的存储空间</li>
</ul>
<h4 id="共享栈"><a href="#共享栈" class="headerlink" title="共享栈"></a>共享栈</h4><p>让两个顺序栈共享一个一维数组空间，将两个栈的栈底分别设置在共享空间的两端，两个栈顶向共享空间的中间延伸。<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E6%95%B0%E7%BB%84/shareStack.png"><br><code>共享栈是为了更有效地利用存储空间，两个栈的空间相互调节，只有在整个存储空间被占满 时才发生上溢。</code></p>
<h4 id="链式存储结构体"><a href="#链式存储结构体" class="headerlink" title="链式存储结构体"></a>链式存储结构体</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">typedef struct LinkNode{</span><br><span class="line">	ElemType data;          //数据域</span><br><span class="line">	struct Linknode *next;  //指针域</span><br><span class="line">}*LiStack;                  //栈类型定义</span><br></pre></td></tr></table></figure></div>
<p><code>链栈的优点是便于多个栈共享存储空间和提高其效率，且不存 在栈满上溢的情况。</code></p>
<h1 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h1><p>定义：只允许在表的一端进行插入，而在表的另一端进行删除的线性表。<br><code>先进先出（First In First Out，FIFO）</code><br><code>栈和队列具有相同的逻辑结构，都是线性表。</code>  </p>
<h4 id="基本操作-1"><a href="#基本操作-1" class="headerlink" title="基本操作"></a>基本操作</h4><ul>
<li>InitQueue (&amp;Q):初始化队列，构造一个空队列Q。</li>
<li>QueueEmpty (Q)：判队列空，若队列Q为空返回true,否则返回false。</li>
<li>EnQueue (&amp;Q, x)：入队，若队列Q未满，将x加入，使之成为新的队尾。</li>
<li>DeQueue (&amp;Q, &amp;x):岀队，若队列Q非空，删除队头兀素，并用x返回。</li>
<li>GetHead(Q,&amp;x)：读队头元素，若队列Q非空，则将队头元素赋值给x。</li>
</ul>
<h4 id="顺序存储"><a href="#顺序存储" class="headerlink" title="顺序存储"></a>顺序存储</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">#define MaxSize 50</span><br><span class="line">typedef struct {</span><br><span class="line">	ElemType data[MaxSize];  //用数组存放队列元素</span><br><span class="line">	int front,rear;          //队头指针和队尾指针</span><br><span class="line">}SqQueue;</span><br></pre></td></tr></table></figure></div>
<p><strong>队列判空条件：Q.rear == Q.front == 0  但不能用Q.rear == MaxSize</strong></p>
<h4 id="循环队列"><a href="#循环队列" class="headerlink" title="循环队列"></a>循环队列</h4><p>定义：存储队列元素的表从逻辑上视为一个环<br><code>当队首指针Q.front=MaxSize-l后，再前进一个位置就自动到0,这可以利用除法取余运算(％)来实现。</code><br>队空条件：Q.front == Q.rear<br>判断队空还是队满的处理方式：</p>
<ul>
<li>牺牲一个单元来区分队空和队满，入队时少用一个队列单元，这是一种较为普遍的做法, 约定以“队头指针在队尾指针的下一位置作为队满的标志”<ul>
<li>队满条件：(Q. rear+1) %MaxSize == Q. fro nt。</li>
<li>队空条件仍：Q. front == Q.rear。</li>
<li>队列中元素的个数：(Q. rear-Q.front+MaxSize) % MaxSize。</li>
</ul>
</li>
<li>类型中增设表示元素个数的数据成员。这样，队空的条件为Q. size== 0；队满的条件为 Q. size == MaxSize。这两种情况都有 Q. front == Q.rear。</li>
<li>类型中增设tag数据成员，以区分是队满还是队空。tag等于0时，若因删除导致 Q. front == Q. rear,则为队空；tag等于1时，若因插入导致Q. front == Q. rear, 则为队满。</li>
</ul>
<h4 id="链式存储"><a href="#链式存储" class="headerlink" title="链式存储"></a>链式存储</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">typedef struct LinkNode{  //链式队列结点</span><br><span class="line">	ElemType data;</span><br><span class="line">	struct LinkNode *next;</span><br><span class="line">}LinkNode;</span><br><span class="line">typedef struct {            //链式队列</span><br><span class="line">	LinkNOde *front,*rear;  //队列的对头和队尾指针</span><br><span class="line">}LinkQueue;</span><br></pre></td></tr></table></figure></div>
<p><code>用单链表表示的链式队列特别适合于数据元素变动比较 大的情形，而且不存在队列满且产生溢出的问题。</code></p>
<h4 id="双端队列"><a href="#双端队列" class="headerlink" title="双端队列"></a>双端队列</h4><p>定义：允许两端都可以进行入队和出队操作的队列。其元素的逻辑结构仍是线性结构。将队列的两端分别称为前端和后端，两端都可以入队和出队。</p>
<ul>
<li>输出受限的双端队列：允许在一端进行插入和删除，但在另一端只允许插入的双端队列称为 输出受限的双端队列；</li>
<li>输入受限的双端队列：允许在一端进行插入和删除，但在另一端只允许删除的双端队列称为 输入受限的双端队列</li>
</ul>
<h1 id="栈的括号匹配应用"><a href="#栈的括号匹配应用" class="headerlink" title="栈的括号匹配应用"></a>栈的括号匹配应用</h1><p>算法思路：</p>
<ol>
<li>初始设置一个空栈，顺序读入括号。</li>
<li>若是左括号，则存入栈中；</li>
<li>若是右括号，则先检查栈顶的括号是否于其匹配，若匹配，则弹栈；若不匹配，直接输出不合法；直到栈空。</li>
</ol>
<h1 id="栈在表达式求值中的应用"><a href="#栈在表达式求值中的应用" class="headerlink" title="栈在表达式求值中的应用"></a>栈在表达式求值中的应用</h1><p>基本思路：先将中缀表达式转换为后缀表达式，再对后缀表达式求值。</p>
<h2 id="中缀表达式转后缀表达式"><a href="#中缀表达式转后缀表达式" class="headerlink" title="中缀表达式转后缀表达式"></a>中缀表达式转后缀表达式</h2><ol>
<li>初始两个栈，一个栈op用于存储运算符号，一个栈存储后缀表达式</li>
<li>遍历中缀表达式<ol>
<li>遇到操作符，直接存入后缀表达式栈中；</li>
<li>遇到括号界限符，左括号直接加入操作符栈中，遇到右括号将操作符栈中的左括号以上的运算符依次弹出至后缀表达式栈中；</li>
<li>遇到操作符，比对栈顶运算符，如若栈顶运算符优先级更高（除括号界限符），则从栈顶开始，依此弹出栈中优先级高于或等于当前运算符的所有运算符至后缀表达式栈中，再将该运算符压入后缀表达式栈中；否则直接该运算符压入后缀表达式栈中。</li>
</ol>
</li>
</ol>
<table>
<thead>
<tr>
<th align="right">待处理序列</th>
<th>op栈</th>
<th>后缀表达式</th>
<th>扫描项</th>
<th>操作说明</th>
</tr>
</thead>
<tbody><tr>
<td align="right">A+B*(C-D)-E/F</td>
<td></td>
<td></td>
<td>A</td>
<td>A加入中缀表达式</td>
</tr>
<tr>
<td align="right">+B*(C-D)-E/F</td>
<td></td>
<td>A</td>
<td>+</td>
<td>+压入op栈</td>
</tr>
<tr>
<td align="right">B*(C-D)-E/F</td>
<td>+</td>
<td>A</td>
<td>B</td>
<td>B加入中缀表达式</td>
</tr>
<tr>
<td align="right">*(C-D)-E/F</td>
<td>+</td>
<td>AB</td>
<td>*</td>
<td>*优先级高于栈顶，* 压入op栈</td>
</tr>
<tr>
<td align="right">(C-D)-E/F</td>
<td>+*(</td>
<td>AB</td>
<td>(</td>
<td>(直接入栈</td>
</tr>
<tr>
<td align="right">C-D)-E/F</td>
<td>+*(</td>
<td>AB</td>
<td>C</td>
<td>C加入中缀表达式</td>
</tr>
<tr>
<td align="right">-D)-E/F</td>
<td>+*(</td>
<td>ABC</td>
<td>-</td>
<td>栈顶为(,-压入op栈</td>
</tr>
<tr>
<td align="right">D)-E/F</td>
<td>+*(-</td>
<td>ABC</td>
<td>D</td>
<td>D加入中缀表达式</td>
</tr>
<tr>
<td align="right">)-E/F</td>
<td>+*(-</td>
<td>ABCD</td>
<td>)</td>
<td>遇到)，弹出-，删除(</td>
</tr>
<tr>
<td align="right">-E/F</td>
<td>+*</td>
<td>ABCD-</td>
<td>-</td>
<td>-优先级低于栈顶，依此弹出*、+，-加入中缀表达式</td>
</tr>
<tr>
<td align="right">E/F</td>
<td>-</td>
<td>ABCD-*+</td>
<td>E</td>
<td>E加入中缀表达式</td>
</tr>
<tr>
<td align="right">/F</td>
<td>-</td>
<td>ABCD-*+E</td>
<td>/</td>
<td>/优先级高于栈顶，/压入op栈</td>
</tr>
<tr>
<td align="right">F</td>
<td>-/</td>
<td>ABCD-*+E</td>
<td>F</td>
<td>F加入中缀表达式</td>
</tr>
<tr>
<td align="right"></td>
<td>-/</td>
<td>ABCD-*+EF</td>
<td></td>
<td>扫描完毕，弹出op栈中所有元素</td>
</tr>
<tr>
<td align="right"></td>
<td></td>
<td>ABCD-*+EF/-</td>
<td></td>
<td>结束</td>
</tr>
</tbody></table>
<h2 id="后缀表达式求值"><a href="#后缀表达式求值" class="headerlink" title="后缀表达式求值"></a>后缀表达式求值</h2><p><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E6%95%B0%E7%BB%84/calculate.png"><br><code>队列在计算机系统的作用：第一个方面是解决主机与外部设备之间速度不匹配的问题，第二个方面是解决由多用户引起的资源竞争问题。</code></p>
<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p><code>数组与线性表的关系：数组是线性表的推广</code></p>
<h2 id="存储方式"><a href="#存储方式" class="headerlink" title="存储方式"></a>存储方式</h2><p>一维数组A[0···n-1]存储结构关系式:<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="38.919ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 17202.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mi" transform="translate(681,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"/></g><g data-mml-node="mi" transform="translate(1444,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mo" transform="translate(2204,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msub" transform="translate(2593,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(562,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g></g><g data-mml-node="mo" transform="translate(3449,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(4115.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(5171.5,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mi" transform="translate(5852.5,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"/></g><g data-mml-node="mi" transform="translate(6615.5,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mo" transform="translate(7375.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msub" transform="translate(7764.5,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="mn" transform="translate(562,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g></g><g data-mml-node="mo" transform="translate(8730.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(9341.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(10341.5,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(10908.7,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"/></g><g data-mml-node="mi" transform="translate(11630.9,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mo" transform="translate(12311.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mn" transform="translate(12700.9,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g><g data-mml-node="mo" transform="translate(13478.7,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="mi" transform="translate(14534.5,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(15157.3,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"/></g><g data-mml-node="mi" transform="translate(16213.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(16813.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container><br>多维数组有两种映射方式：按行优先和按列优先</p>
<ul>
<li>按行优先：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex;" xmlns="http://www.w3.org/2000/svg" width="55.32ex" height="2.363ex" role="img" focusable="false" viewbox="0 -750 24451.4 1044.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mi" transform="translate(681,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"/></g><g data-mml-node="mi" transform="translate(1444,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mo" transform="translate(2204,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msub" transform="translate(2593,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(562,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g></g><g data-mml-node="mo" transform="translate(3936.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(4603.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(5659.4,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mi" transform="translate(6340.4,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"/></g><g data-mml-node="mi" transform="translate(7103.4,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mo" transform="translate(7863.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msub" transform="translate(8252.4,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(562,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g></g></g><g data-mml-node="mo" transform="translate(9768.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(10379.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mo" transform="translate(11379.5,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"/></g><g data-mml-node="mi" transform="translate(11657.5,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(12224.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"/></g><g data-mml-node="mo" transform="translate(12947,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(13336,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"/></g><g data-mml-node="mo" transform="translate(14134.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(15134.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(15634.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(16245.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(17245.9,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g><g data-mml-node="mo" transform="translate(17657.9,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"/></g><g data-mml-node="mo" transform="translate(18158.1,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"/></g><g data-mml-node="mi" transform="translate(18880.3,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mo" transform="translate(19561.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mn" transform="translate(19950.3,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g><g data-mml-node="mo" transform="translate(20728.1,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="mi" transform="translate(21783.9,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(22406.6,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"/></g><g data-mml-node="mi" transform="translate(23462.4,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(24062.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container></li>
<li>按列优先：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex;" xmlns="http://www.w3.org/2000/svg" width="55.32ex" height="2.363ex" role="img" focusable="false" viewbox="0 -750 24451.4 1044.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mi" transform="translate(681,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"/></g><g data-mml-node="mi" transform="translate(1444,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mo" transform="translate(2204,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msub" transform="translate(2593,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(562,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g></g><g data-mml-node="mo" transform="translate(3936.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(4603.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(5659.4,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mi" transform="translate(6340.4,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"/></g><g data-mml-node="mi" transform="translate(7103.4,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mo" transform="translate(7863.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msub" transform="translate(8252.4,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(562,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g></g></g><g data-mml-node="mo" transform="translate(9768.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(10379.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mo" transform="translate(11379.5,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"/></g><g data-mml-node="mi" transform="translate(11657.5,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g><g data-mml-node="mo" transform="translate(12291.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"/></g><g data-mml-node="mo" transform="translate(13014,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(13403,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"/></g><g data-mml-node="mo" transform="translate(14201.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(15201.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(15701.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(16312.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(17312.9,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(17657.9,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"/></g><g data-mml-node="mo" transform="translate(18158.1,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"/></g><g data-mml-node="mi" transform="translate(18880.3,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mo" transform="translate(19561.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mn" transform="translate(19950.3,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g><g data-mml-node="mo" transform="translate(20728.1,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="mi" transform="translate(21783.9,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(22406.6,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"/></g><g data-mml-node="mi" transform="translate(23462.4,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(24062.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container></li>
</ul>
<h2 id="压缩存储"><a href="#压缩存储" class="headerlink" title="压缩存储"></a>压缩存储</h2><ol>
<li>对称矩阵：上三角区元素与下三角区对应元素相等<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E6%95%B0%E7%BB%84/cemetry_metrix.png"></li>
<li>三角矩阵：上三角区或者下三角区元素均为同一常量(图为下三角矩阵对应存储关系)<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E6%95%B0%E7%BB%84/tringle_metrix.png"></li>
<li>三对角矩阵：对于n阶矩阵A中的任意一个元素<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex;" xmlns="http://www.w3.org/2000/svg" width="3.04ex" height="1.663ex" role="img" focusable="false" viewbox="0 -441 1343.9 735.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(562,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g></g></g></g></svg></mjx-container>,当|i-j|&gt;1时，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex;" xmlns="http://www.w3.org/2000/svg" width="7.189ex" height="2.173ex" role="img" focusable="false" viewbox="0 -666 3177.4 960.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(562,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="mi" transform="translate(623,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g></g></g><g data-mml-node="mo" transform="translate(1621.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mn" transform="translate(2677.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g></g></g></svg></mjx-container>;由此得出对应的一维矩阵下标<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex;" xmlns="http://www.w3.org/2000/svg" width="15.839ex" height="2.032ex" role="img" focusable="false" viewbox="0 -694 7000.9 898"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mo" transform="translate(798.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mn" transform="translate(1854.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mo" transform="translate(2576.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"/></g><g data-mml-node="mi" transform="translate(3299,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(3866.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(4866.4,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"/></g><g data-mml-node="mo" transform="translate(5500.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(6500.9,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"/></g></g></g></svg></mjx-container></li>
<li>稀疏矩阵：矩阵中非零元素的个数t，相对于矩阵元素的个数s来说非常少。对此，将非零元素及其相应的行和列构成一个三元组。<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E6%95%B0%E7%BB%84/small_metrix.png"></li>
</ol>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>第六章-查找</title>
    <url>/2024/10/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E6%9F%A5%E6%89%BE/</url>
    <content><![CDATA[<p>平均查找长度：在查找过程中，一次查找的长度是指需要比较的关键字次数，而平均查找长度则是所有查找过程中进行关键字的比较次数的平均值：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.777ex;" xmlns="http://www.w3.org/2000/svg" width="17.814ex" height="2.563ex" role="img" focusable="false" viewbox="0 -789.6 7873.8 1132.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"/></g><g data-mml-node="mi" transform="translate(750,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="mi" transform="translate(1395,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mo" transform="translate(2353.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="munderover" transform="translate(3409.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"/></g><g data-mml-node="mi" transform="translate(1089,477.1) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g><g data-mml-node="msub" transform="translate(5862.9,0)"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"/></g><g data-mml-node="mi" transform="translate(675,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="msub" transform="translate(6831.8,0)"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(748,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>。其中n是查找表的长度；Pi是查找第i个数据元素的概率；Ci是找到第i个数据元素所需进行的比较次数。  </p>
<h1 id="顺序查找"><a href="#顺序查找" class="headerlink" title="顺序查找"></a>顺序查找</h1><ul>
<li>一般线性表的顺序查找：从线性表的一端开始，逐个检查关键字是否满足给定的条件，引入哨兵的目的是使循环不必判断数组是否越界。当每个元素的查找概率相同时，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="14.235ex" height="2.746ex" role="img" focusable="false" viewbox="0 -868.9 6291.7 1213.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"/></g><g data-mml-node="mi" transform="translate(750,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="msub" transform="translate(1395,0)"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="TeXAtom" transform="translate(331,-176.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">成</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">功</text></g></g></g><g data-mml-node="mo" transform="translate(3468,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mfrac" transform="translate(4523.8,0)"><g data-mml-node="mrow" transform="translate(220,398) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g><g data-mml-node="mn" transform="translate(707.2,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><rect width="1527.9" height="60" x="120" y="220"/></g></g></g></svg></mjx-container> <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.72ex;" xmlns="http://www.w3.org/2000/svg" width="16.356ex" height="2.34ex" role="img" focusable="false" viewbox="0 -716 7229.2 1034.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"/></g><g data-mml-node="mi" transform="translate(750,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="msub" transform="translate(1395,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="TeXAtom" transform="translate(714,-176.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">失</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">败</text></g></g></g><g data-mml-node="mo" transform="translate(3851,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(4906.8,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(5729,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(6729.2,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container></li>
<li>有序表的顺序查找：前提是线性表有序，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.912ex;" xmlns="http://www.w3.org/2000/svg" width="21.422ex" height="2.532ex" role="img" focusable="false" viewbox="0 -716 9468.5 1119"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"/></g><g data-mml-node="mi" transform="translate(750,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="msub" transform="translate(1395,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="TeXAtom" transform="translate(714,-176.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">不</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">成</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">功</text></g></g></g><g data-mml-node="mo" transform="translate(4558.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mfrac" transform="translate(5613.9,0)"><g data-mml-node="mi" transform="translate(220,394) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(255.4,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><rect width="624.3" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(6700.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mfrac" transform="translate(7700.6,0)"><g data-mml-node="mi" transform="translate(671.8,394) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mrow" transform="translate(220,-345) scale(0.707)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g><rect width="1527.9" height="60" x="120" y="220"/></g></g></g></svg></mjx-container></li>
</ul>
<h1 id="折半查找"><a href="#折半查找" class="headerlink" title="折半查找"></a>折半查找</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">int Binary_Search(SSTable L,ElemType key){</span><br><span class="line">	int low=0,high=L.TableLen-1,mid;</span><br><span class="line">	while(low&lt;=high){                          </span><br><span class="line">		mid = (low+high)/2;                    //取中间位置</span><br><span class="line">		if(L.elem[mid]==key) return mid;       //查找成功则返回所在位置</span><br><span class="line">		else if (L.elem[mid]&gt;key) high=mid-1;  //从前半部分继续查找</span><br><span class="line">		else low=mid+1;                        //从后半部分继续查找</span><br><span class="line">	}</span><br><span class="line">	return -1;                                 //查找失败，返回-1</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>折半查找可以使用二叉树进行描述，称为判定树。h是树的高度，并且元素个数为n是树高h=<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="12.111ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 5353 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"/></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(576,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1061,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1974.6,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(1211.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(2211.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(2711.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g><g data-mml-node="mo" transform="translate(5075,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"/></g></g></g></svg></mjx-container> 所以<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.72ex;" xmlns="http://www.w3.org/2000/svg" width="25.851ex" height="2.417ex" role="img" focusable="false" viewbox="0 -750 11426.2 1068.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"/></g><g data-mml-node="mi" transform="translate(750,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="msub" transform="translate(1395,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="TeXAtom" transform="translate(714,-176.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">成</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">功</text></g></g></g><g data-mml-node="mo" transform="translate(3851,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(4906.8,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(5204.8,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(5689.8,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6603.3,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(1211.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(2211.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(2711.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g><g data-mml-node="mo" transform="translate(9926,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(10926.2,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container></p>
<h1 id="分块查找"><a href="#分块查找" class="headerlink" title="分块查找"></a>分块查找</h1><p>将查找表分为若干个子块。块内元素可以无序，但块间的元素是有序的，即第一个块中的最大关键字小于第二个块中的所有记录的关键字，以此类推。再建立一个索引表，索引表中的每个元素含有各块的最大关键字和各块中的第一个元素的地址，索引表按关键字有序排列。<br>分块查找的平均查找长度为索引查找和块内查找的平均长度之和<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.72ex;" xmlns="http://www.w3.org/2000/svg" width="18.924ex" height="2.34ex" role="img" focusable="false" viewbox="0 -716 8364.3 1034.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"/></g><g data-mml-node="mi" transform="translate(750,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="msub" transform="translate(1395,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="TeXAtom" transform="translate(714,-176.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">成</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">功</text></g></g></g><g data-mml-node="mo" transform="translate(3851,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="msub" transform="translate(4906.8,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mn" transform="translate(714,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g><g data-mml-node="mo" transform="translate(6246.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="msub" transform="translate(7246.8,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mn" transform="translate(714,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container><br>将长度为n的查找表均匀地分为b块，每块有s个记录，在等概率情况下，若在块内和索引表中均采用顺序查找，则平均查找长度为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.797ex;" xmlns="http://www.w3.org/2000/svg" width="15.157ex" height="3.031ex" role="img" focusable="false" viewbox="0 -987.7 6699.6 1339.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"/></g><g data-mml-node="mi" transform="translate(750,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="mi" transform="translate(1395,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mo" transform="translate(2353.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mfrac" transform="translate(3409.6,0)"><g data-mml-node="mrow" transform="translate(220,398) scale(0.707)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="mn" transform="translate(502,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(905.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(1683.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(2183.6,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="mo" transform="translate(2652.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(3430.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mrow" transform="translate(1302.4,-345) scale(0.707)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g></g><rect width="3050" height="60" x="120" y="220"/></g></g></g></svg></mjx-container></p>
<h1 id="二叉排序树"><a href="#二叉排序树" class="headerlink" title="二叉排序树"></a>二叉排序树</h1><ol>
<li>若左子树非空，则左子树上所有的结点值均小于根节点的值</li>
<li>若右子树非空，则右子树上所有的结点值均大于根节点的值</li>
<li>左、右子树也分别是一棵二叉排序树<br>显然上述规则进行查找是个递归过程。<br>从查找过程看，二叉排序树与二分查找相似。就平均性能而言，二叉排序树上的查找和二分查找差不多。但二分查找的判定树唯一，而二叉排序树的查找不唯一。</li>
</ol>
<h1 id="平衡二叉树（AVL）"><a href="#平衡二叉树（AVL）" class="headerlink" title="平衡二叉树（AVL）"></a>平衡二叉树（AVL）</h1><p>规定在插入和删除结点时，要保证任意结点的左、右子树高度差的绝对值不超过1.<br>平衡二叉树的插入情况：</p>
<ul>
<li>LL（右单旋转）</li>
<li>RR（左单旋转）</li>
<li>LR（先左后右旋转）</li>
<li>RL（先右后左旋转）</li>
</ul>
<p>平均查找长度为O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="5.196ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2296.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1696.6,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>）</p>
<h1 id="红黑树"><a href="#红黑树" class="headerlink" title="红黑树"></a>红黑树</h1><ul>
<li>每个结点不是红色就是黑色</li>
<li>叶结点都是黑色的</li>
<li>根结点是黑色的</li>
<li>不存在相邻的红结点</li>
<li>对每个结点，从该结点到任意一个叶结点的简单路径上，所含黑结点的数量相同</li>
<li>从根到叶结点的最长路径不大于最短路径的2倍</li>
<li>有n个内部结点的红黑树高度<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="16.304ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 7206.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"/></g><g data-mml-node="mo" transform="translate(853.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="mn" transform="translate(1909.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(2409.6,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(2707.6,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(3192.6,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4106.1,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(1211.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(2211.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(2711.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></g></svg></mjx-container></li>
<li>红黑树也是平衡二叉树</li>
</ul>
<h1 id="B树"><a href="#B树" class="headerlink" title="B树"></a>B树</h1><p>m阶B树是所有结点的平衡因子均等于0的m路平衡查找树  </p>
<ul>
<li>树中每个结点至多有m棵子树，即至多含有m-1个关键字</li>
<li>若根结点不是叶结点，则至少有两棵子树</li>
<li>除根结点外的所有非叶结点至少有【m/2】棵子树，即至少含有【m/2】-1个关键字</li>
<li>所有的叶结点都有出现在同一层次上，并且不带信息</li>
<li>B树的高度：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.8ex;" xmlns="http://www.w3.org/2000/svg" width="33.979ex" height="3.169ex" role="img" focusable="false" viewbox="0 -1047.1 15018.9 1400.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1963.8,0)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(1211.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(2211.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(2711.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g><g data-mml-node="mo" transform="translate(5342.1,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6397.8,0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"/></g></g><g data-mml-node="mo" transform="translate(7251.6,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="mi" transform="translate(8307.4,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(8605.4,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(9090.4,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(510,-176.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(878,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"/></g></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(10978.3,0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(989,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(1767,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(2267,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g><g data-mml-node="mn" transform="translate(982.3,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><rect width="2078.1" height="60" x="120" y="220"/></g></g><g data-mml-node="mo" transform="translate(13518.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(14518.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container><br><img lazyload src="/images/loading.svg" data-src="/2024/10/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E6%9F%A5%E6%89%BE/B_Tree.png"><br>B+树多出的特性：叶结点中将关键字按大小顺序排列，并且相邻叶结点按大小顺序相互连接起来</li>
</ul>
<h1 id="散列表"><a href="#散列表" class="headerlink" title="散列表"></a>散列表</h1><ul>
<li>直接定址法：直接取关键字的某个线性函数值为散列地址</li>
<li>除留余数法</li>
<li>数字分析法</li>
<li>平方取中法：取关键字的中间几位做为散列地址</li>
</ul>
<p>处理冲突的方法：</p>
<ul>
<li>开放定址法：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="19.19ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 8481.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mi" transform="translate(864,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(1435.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mo" transform="translate(2491.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(2880.5,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mo" transform="translate(3768.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(4157.5,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mi" transform="translate(4678.5,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"/></g><g data-mml-node="mi" transform="translate(5144.5,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(5634.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(6245.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="msub" transform="translate(7246,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(8092.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container><ul>
<li>线性探测法：当di=0，1，2，···，m-1.会导致大量元素在相邻的散列地址上堆积起来，大大降低了查找效率</li>
<li>平方探测法：当<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="49.313ex" height="2.452ex" role="img" focusable="false" viewbox="0 -833.9 21796.3 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(1124.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="msup" transform="translate(2180.5,0)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(3117.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="msup" transform="translate(3561.7,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(4498.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="mo" transform="translate(4942.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="msup" transform="translate(5720.9,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(6657.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="msup" transform="translate(7102.2,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(8038.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="mo" transform="translate(8483.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="msup" transform="translate(9261.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(10364.6,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"/></g><g data-mml-node="mo" transform="translate(11703.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="msup" transform="translate(12147.9,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mn" transform="translate(554,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(13105.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"/></g><g data-mml-node="mo" transform="translate(13550.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="msup" transform="translate(14328.2,0)"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mn" transform="translate(554,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(15285.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(15674.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">其</text></g><g data-mml-node="mi" transform="translate(16674.7,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">中</text></g><g data-mml-node="mi" transform="translate(17674.7,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mo" transform="translate(18473.5,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="mi" transform="translate(19529.3,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(20407.3,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"/></g></g><g data-mml-node="mn" transform="translate(20907.3,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mo" transform="translate(21407.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container>,m必须是可以表示为4k+3的素数</li>
<li>双散列法：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="31.851ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 14077.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mi" transform="translate(864,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(1435.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mo" transform="translate(2491.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(2880.5,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mo" transform="translate(3768.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(4157.5,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mi" transform="translate(4678.5,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"/></g><g data-mml-node="mi" transform="translate(5144.5,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(5634.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(6245.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(7246,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(7813.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"/></g><g data-mml-node="mi" transform="translate(8535.4,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"/></g><g data-mml-node="mi" transform="translate(9423.4,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="mi" transform="translate(9952.4,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="msub" transform="translate(10421.4,0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"/></g><g data-mml-node="mn" transform="translate(609,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(11433.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(11822.9,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mi" transform="translate(12343.9,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"/></g><g data-mml-node="mi" transform="translate(12809.9,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(13299.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(13688.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container></li>
<li>伪随机序列法</li>
</ul>
</li>
<li>拉链法（可以随便删除链表中已有元素）</li>
</ul>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>第四章-树</title>
    <url>/2024/08/11/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E6%A0%91/</url>
    <content><![CDATA[<p>定义：有且仅有一个特定的成为根的节点，存在n（n&gt;1）个节点时，其余节点可分为m个互不相交的有限集，每个集合又是树。<br><em>树的定义是递归的，树是一种递归的数据结构，树作为一种逻辑结构，同时也是一种分层结构</em></p>
<hr>
<h1 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h1><ul>
<li>从根节点A到结点K的唯一路径上的任意节点成为K的祖先。路径上最接近结点K的结点E称为K的双亲。拥有相同双亲的节点称为兄弟。</li>
<li>树中的一个结点的孩子个数称为该结点的度，树中结点的最大度数称为树的度。</li>
<li>度大于0的结点称为分支节点；度为0的结点称为叶节点</li>
<li>结点的层次从树根开始定义，根节点为第一层，它的子结点为第2层，以此类推。双亲在同一层的结点互为堂兄弟</li>
<li>结点的深度是从根节点开始自顶向下逐层累加</li>
<li>结点的高度是从叶节点开始自底向上逐层累加</li>
<li>树中结点的各子树从左到右是有次序的，不能互换，称为有序树；反之称为无序树</li>
<li>树中两个结点之间的路径是由这两个节点之间所经过的结点序列构成的，而路径长度是路径上所经过的边的个数</li>
<li>森林是m棵互不相交的树的集合，把树的根节点删去就变成了森林</li>
</ul>
<hr>
<h1 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h1><p>二叉树是有序树，可以为空二叉树或者由一个根结点和两个互不相交的被称为根的左子树和右子树组成。左子树和右子树同样也必须为二叉树。<br>二叉树与度为2的有序树的区别：</p>
<ul>
<li>度为2的树至少有三个节点，而二叉树可以为空</li>
<li>度为2的有序树的孩子的左右次序是相对于另一个孩子而言的，若某个结点只有一个孩子，则这个孩子就无需区分其左右次序，而二叉树无论其孩子是否为2，均需确定其左右次序，即二叉树的结点次序不是相对于另一个节点而言的，而是确定的。</li>
</ul>
<hr>
<h2 id="特殊的二叉树"><a href="#特殊的二叉树" class="headerlink" title="特殊的二叉树"></a>特殊的二叉树</h2><ol>
<li>满二叉树：一棵高度为h，且含有<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.137ex" height="2.117ex" role="img" focusable="false" viewbox="0 -853.7 2712.7 935.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"/></g></g><g data-mml-node="mo" transform="translate(1212.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(2212.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container>个结点的二叉树称为满二叉树，即树中的每层都含有最多的结点。</li>
<li>完全二叉树：高度为h、有n个结点的二叉树，当且仅当其每个结点都与高度为h的满二叉树中编号为1~n的结点一一对应。<ol>
<li>若<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.675ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 3834.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(622.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="mo" transform="translate(1678.6,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"/></g><g data-mml-node="mi" transform="translate(1956.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2556.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"/></g></g><g data-mml-node="mn" transform="translate(3056.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mo" transform="translate(3556.6,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"/></g></g></g></svg></mjx-container>,则结点i为分支结点，否则为叶节点</li>
<li>叶结点只可能出现在层次最大的两层上出现。对于最大层次中的叶结点，则依次排列在该层最左边的位置上</li>
<li>若有度为1的结点，则只可能有一个，并且该结点只有左孩子而没有右孩子</li>
<li>按层序编号后，一旦出现某结点（编号为i）为叶结点或只有左孩子，则编号大于i的结点均为叶结点</li>
<li>若n为奇数，则每个分支节点都有左孩子和右孩子；若n为偶数，则编号最大的分支结点（编号为n/2）只有左孩子，没有右孩子，其余分支结点左、右孩子都有</li>
<li>二叉树的叶结点与度为2的结点数的关系是只相差1</li>
</ol>
</li>
<li>二叉排序树：左子树上所有结点的关键字均小于根节点的关键字；右子树上的所有结点的关键字均大于根节点的关键字；左子树和右子树又各是一棵二叉排序树</li>
<li>平衡二叉树：树上任意一个结点的左子树和右子树的深度之差不超过1</li>
</ol>
<hr>
<h2 id="二叉树的性质"><a href="#二叉树的性质" class="headerlink" title="二叉树的性质"></a>二叉树的性质</h2><ol>
<li>非空二叉树上的叶结点等于度为2的结点数加1，即<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex;" xmlns="http://www.w3.org/2000/svg" width="11.604ex" height="1.881ex" role="img" focusable="false" viewbox="0 -666 5129.1 831.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g></g><g data-mml-node="mo" transform="translate(1314.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="msub" transform="translate(2370.1,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(3628.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(4629.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container></li>
<li>非空二叉树第k层上至多有<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="4.197ex" height="1.932ex" role="img" focusable="false" viewbox="0 -853.7 1855.1 853.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></g></g></svg></mjx-container>个结点</li>
<li>高度为h的二叉树至多有<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.137ex" height="2.117ex" role="img" focusable="false" viewbox="0 -853.7 2712.7 935.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"/></g></g><g data-mml-node="mo" transform="translate(1212.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(2212.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container>个结点</li>
<li>对完全二叉树按从上到下、从左到右的顺序依次编号1，2，3···，n，则有以下关系：<ol>
<li>当i&gt;1时，结点i的双亲的编号为【i/2】，即当i为偶数时，其双亲的编号为i/2，它是双亲的左孩子；当i为奇数时，其双亲的编号为（i-1）/2，它是双亲的右孩子。</li>
<li>当2i<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.312ex;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.751ex" role="img" focusable="false" viewbox="0 -636 778 774"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g></g></g></svg></mjx-container>n时，结点i的左孩子编号为2i，否则无左孩子；当2i+1<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.312ex;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.751ex" role="img" focusable="false" viewbox="0 -636 778 774"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g></g></g></svg></mjx-container>n时，结点i的右孩子编号为2i+1，否则无右孩子；</li>
<li>结点i所在的层次为【<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="4.619ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2041.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mi" transform="translate(1696.6,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g></g></svg></mjx-container>】+1</li>
</ol>
</li>
<li>具有n个结点的完全二叉树的高度为【<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="10.853ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 4797 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g><g data-mml-node="mo" transform="translate(1696.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(2085.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(2907.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(3908,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(4408,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container>】或【<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.956ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 3074.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g><g data-mml-node="mo" transform="translate(1696.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(2085.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(2685.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container>】+1</li>
</ol>
<h2 id="存储结构"><a href="#存储结构" class="headerlink" title="存储结构"></a>存储结构</h2><h2 id="二叉树的顺序存储是指用一组地址连续的存储单元依此从上而下、从左至右存储完全二叉树上的结点元素（完全二叉树和满二叉树采用顺序存储比较合适）；对于一般的二叉树，为了让数组下标能反映二叉树中结点之间的逻辑关系，只能添加一些并不存在的空结点，让其每个结点与完全二叉树上的结点相对照，再存储到一维数组的相应分量中。"><a href="#二叉树的顺序存储是指用一组地址连续的存储单元依此从上而下、从左至右存储完全二叉树上的结点元素（完全二叉树和满二叉树采用顺序存储比较合适）；对于一般的二叉树，为了让数组下标能反映二叉树中结点之间的逻辑关系，只能添加一些并不存在的空结点，让其每个结点与完全二叉树上的结点相对照，再存储到一维数组的相应分量中。" class="headerlink" title="  二叉树的顺序存储是指用一组地址连续的存储单元依此从上而下、从左至右存储完全二叉树上的结点元素（完全二叉树和满二叉树采用顺序存储比较合适）；对于一般的二叉树，为了让数组下标能反映二叉树中结点之间的逻辑关系，只能添加一些并不存在的空结点，让其每个结点与完全二叉树上的结点相对照，再存储到一维数组的相应分量中。    
  "></a>  二叉树的顺序存储是指用一组地址连续的存储单元依此从上而下、从左至右存储完全二叉树上的结点元素（完全二叉树和满二叉树采用顺序存储比较合适）；对于一般的二叉树，为了让数组下标能反映二叉树中结点之间的逻辑关系，只能添加一些并不存在的空结点，让其每个结点与完全二叉树上的结点相对照，再存储到一维数组的相应分量中。    
  </h2><pre><code>二叉链表的链式存储结构：
</code></pre>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">typedef struct BiNode{</span><br><span class="line">	ElemType data;                   //数据域</span><br><span class="line">	struct BiTNode *lchild,*rchild;  //左、右孩子指针</span><br><span class="line">}BiTNode,*BiTree;</span><br></pre></td></tr></table></figure></div>
<h2 id="在含有n个结点的二叉链表中含有n-1个空链域-二叉树的遍历-先序遍历-访问根节点-先序遍历左子树-先序遍历右子树-中序遍历-中序遍历左子树-访问根节点-中序遍历右子树-后序遍历-后序遍历左子树-后序遍历右子树-访问根节点"><a href="#在含有n个结点的二叉链表中含有n-1个空链域-二叉树的遍历-先序遍历-访问根节点-先序遍历左子树-先序遍历右子树-中序遍历-中序遍历左子树-访问根节点-中序遍历右子树-后序遍历-后序遍历左子树-后序遍历右子树-访问根节点" class="headerlink" title="在含有n个结点的二叉链表中含有n+1个空链域# 二叉树的遍历## 先序遍历+ 访问根节点+ 先序遍历左子树+ 先序遍历右子树## 中序遍历+ 中序遍历左子树+ 访问根节点+ 中序遍历右子树## 后序遍历+ 后序遍历左子树+ 后序遍历右子树+ 访问根节点"></a><code>在含有n个结点的二叉链表中含有n+1个空链域</code><br># 二叉树的遍历<br>## 先序遍历<br>+ 访问根节点<br>+ 先序遍历左子树<br>+ 先序遍历右子树<br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void PreOrder(BiTree T){</span><br><span class="line">	if(T!=NULL){</span><br><span class="line">		visit(T);             //访问根节点</span><br><span class="line">		PreOrder(T-&gt;lchild);  //递归遍历左子树</span><br><span class="line">		PreOrder(T-&gt;rchild);  //递归遍历右子树</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* 非递归实现 */</span><br><span class="line">void PreOrder(BiTree T){</span><br><span class="line">	InitStack(S);          //初始化栈S</span><br><span class="line">	BiTree p=T;            //p是遍历指针</span><br><span class="line">	while(p||IsEmpty(S)){  //栈不空或p不空时循环</span><br><span class="line">		if(p){             //一路向左</span><br><span class="line">			visit(p);      </span><br><span class="line">			Push(S,p);     //当前节点入栈</span><br><span class="line">			p=p-&gt;lchild;   //左孩子不空，一直向左走</span><br><span class="line">		}</span><br><span class="line">		else{              //出栈，并转向出栈结点的右子树</span><br><span class="line">			Pop(S,p);      //栈顶元素出栈，访问出栈结点</span><br><span class="line">			p=p-&gt;rchild;   //向右子树走，p赋值为当前节点的右孩子</span><br><span class="line">			//返回while循环继续进入if语句</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><br>## 中序遍历<br>+ 中序遍历左子树<br>+ 访问根节点<br>+ 中序遍历右子树<br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void InOrder(BiTree T){</span><br><span class="line">	if(T!=NULL){</span><br><span class="line">		InOrder(T-&gt;lchild);  //递归遍历左子树</span><br><span class="line">		visit(T);            //访问根节点</span><br><span class="line">		InOrder(T-&gt;rchild);  //递归遍历右子树</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* 非递归实现 */</span><br><span class="line">void InOrder(BiTree T){</span><br><span class="line">	InitStack(S);          //初始化栈S</span><br><span class="line">	BiTree p=T;            //p是遍历指针</span><br><span class="line">	while(p||IsEmpty(S)){  //栈不空或p不空时循环</span><br><span class="line">		if(p){             //一路向左</span><br><span class="line">			Push(S,p);     //当前节点入栈</span><br><span class="line">			p=p-&gt;lchild;   //左孩子不空，一直向左走</span><br><span class="line">		}</span><br><span class="line">		else{              //出栈，并转向出栈结点的右子树</span><br><span class="line">			Pop(S,p);      //栈顶元素出栈，访问出栈结点</span><br><span class="line">			visit(p);      //向右子树走，p赋值为当前节点的右孩子</span><br><span class="line">			p=p-&gt;rchild;   //返回while循环继续进入if语句</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><br>## 后序遍历<br>+ 后序遍历左子树<br>+ 后序遍历右子树<br>+ 访问根节点<br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void PostOrder(BiTree T){</span><br><span class="line">	if(T!=NULL){</span><br><span class="line">		PostOrder(T-&gt;lchild);  //递归遍历左子树</span><br><span class="line">		PostOrder(T-&gt;rchild);  //递归遍历右子树</span><br><span class="line">		visit(T);              //访问根节点</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><br><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* 非递归实现 */</span><br><span class="line">void PostOrder(BiTree T){</span><br><span class="line">	InitStack(S);</span><br><span class="line">	BiTNode *p=T;</span><br><span class="line">	BiTNode *r=NULL;</span><br><span class="line">	while(p||!IsEmpty(S)){</span><br><span class="line">		if(p){                           //走到最左边</span><br><span class="line">			push(S,p);</span><br><span class="line">			p=p-&gt;lchild;</span><br><span class="line">		}</span><br><span class="line">		else{                            //向右</span><br><span class="line">			GetTop(S,p);                 //读栈顶结点</span><br><span class="line">			if(p-&gt;rchild&amp;&amp;p-&gt;rchild!=r)  //若右子树存在，且未被访问过</span><br><span class="line">				p=p-&gt;rchild;             //转向右</span><br><span class="line">			else{                        //否则弹出节点并访问</span><br><span class="line">				pop(S,p);                //将结点弹出</span><br><span class="line">				visit(p-&gt;data);          //访问该节点</span><br><span class="line">				r=p;                     //记录最近访问过的节点</span><br><span class="line">				p=NULL;                  //节点访问完，重制p指针</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></h2><p>以上三种遍历方式时间复杂度O(n)，空间复杂度O(n)<br><code>由先序遍历和中序遍历序列可以确定一棵二叉树，由后序遍历和中序遍历序列可以确定一棵二叉树，由层序遍历和中序遍历可以确定一棵二叉树。先序遍历和后序遍历无法确定一棵二叉树</code></p>
<h2 id="线索二叉树"><a href="#线索二叉树" class="headerlink" title="线索二叉树"></a>线索二叉树</h2><p>规定：若无左子树，令lchild指向其前驱节点；若无右子树，令rchild指向其后继结点。<br>存储结构：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">typedef struct ThreadNode{</span><br><span class="line">	ElemType data;                      //数据元素</span><br><span class="line">	struct ThreadNode *lchild,*rchild;  //左、右孩子指针</span><br><span class="line">	int ltag,rtag;                      //左、右线索标志</span><br><span class="line">}ThreadNode,*ThreadTree;</span><br></pre></td></tr></table></figure></div>
<p>二叉树的线索化是将二叉链表中的空指针改为指向前驱或后继的线索。而前驱或后继的信息只有在遍历时才能得到，因此线索化的实质时遍历一次二叉树。   </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">void InThread(ThreadTree &amp;p,ThreadTree &amp;pre){</span><br><span class="line">	if(p!=NULL){</span><br><span class="line">		InThread(p-&gt;lchild,pre);  //递归，线索化左子树</span><br><span class="line">		if(p-&gt;lchild==NULL){      //左子树为空，建立前驱线索</span><br><span class="line">			p-&gt;lchild = pre;      </span><br><span class="line">			p-&gt;ltag=1;</span><br><span class="line">		}</span><br><span class="line">		if(pre!=NULL&amp;&amp;pre-&gt;rchild==NULL){</span><br><span class="line">			pre-&gt;rchild=p;        //建立前驱结点的后继线索</span><br><span class="line">			pre-&gt;rtag=1;</span><br><span class="line">		}</span><br><span class="line">		pre=p;                    //标记当前节点成为刚刚访问过的结点</span><br><span class="line">		InThread(p-&gt;rchild,pre);  //递归，线索化右子树</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>在中序线索二叉树中找结点后继的规律是：若其有标志为“1”，则右链为线索，指示其后继，否则遍历右子树中第一个访问的结点（右子树中最左下的结点）为其后继。  </p>
<h1 id="树、森林"><a href="#树、森林" class="headerlink" title="树、森林"></a>树、森林</h1><ul>
<li>双亲表示法：该存储结构利用了每个结点（根节点除外）只有唯一双亲的性质，可以很快地得到每个结点的双亲结点，但求结点的孩子时则需要遍历整个结构</li>
<li>孩子表示法：这种存储结构寻找子女的操作非常直接，而寻找双亲的操作需要遍历n个结点中孩子链表指针域所指向的n个孩子链表</li>
<li>孩子兄弟表示法：比较灵活，可以方便地实现树转换为二叉树的操作，易于查找结点的孩子等，但缺点是从当前结点查找器双亲结点比较麻烦。</li>
</ul>
<p><em>二叉树转换为树是唯一的</em><br>树的遍历：</p>
<ul>
<li>先根遍历：若树非空，先访问根节点，再依此遍历根节点的每棵子树，遍历子树时仍遵循先根后子树的规则。<strong>其遍历序列与这棵树对应二叉树的先序序列相同</strong></li>
<li>后根遍历：若树非空，先依此遍历根节点的每棵子树，再访问根节点，遍历子树时仍遵循先子树后根的规则。<strong>其遍历序列与这棵树响应的二叉树的中序序列相同</strong></li>
</ul>
<p>带权路径长度：从树的根到任意结点的路径长度（经过的边数）与该结点上权值的乘积<br>树的带权路径长度：树中的所有叶结点的带权路径长度之和</p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>第五章-图</title>
    <url>/2024/10/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%9B%BE/</url>
    <content><![CDATA[<p>图的定义：图G由顶点集V和边集E组成，记为G=（V，E），其中V（G）表示图G中顶点的有限非空集；E（G）表示图G中顶点之间的关系集合。<br>若图G中任意两个顶点是连通的，则称图G为连通图，否则称为非连通图。无向图中的极大连通子图称为<strong>连通分量</strong>。假设一个图有n个顶点，如果边数小于n-1，那么此图必是非连通图。<br>在有向图中，如果有一对顶点v和w，从v到w和从w到v之间都有路径，则称这两个顶点是<strong>强连通</strong>的。若图中任何一对顶点都是强连通的，则称此图为强连通图。n个顶点的强连通图至少需要n条边。<br>连通图的生成树是包含图中全部顶点的一个极小连通子图。若图中顶点数为n，则它的生成树含有n-1条边。  </p>
<h1 id="图的存储及基本操作"><a href="#图的存储及基本操作" class="headerlink" title="图的存储及基本操作"></a>图的存储及基本操作</h1><ul>
<li>邻接矩阵</li>
<li>邻接表法</li>
<li>十字链表：弧结点中有五个域：tailvex和headvex两个域分别指示弧尾和弧头这两个顶点的编号；hlink域指向弧头相同的下一个弧结点；tlink域指向弧尾相同的下一个弧结点；info域存放该弧的相关信息。</li>
<li>邻接多重表</li>
</ul>
<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><ul>
<li>Adjacent（G，x，y）：判断图G是否存在边&lt;x，y&gt;</li>
<li>Neighbors（G，x）：列出图G中与结点x邻接的边</li>
<li>InsertVertex（G，x）：在图G中插入顶点x</li>
<li>DeleteVertex（G，x）：从图G中删除顶点x</li>
<li>AddEdge（G，x，y）：若无向边（x，y）或有向边&lt;x，y&gt;不存在，则向图G中添加该边。</li>
<li>RemoveEdge（G，x，y）：若无向边（x，y）或有向边&lt;x，y&gt;存在，则向图G中删除该边</li>
<li>FirstNeighbor（G，x）：求图G中顶点x的第一个邻接点，若有则返回顶点号。若x没有邻接点或图中不存在x，则返回-1</li>
<li>NextNeighbor（G，x，y）：假设图G中顶点y是顶点x的一个邻接点，返回除y外顶点x的下一个邻接点的顶点号，若y是x的最后一个邻接点，则返回-1.</li>
<li>Get_edge_value（G，x，y）：获取图G中边（x，y）或&lt;x，y&gt;对应的权值</li>
<li>Set_edge_value（G，x，y，v）：设置图G中边（x，y）或&lt;x，y&gt;对应的权值为v</li>
</ul>
<h1 id="图的遍历"><a href="#图的遍历" class="headerlink" title="图的遍历"></a>图的遍历</h1><h2 id="广度优先算法"><a href="#广度优先算法" class="headerlink" title="广度优先算法"></a>广度优先算法</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">bool visited[MAX_VERTEX_NUM];                  //访问标记数组</span><br><span class="line">void BFSTraverse(Graph G){                     //对图G进行广度优先遍历</span><br><span class="line">	for(i=0;i&lt;G.vexnum;++i) visited[i]=FALSE;  //访问标记数组初始化</span><br><span class="line">	InitQueue(Q);                              //初始化辅助队列Q</span><br><span class="line">	for(i=0;i&lt;G.vexnum;++i){                   //从0号顶点开始遍历</span><br><span class="line">		if(!visited[i]) BFS(G,i);              //对每个连通分量调用BFS</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line">void BFS(Graph G,int v){                       //从顶点v出发广度优先遍历</span><br><span class="line">	visit(v);                                  //访问初始顶点v</span><br><span class="line">	visited[v]=TRUE;                           //对v做已访问标记</span><br><span class="line">	Enqueue(Q,v);                              //顶点v入列Q</span><br><span class="line">	while(!isEmpty(Q)){</span><br><span class="line">		DeQueue(Q,v);                          //顶点v出队列</span><br><span class="line">		for(w=FirstNeighbor(G,v);w&gt;=0;w=NextNeighbor(G,v,w)){  </span><br><span class="line">		                                      //检测v所有邻接点</span><br><span class="line">			if(!visited[w]){                   //w为v的尚未访问邻接顶点</span><br><span class="line">				visit(w);                      //访问顶点w</span><br><span class="line">				visited[w]=TRUE;               //对w做已访问标记</span><br><span class="line">				EnQueue(Q,w);                  //顶点w入队列</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>算法时间复杂度为O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="2.862ex" height="1.937ex" role="img" focusable="false" viewbox="0 -833.9 1264.9 855.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"/></g><g data-mml-node="mn" transform="translate(861.3,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）<br>使用BFS可以求解非带权图的单源最短路径问题</p>
<h2 id="深度优先算法"><a href="#深度优先算法" class="headerlink" title="深度优先算法"></a>深度优先算法</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">bool visited[MAX_VERTEX_NUM];                  //访问标记数组</span><br><span class="line">void DFSTraverse(Graph G){                     //对图G进行深度优先遍历</span><br><span class="line">	for(v=0;v&lt;G.vexnum;++v) visited[v]=FALSE;  //初始化已访问标记数组</span><br><span class="line">	for(v=0;v&lt;G.vexnum;++v){</span><br><span class="line">		if(!visited[v]) DFS(G,v);</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line">void DFS(Graph G,int v){                       //从顶点v出发深度优先遍历</span><br><span class="line">	visit(v);                                  //访问顶点v</span><br><span class="line">	visited[v]=TRUE;                           //对v做已访问标记</span><br><span class="line">	for(w=FirstNeighbor(G,v);w&gt;=0;w=NextNeighbor(G,v,w)){</span><br><span class="line">		if(!visited[w]) DFS(G,w);              //递归</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>空间复杂度O（V），以邻接矩阵表示，时间复杂度O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="2.862ex" height="1.937ex" role="img" focusable="false" viewbox="0 -833.9 1264.9 855.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"/></g><g data-mml-node="mn" transform="translate(861.3,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）;以邻接表表示，时间复杂度O（V+E）</p>
<h1 id="图的应用"><a href="#图的应用" class="headerlink" title="图的应用"></a>图的应用</h1><h2 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a>最小生成树</h2><p>对于一个带权连通无向图G=（V，E），生成树不同，每棵树的权也可能不同。设R为G的所有生成树的集合，若T为R中边的权值之和最小的那棵生成树，则T称为G的最小生成树。  </p>
<h3 id="Prim算法"><a href="#Prim算法" class="headerlink" title="Prim算法"></a>Prim算法</h3><p>初始时从图中任取一顶点加入树T，此时树中只含有一个顶点，之后选择一个与当前T中顶点集合距离最近的顶点，并将该顶点和相应的边加入T，每次操作后T中的顶点数和边数都增1.以此类推，直至图中所有的顶点都并入T，得到的T就是最小生成树。此时T中必然有n-1条边。<br>时间复杂度为O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="2.862ex" height="1.937ex" role="img" focusable="false" viewbox="0 -833.9 1264.9 855.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"/></g><g data-mml-node="mn" transform="translate(861.3,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）  </p>
<h3 id="Kruskal算法"><a href="#Kruskal算法" class="headerlink" title="Kruskal算法"></a>Kruskal算法</h3><p>初始时只有n个顶点而无边的非连通图T，每个顶点自成一个连通分量，然后按照变得权值由小到大的顺序，不断选取当前未被选取过且权值最小的边，若该边依附的顶点落在T中不同的连通分量上，则将此边加入T，否则舍弃此边而选择下一条权值最小的边。<br>时间复杂度为O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="7.295ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 3224.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"/></g><g data-mml-node="mi" transform="translate(764,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(1062,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(1547,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2460.6,0)"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"/></g></g></g></g></svg></mjx-container>）</p>
<h2 id="最短路径"><a href="#最短路径" class="headerlink" title="最短路径"></a>最短路径</h2><ul>
<li>Dijkstra算法：求图中某一点到其他顶点的最短路径（O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="2.862ex" height="1.937ex" role="img" focusable="false" viewbox="0 -833.9 1264.9 855.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"/></g><g data-mml-node="mn" transform="translate(861.3,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>））<em>不一定能解决负边</em></li>
<li>Floyd算法：求各顶点之间最短路径问题（O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="2.862ex" height="1.935ex" role="img" focusable="false" viewbox="0 -833.2 1264.9 855.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"/></g><g data-mml-node="mn" transform="translate(861.3,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"/></g></g></g></g></svg></mjx-container>）） <em>允许图中带负权值的边，但不允许有包含带负权值的边组成回路</em></li>
</ul>
<h2 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h2><p>AOV网：用顶点表示活动，用有向边&lt;Vi,Vj&gt;表示活动Vi必须先于活动Vj进行的一种关系，则称这种有向图称为顶点表示活动网络。在AOV网中，活动Vi是Vj的直接前驱，活动Vj是活动Vi的直接后继</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">bool TopologicalSort(Graph G){</span><br><span class="line">	InitStack(S);                            //初始化栈，存储入度为0的顶点</span><br><span class="line">	int i;</span><br><span class="line">	for(i=0;i&lt;G.vexnum;i++){</span><br><span class="line">		if(indegree[i]==0){</span><br><span class="line">			Push(S,i);                       //将所有入度为0的顶点进栈</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	int count=0;                             //计数，记录已经输出的顶点数</span><br><span class="line">	while(!IsEmpty(S)){                      //栈不空，则存在入度为0的顶点</span><br><span class="line">		Pop(S,i);                            //栈顶元素出栈</span><br><span class="line">		print[count++]=i;                    //输出</span><br><span class="line">		for(p=G.vertices[i].firstarc;p;p=p-&gt;nextarc){</span><br><span class="line">		//将所有i指向的顶点的入度减1，并将入度为0的顶点压入栈</span><br><span class="line">			v=p-&gt;adjvex;</span><br><span class="line">			if(!(--indegree[v])) Push(S,v);  //入度为0，入栈</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">	if(count&lt;G.vexnum) return false;         //排序失败，有向图存在回路</span><br><span class="line">	else return true;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<p>采用邻接表的时间复杂度O（V+E），采用邻接矩阵的时间复杂度O（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="2.862ex" height="1.937ex" role="img" focusable="false" viewbox="0 -833.9 1264.9 855.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"/></g><g data-mml-node="mn" transform="translate(861.3,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>）</p>
<h2 id="关键路径"><a href="#关键路径" class="headerlink" title="关键路径"></a>关键路径</h2><p>带权有向图中具有最大路径长度的路径称为关键路径。完成整个工程的最短时间就是关键路径的长度。需要计算每个事件的最早发生时间和最迟发生时间。</p>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
  </entry>
  <entry>
    <title>第一章-计算机系统概述</title>
    <url>/2024/08/21/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<p>操作系统：是指控制和管理整个计算机系统的硬件和软件资源，并合理地组织调度计算机的工作和资源的分配；以提供给用户和其他软件方便的接口和环境；它是计算机系统中最基本的系统软件。  </p>
<ul>
<li>处理机管理</li>
<li>存储器管理</li>
<li>文件管理</li>
<li>设备管理</li>
</ul>
<h2 id="联机命令接口：交互式命令接口脱机命令接口：批处理命令接口GUI：图形化用户界面程序接口：可以在程序中进行-系统调用-来使用程序接口。四个特征：-并发：指两个或多个时间在同一时间间隔内发生。这些事件宏观上是同时发生的，但微观上是交替发生的。（并行：两个或多个事件在同一时刻同时发生）操作系统和程序并发是一起诞生的。单核CPU同一时刻只能执行一个程序，各个程序只能并发的执行；多核CPU同一时刻可以同时执行多个程序，多个程序可以并行的执行。-共享：即资源共享，是指系统中的资源可供内存中多个并发执行的进程共同使用。-互斥共享方式：系统中的某些资源，虽然可以提供给多个进程使用，但一个时间段内只允许一个进程访问该资源。-同时共享方式：系统中的某些资源，允许一个时间段内多个进程“同时”对他们进行访问。-虚拟：把一个物理上的实体变为若干个逻辑上的对应物。物理实体是实际存在的，而逻辑上对应物是用户感受到的。-空分复用技术-时分复用技术-异步：在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而实走走停停的，以不可预知的速度向前推进。-操作系统的发展进程1-手工操作系统：用户独占全机、人机速度矛盾导致资源利用率低2-批处理阶段-1-单道批处理系统-优点：-缓解了一定程度的人机速度矛盾，资源利用率有所提高-缺点：内存中仅能有一道程序运行，只有该程序运行结束之后才能调入下一道程序。CPU有大量时间是在空闲等待I-O完成。资源利用率依然很低。-2-多道批处理系统-优点：多道程序并发执行，共享计算机资源。资源利用率大幅提升，CPU和其他资源更能保持“忙碌”状态，系统吞吐量增大。-缺点：用户响应时间长，没有人机交互功能3-分时操作系统：计算机以时间片为单位轮流为各个用户-作业服务，各个用户可通过终端与计算机进行交互。-优点：用户请求可以被及时响应，解决了人机交互问题。允许多个用户同时使用一台计算机，并且用户对计算机的操作相互独立，感受不到别人的存在。-缺点：不能优先处理一些紧急任务。操作系统对各个用户-作业都是完全公平的，循环地为每个用户-作业服务一个时间片，不区分任务的紧急性4-实时操作系统：能够优先相应一些紧急任务，某些紧急任务不需时间片排队，-有及时性和可靠性-硬实时系统-软实时系统5-网络操作系统：实现网络中各种资源的共享和各台计算机之间的通信6-分布式操作系统：特点是分布性和并行性，任何工作都可以分布在这些计算机上，由它们并行、协同完成这个任务7-个人计算机操作系统"><a href="#联机命令接口：交互式命令接口脱机命令接口：批处理命令接口GUI：图形化用户界面程序接口：可以在程序中进行-系统调用-来使用程序接口。四个特征：-并发：指两个或多个时间在同一时间间隔内发生。这些事件宏观上是同时发生的，但微观上是交替发生的。（并行：两个或多个事件在同一时刻同时发生）操作系统和程序并发是一起诞生的。单核CPU同一时刻只能执行一个程序，各个程序只能并发的执行；多核CPU同一时刻可以同时执行多个程序，多个程序可以并行的执行。-共享：即资源共享，是指系统中的资源可供内存中多个并发执行的进程共同使用。-互斥共享方式：系统中的某些资源，虽然可以提供给多个进程使用，但一个时间段内只允许一个进程访问该资源。-同时共享方式：系统中的某些资源，允许一个时间段内多个进程“同时”对他们进行访问。-虚拟：把一个物理上的实体变为若干个逻辑上的对应物。物理实体是实际存在的，而逻辑上对应物是用户感受到的。-空分复用技术-时分复用技术-异步：在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而实走走停停的，以不可预知的速度向前推进。-操作系统的发展进程1-手工操作系统：用户独占全机、人机速度矛盾导致资源利用率低2-批处理阶段-1-单道批处理系统-优点：-缓解了一定程度的人机速度矛盾，资源利用率有所提高-缺点：内存中仅能有一道程序运行，只有该程序运行结束之后才能调入下一道程序。CPU有大量时间是在空闲等待I-O完成。资源利用率依然很低。-2-多道批处理系统-优点：多道程序并发执行，共享计算机资源。资源利用率大幅提升，CPU和其他资源更能保持“忙碌”状态，系统吞吐量增大。-缺点：用户响应时间长，没有人机交互功能3-分时操作系统：计算机以时间片为单位轮流为各个用户-作业服务，各个用户可通过终端与计算机进行交互。-优点：用户请求可以被及时响应，解决了人机交互问题。允许多个用户同时使用一台计算机，并且用户对计算机的操作相互独立，感受不到别人的存在。-缺点：不能优先处理一些紧急任务。操作系统对各个用户-作业都是完全公平的，循环地为每个用户-作业服务一个时间片，不区分任务的紧急性4-实时操作系统：能够优先相应一些紧急任务，某些紧急任务不需时间片排队，-有及时性和可靠性-硬实时系统-软实时系统5-网络操作系统：实现网络中各种资源的共享和各台计算机之间的通信6-分布式操作系统：特点是分布性和并行性，任何工作都可以分布在这些计算机上，由它们并行、协同完成这个任务7-个人计算机操作系统" class="headerlink" title="联机命令接口：交互式命令接口脱机命令接口：批处理命令接口GUI：图形化用户界面程序接口：可以在程序中进行==系统调用==来使用程序接口。四个特征：+ 并发：指两个或多个时间在同一时间间隔内发生。这些事件宏观上是同时发生的，但微观上是交替发生的。（并行：两个或多个事件在同一时刻同时发生）操作系统和程序并发是一起诞生的。单核CPU同一时刻只能执行一个程序，各个程序只能并发的执行；多核CPU同一时刻可以同时执行多个程序，多个程序可以并行的执行。+ 共享：即资源共享，是指系统中的资源可供内存中多个并发执行的进程共同使用。    + 互斥共享方式：系统中的某些资源，虽然可以提供给多个进程使用，但一个时间段内只允许一个进程访问该资源。    + 同时共享方式：系统中的某些资源，允许一个时间段内多个进程“同时”对他们进行访问。+ 虚拟：把一个物理上的实体变为若干个逻辑上的对应物。物理实体是实际存在的，而逻辑上对应物是用户感受到的。    + 空分复用技术    + 时分复用技术+ 异步：在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而实走走停停的，以不可预知的速度向前推进。# 操作系统的发展进程1. 手工操作系统：用户独占全机、人机速度矛盾导致资源利用率低2. 批处理阶段    1. 单道批处理系统        + 优点： 缓解了一定程度的人机速度矛盾，资源利用率有所提高        + 缺点：内存中仅能有一道程序运行，只有该程序运行结束之后才能调入下一道程序。CPU有大量时间是在空闲等待I/O完成。资源利用率依然很低。    2. 多道批处理系统        + 优点：多道程序并发执行，共享计算机资源。资源利用率大幅提升，CPU和其他资源更能保持“忙碌”状态，系统吞吐量增大。        + 缺点：用户响应时间长，没有人机交互功能3. 分时操作系统：计算机以时间片为单位轮流为各个用户/作业服务，各个用户可通过终端与计算机进行交互。    + 优点：用户请求可以被及时响应，解决了人机交互问题。允许多个用户同时使用一台计算机，并且用户对计算机的操作相互独立，感受不到别人的存在。    + 缺点：不能优先处理一些紧急任务。操作系统对各个用户/作业都是完全公平的，循环地为每个用户/作业服务一个时间片，不区分任务的紧急性4. 实时操作系统：能够优先相应一些紧急任务，某些紧急任务不需时间片排队，==有及时性和可靠性==    + 硬实时系统    + 软实时系统5. 网络操作系统：实现网络中各种资源的共享和各台计算机之间的通信6. 分布式操作系统：特点是分布性和并行性，任何工作都可以分布在这些计算机上，由它们并行、协同完成这个任务7. 个人计算机操作系统"></a>联机命令接口：交互式命令接口<br>脱机命令接口：批处理命令接口<br>GUI：图形化用户界面<br>程序接口：可以在程序中进行==系统调用==来使用程序接口。<br>四个特征：<br>+ <strong>并发</strong>：指两个或多个时间在同一时间间隔内发生。这些事件宏观上是同时发生的，但微观上是交替发生的。（并行：两个或多个事件在同一时刻同时发生）<em>操作系统和程序并发是一起诞生的</em>。单核CPU同一时刻只能执行一个程序，各个程序只能并发的执行；多核CPU同一时刻可以同时执行多个程序，多个程序可以并行的执行。<br>+ <strong>共享</strong>：即资源共享，是指系统中的资源可供内存中多个并发执行的进程共同使用。<br>    + 互斥共享方式：系统中的某些资源，虽然可以提供给多个进程使用，但一个时间段内只允许一个进程访问该资源。<br>    + 同时共享方式：系统中的某些资源，允许一个时间段内多个进程“同时”对他们进行访问。<br>+ <strong>虚拟</strong>：把一个物理上的实体变为若干个逻辑上的对应物。物理实体是实际存在的，而逻辑上对应物是用户感受到的。<br>    + 空分复用技术<br>    + 时分复用技术<br>+ <strong>异步</strong>：在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而实走走停停的，以不可预知的速度向前推进。<br># 操作系统的发展进程<br>1. 手工操作系统：用户独占全机、人机速度矛盾导致资源利用率低<br>2. 批处理阶段<br>    1. 单道批处理系统<br>        + 优点： 缓解了一定程度的人机速度矛盾，资源利用率有所提高<br>        + 缺点：内存中仅能有一道程序运行，只有该程序运行结束之后才能调入下一道程序。CPU有大量时间是在空闲等待I/O完成。资源利用率依然很低。<br>    2. 多道批处理系统<br>        + 优点：多道程序并发执行，共享计算机资源。资源利用率大幅提升，CPU和其他资源更能保持“忙碌”状态，系统吞吐量增大。<br>        + 缺点：用户响应时间长，没有人机交互功能<br>3. 分时操作系统：计算机以时间片为单位轮流为各个用户/作业服务，各个用户可通过终端与计算机进行交互。<br>    + 优点：用户请求可以被及时响应，解决了人机交互问题。允许多个用户同时使用一台计算机，并且用户对计算机的操作相互独立，感受不到别人的存在。<br>    + 缺点：不能优先处理一些紧急任务。操作系统对各个用户/作业都是完全公平的，循环地为每个用户/作业服务一个时间片，不区分任务的紧急性<br>4. 实时操作系统：能够优先相应一些紧急任务，某些紧急任务不需时间片排队，==有及时性和可靠性==<br>    + 硬实时系统<br>    + 软实时系统<br>5. 网络操作系统：实现网络中各种资源的共享和各台计算机之间的通信<br>6. 分布式操作系统：特点是分布性和并行性，任何工作都可以分布在这些计算机上，由它们并行、协同完成这个任务<br>7. 个人计算机操作系统</h2><p>CPU存在用户态和内核态：</p>
<ul>
<li>内核态-&gt;用户态：执行一条特权指令–修改PSW的标志位为“用户态”，这个动作意味着操作系统将主动让出CPU使用权</li>
<li>用户态-&gt;内核态：由“中断”引发，硬件自动完成变态过程，触发中断信号意味着操作系统将强行夺回CPU的使用权</li>
</ul>
<p>“中断”：让操作系统内核夺回CPU使用权的唯一途径</p>
<ul>
<li>内中断（异常）：与当前执行的指令有关，来源于CPU内部（陷入【用户态执行】、故障、终止）</li>
<li>外中断：与当前执行的指令无关，来源于CPU外部（时钟中断、I/O中断）</li>
</ul>
<p>不同的中断信号，需要用不同的中断处理程序来处理。当CPU检测到中断信号后，会根据中断信号的类型去查询“中断向量表”，以此来找到响应的中断处理程序在内存中的存放位置。<br>系统调用：是操作系统提供给应用程序使用的接口，可以理解为一种可供应用程序调用的特殊函数，应用程序可以通过系统调用来请求获得操作系统内核的服务。<br>凡是与共享资源有关的操作，都必须通过系统调用的方式向操作系统内核提出服务请求</p>
<ul>
<li>设备管理</li>
<li>文件管理</li>
<li>进程控制</li>
<li>进程通信</li>
<li>内存管理</li>
</ul>
<p><code>发出系统调用请求是在用户态，而对系统调用的相应处理在核心态进行</code><br>内核是操作系统最基本、最核心的部分。<br>变态的过程是有成本的，频繁地变态会降低系统性能。<br><img lazyload src="/images/loading.svg" data-src="/2024/08/21/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/body_system.png"> </p>
<ul>
<li>分层结构：每层可单向调用更低一层提供的接口。</li>
<li>模块化：将内核划分为多个模块，多个模块之间相互协作。（内核=主模块+可加载内核模块）</li>
<li>宏内核：所有的系统功能都放在内核里</li>
<li>微内核：只把中断、原语、进程通信等核心功能放入内核，其余功能以用户进程形式运行在用户态（内核足够小、基于C/S模式、应用“机制预测分离”原理、采用面向对象技术）</li>
<li>外核：负责为用户进程分配未经抽象地硬件资源，由外核负责保证资源使用安全</li>
</ul>
<h1 id="引导"><a href="#引导" class="headerlink" title="引导"></a>引导</h1><ol>
<li>CPU从一个特定主存地址开始，取指令，执行ROM中的引导程序（先进行硬件自检，再开机）</li>
<li>将磁盘的第一块–主引导记录读入内存，执行磁盘引导程序，扫描分区表</li>
<li>从活动分区（又称主分区，即安装了操作系统的分区）读入分区引导记录，执行其中的程序</li>
<li>从根目录下找到完整的操作系统初始化程序（启动管理器）并执行，完成“开机”的一系列动作</li>
</ol>
<h1 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h1><p>虚拟机：使用虚拟技术，将一台物理机器虚拟化为堕胎虚拟机器，每个虚拟机器都可以独立运行一个操作系统</p>
<ul>
<li>第一类VMM：直接运行在硬件上</li>
<li>第二类VMM：运行在宿主操作系统上<br><img lazyload src="/images/loading.svg" data-src="/2024/08/21/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/VMM.png"></li>
</ul>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
  </entry>
  <entry>
    <title>第三章-内存管理</title>
    <url>/2024/08/31/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<ul>
<li>绝对装入：在编译时，如果知道程序将放到内存中的哪个位置，编译程序将产生绝对地址的目标地址。装入程序按照装入模块中的地址，将程序和数据装入内存。  </li>
<li>静态重定位：又称可重定位装入。编译、链接后的装入模块的地址是从0开始的，指令中使用的地址、数据存放的地址都是相对于起始地址而言的逻辑地址。</li>
<li>动态重定位：又称动态运行时装入。编译、链接后的装入模块的地址是从0开始的，并不会立即把逻辑地址转换为物理地址，而是把地址转换推迟到程序真正要执行时才进行。<br>链接的三种方式：</li>
<li>静态链接：装入前链接成一个完整装入模块</li>
<li>装入时动态链接：运行前边装入边链接</li>
<li>运行时动态链接：运行时需要目标模块才装入并链接</li>
</ul>
<p>在虚拟内存管理中，地址变换机构将逻辑地址变换为物理地址，形成该逻辑地址的阶段是链接<br>内存保护方法：</p>
<ul>
<li>采用重定位寄存器、界地址寄存器进行越界检查</li>
<li>设置上下限寄存器<br>覆盖技术的思想：将程序分为多个段。常用的段常驻内存，不常用的段在需要时才调入内存<br>交换技术：内存空间紧张时，系统将内存中某些进程暂时换出外存，把外存中某些具备运行条件的进程调入内存<br>可重入系统是通过减少对换数量方法来改善系统性能。</li>
</ul>
<h1 id="连续分配管理方式"><a href="#连续分配管理方式" class="headerlink" title="连续分配管理方式"></a>连续分配管理方式</h1><h2 id="单一连续分配"><a href="#单一连续分配" class="headerlink" title="单一连续分配"></a>单一连续分配</h2><p>在单一连续分配方式中，内存被分为系统区和用户区。系统区通常位于内存的低地址部分，用于存放操作系统相关数据；用户区用于存放用户进程相关数据。<br>内存中只能有一道用户程序，用户程序独占整个用户区空间。  </p>
<ul>
<li>优点：实现简单；无外部碎片；可以采用覆盖技术扩充内存；不一定需要采取内存保护。</li>
<li>缺点：只能用于单用户、单任务的操作系统中；有内部碎片；存储器利用率极低。</li>
</ul>
<h2 id="固定分区分配"><a href="#固定分区分配" class="headerlink" title="固定分区分配"></a>固定分区分配</h2><p>将整个用户空间划分为若干个固定大小的分区，在每个分区中只装入一道作业（分区大小不同但预先固定）<br>分区大小相等：缺乏灵活性，但是适合用于一台计算机控制多个相同对象的集合。<br>分区大小不等：增加了灵活性，可以满足不同大小的进程需求。根据常在系统运行的作业大小情况进行划分。<br>建立分区说明表。每个表项包括对应分区的大小、起始地址、状态（是否已分配）</p>
<ul>
<li>优点：实现简单，无外部碎片</li>
<li>缺点：当用户程序太大，可能所有的分区都不能满足需求，此时不得不采用覆盖技术来解决；会产生内部碎片，内存利用率低。</li>
</ul>
<h2 id="动态分区分配"><a href="#动态分区分配" class="headerlink" title="动态分区分配"></a>动态分区分配</h2><p>可变分区分配：不会预先划分内存分区，而是在进程装入内存时，根据进程的大小动态地建立分区。<br>系统会采用空闲分区表或空闲分区链来记录内存的使用情况。<br>存在<em>动态分区分配算法</em>对多空闲分区进行分配<br><strong>空闲分区表中空闲分区地址相邻则需要进行合并</strong><br>动态分区分配没有内部碎片，但是有外部碎片。采用紧凑技术来解决外部碎片  </p>
<h3 id="首次适应算法（FF）"><a href="#首次适应算法（FF）" class="headerlink" title="首次适应算法（FF）"></a>首次适应算法（FF）</h3><p>每次从低地址开始查找，找到第一个能满足大小的空闲分区。（空闲分区以地址递增地次序排列。每次分配内存时顺序查找空闲分区链）  </p>
<h3 id="最佳适应算法"><a href="#最佳适应算法" class="headerlink" title="最佳适应算法"></a>最佳适应算法</h3><p>为了保证当“大进程”到来时能有连续的大片空间，可以尽可能多地留下大片的空闲区，优先使用更小的空闲区。<br>空闲分区按容量递增次序链接。每次分配内存时顺序查找空闲分区数据结构，找到大小能满足要求的第一个空闲分区。<br>缺点：每次都选最小的分区进行分配，会留下越来越多的、很小的、难以利用的内存块。因此这种方法会产生很多的外部碎片。  </p>
<h3 id="最坏适应算法"><a href="#最坏适应算法" class="headerlink" title="最坏适应算法"></a>最坏适应算法</h3><p>空闲分区按容量递减次序链接。每次分配内存时顺序查找空闲分区链，找到大小能满足要求的第一个空闲分区。<br>缺点：每次都选最大的分区进行分配，虽然可以让分配后留下的空闲区更大，更可用，但是这种方式会导致较大的连续空闲区被迅速用完。如果之后有“大进程”到达，就没有内存分区可用了。  </p>
<h3 id="邻近适应算法"><a href="#邻近适应算法" class="headerlink" title="邻近适应算法"></a>邻近适应算法</h3><p>空闲分区以地址递增的顺序排列。每次分配内存时从上次查找结束的位置开始查找空闲分区链，找到大小能满足要求的第一个空闲分区。  </p>
<h1 id="非连续分配管理"><a href="#非连续分配管理" class="headerlink" title="非连续分配管理"></a>非连续分配管理</h1><h2 id="分页存储"><a href="#分页存储" class="headerlink" title="分页存储"></a>分页存储</h2><p>将内存空间分为一个个大小相等的分区，每个分区就是一个“页框”。将进程的逻辑地址空间也分为与页框大小相等的一个个部分，每个部分称为一个“页”或“页面”。操作系统以页框为单位为各个进程分配内存空间。进程的每个页面分别放入一个页框中。各个页面不必连续存放，可以放到不相邻的各个页框中。每个进程拥有一张页表，且进程的页表驻留在内存中<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="74.898ex" height="2.149ex" role="img" focusable="false" viewbox="0 -750 33105 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">逻</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">辑</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">地</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">址</text></g><g data-mml-node="mi" transform="translate(4000,0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"/></g><g data-mml-node="mi" transform="translate(4750,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">对</text></g><g data-mml-node="mi" transform="translate(5750,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">应</text></g><g data-mml-node="mi" transform="translate(6750,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(7750,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">物</text></g><g data-mml-node="mi" transform="translate(8750,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">理</text></g><g data-mml-node="mi" transform="translate(9750,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">地</text></g><g data-mml-node="mi" transform="translate(10750,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">址</text></g><g data-mml-node="mo" transform="translate(12027.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(13083.6,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"/></g><g data-mml-node="mi" transform="translate(13834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g><g data-mml-node="mi" transform="translate(14834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">页</text></g><g data-mml-node="mi" transform="translate(15834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">面</text></g><g data-mml-node="mi" transform="translate(16834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(17834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">内</text></g><g data-mml-node="mi" transform="translate(18834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">存</text></g><g data-mml-node="mi" transform="translate(19834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">中</text></g><g data-mml-node="mi" transform="translate(20834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(21834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">起</text></g><g data-mml-node="mi" transform="translate(22834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">始</text></g><g data-mml-node="mi" transform="translate(23834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">地</text></g><g data-mml-node="mi" transform="translate(24834.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">址</text></g><g data-mml-node="mo" transform="translate(26056.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(27057,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">页</text></g><g data-mml-node="mi" transform="translate(28057,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">内</text></g><g data-mml-node="mi" transform="translate(29057,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">偏</text></g><g data-mml-node="mi" transform="translate(30057,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">移</text></g><g data-mml-node="mi" transform="translate(31057,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">量</text></g><g data-mml-node="mi" transform="translate(32057,0)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"/></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="26.773ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 11833.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">页</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g><g data-mml-node="mo" transform="translate(2277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(3333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">逻</text></g><g data-mml-node="mi" transform="translate(4333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">辑</text></g><g data-mml-node="mi" transform="translate(5333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">地</text></g><g data-mml-node="mi" transform="translate(6333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">址</text></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(7333.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"/></g></g><g data-mml-node="mi" transform="translate(7833.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">页</text></g><g data-mml-node="mi" transform="translate(8833.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">面</text></g><g data-mml-node="mi" transform="translate(9833.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">长</text></g><g data-mml-node="mi" transform="translate(10833.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">度</text></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="21.117ex" height="2.149ex" role="img" focusable="false" viewbox="0 -750 9333.6 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">逻</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">辑</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">地</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">址</text></g><g data-mml-node="mo" transform="translate(4277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(5333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">逻</text></g><g data-mml-node="mi" transform="translate(6333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">辑</text></g><g data-mml-node="mi" transform="translate(7333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">地</text></g><g data-mml-node="mi" transform="translate(8333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">址</text></g></g></g></svg></mjx-container><br>页表寄存器：存放页表在内存中的起始地址F和页表长度M。进程未执行时，页表的起址和页表长度放在进程控制块（PCB）中<br>快表：联想寄存器，是一种访问速度比内存快很多的高速缓存，用来存放最近访问的页表项的副本，可以加速地址变换的速度。<br>采用多级页表机制，则各级页表的大小不能超过一个页面。<br>两级页表的访存次数为3次  </p>
<h2 id="分段存储"><a href="#分段存储" class="headerlink" title="分段存储"></a>分段存储</h2><p>引入段式存储管理方式，主要是为了满足用户<strong>方便编程、分段共享、分段保护、动态链接和动态增长</strong><br>进程的地址空间按照程序自身的逻辑关系划分为若干个段，每个段都有一个段名。以段为单位进行分配，每个段在内存中占据连续空间，但各段之间可以不相邻。<br>段号的位数决定了每个进程最多可以分几个段；段内地址位数决定了每个段的最大长度是多少  </p>
<ul>
<li>每个段对应一个段表项，其中记录了该段在内存中的起始位置和段的长度</li>
<li>各个段表项的长度是相同的</li>
<li>共享段表是用来实现多个进程共享同一段物理内存空间<br>分段、分页的对比：</li>
<li>页是信息的物理单位。分页的主要目的是为了实现离散分配，提高内存利用率。分页仅仅是系统管理的需要，完全是系统行为，对用户不可见</li>
<li>段是信息的逻辑单位。分段的主要目的是更好的满足用户需求，分段对用户是可见的。</li>
<li>页的大小固定且由系统决定；段的大小不固定由用户决定</li>
<li>分页的用户进程地址空间是一维的；分段的用户进程地址空间是二维的</li>
<li>分段比分页更容易实现信息的共享和保护</li>
</ul>
<h2 id="段页式存储"><a href="#段页式存储" class="headerlink" title="段页式存储"></a>段页式存储</h2><p>每个段对应一个段表项，每个段表项由段号、页表长度、页表存放块号组成。  </p>
<h1 id="虚拟内存"><a href="#虚拟内存" class="headerlink" title="虚拟内存"></a>虚拟内存</h1><p>传统存储管理方式的特征：</p>
<ul>
<li>一次性：作业必须一次性全部装入内存后才能运行<ul>
<li>大作业无法运行</li>
<li>多道程序并发度下降</li>
</ul>
</li>
<li>驻留性：一旦作业被装入内存，就会一直驻留内存中，浪费内存资源<br><strong>虚拟内存：</strong> 当程序执行时，访问信息不在内存时，由操作系统负责将所需信息从外存调入内存，若内存空间不够，由操作系统负责将内存中暂时不用的信息换出到外存。（虚拟内存实现需要建立在离散分配的内存管理方式基础；请求分页存储、请求分段存储、请求段页式存储。比传统存储管理增加了请求调入和请求置换功能）</li>
<li>多次性：程序可以被多次调入内存</li>
<li>对换性：作业经常被换入、换出</li>
<li>虚拟性：从逻辑上扩充了内存的容量<br>请求分页存储管理的页表五个字段：</li>
<li>内存块号</li>
<li>状态位：是否已调入内存</li>
<li>访问字段：可记录最近被访问过几次，或记录上次访问的时间，供置换算法选择换出页面时参考</li>
<li>修改位：页面调入内存后是否被修改过</li>
<li>外存地址：页面在外存中的存放位置<br>缺页中断机制（内中断）：在请求分页系统中，每当要访问的页面不在内存时，便产生一个缺页中断，然后由操作系统的缺页中断处理程序处理中断。此时缺页的进程阻塞，放入阻塞队列，调页完成后再将其唤醒，放回就绪队列。  <pre class="mermaid">graph TB
  subgraph 地址变换
      B((开始)) --&gt;C{页号&gt;页表长度?}
      C -- 是 --&gt;A((越界中断))
      C -- 否 --&gt;D[CPU检索快表]
      D--&gt;E{页表项在快表中？}
      E -- 否 --&gt;F[访问页表]
      E -- 是 --&gt;G[修改访问位和修改位]
      F--&gt;H{页在内存？}
      H -- 是 --&gt;J[修改快表]
      J--&gt;G
      G--&gt;K[形成物理地址]
      K--&gt;L((地址变换结束))
  end
  H -- 否 --&gt;I[保留CPU现场]
  subgraph 缺页中断
      I--&gt;M[从外存中找到缺页]
      M--&gt;N{内存满否}
      N -- 是 --&gt;O[选择一页换出]
      O--&gt;P{该页是否被修改}
      P -- 是 --&gt;Q[将该页写回外存]
      Q--&gt;R[OS命令CPU从外存读缺页]
      N -- 否 --&gt;R
      P -- 否 --&gt;R
      R--&gt;S[启动I/O硬件]
      S--&gt;T[将一页从外存换入内存]
      T--&gt;U[修改页面]
      U--&gt;J
  end</pre></li>
</ul>
<h1 id="页面置换算法"><a href="#页面置换算法" class="headerlink" title="页面置换算法"></a>页面置换算法</h1><h2 id="最佳置换算法"><a href="#最佳置换算法" class="headerlink" title="最佳置换算法"></a>最佳置换算法</h2><p>每次选择淘汰的页面将是以后永不使用，或者在最长时间内不再被访问的页面，这样可以保证最低的缺页率。  </p>
<h2 id="先进先出算法（FIFO）"><a href="#先进先出算法（FIFO）" class="headerlink" title="先进先出算法（FIFO）"></a>先进先出算法（FIFO）</h2><p>每次选择淘汰的页面是最早进入内存的页面<br>belady异常：当为进程分配的物理块数增大时，缺页次数不减反增的异常现象  </p>
<h2 id="最近最久未使用置换算法（LRU）"><a href="#最近最久未使用置换算法（LRU）" class="headerlink" title="最近最久未使用置换算法（LRU）"></a>最近最久未使用置换算法（LRU）</h2><p>每次淘汰的页面是最近最久未使用的页面<br>需要专门的硬件支持，算法开销大。  </p>
<h2 id="时钟置换算法（CLOCK）"><a href="#时钟置换算法（CLOCK）" class="headerlink" title="时钟置换算法（CLOCK）"></a>时钟置换算法（CLOCK）</h2><ul>
<li>进行两轮扫描，最开始的内存块的作业的访问位为1，扫描一遍会让访问位减一，如果扫描访问位为0，则被置换。</li>
<li>进行四轮扫描，查找最近未使用以及最近未修改的页面<ul>
<li>第一优先级：最近没访问，且没修改的页面</li>
<li>第二优先级：最近没访问，但修改过的页面</li>
<li>第三优先级：最近访问过，但没修改的页面</li>
<li>第四优先级：最近访问过，且修改过的页面</li>
</ul>
</li>
</ul>
<h1 id="页面分配策略"><a href="#页面分配策略" class="headerlink" title="页面分配策略"></a>页面分配策略</h1><p>驻留集：指请求分页存储管理中给进程分配的物理块的集合<br>工作集：指在某段时间间隔里，进程实际访问页面的集合。<br>固定分配：操作系统为每个进程分配一组固定数目的物理块，驻留集大小不变<br>可变分配：先为每个进程分配一定数目的物理块，在进程运行期间，可根据情况做适当的增加或减少，驻留集大小可变。<br>局部置换：发生缺页时只能选进程自己的物理块进行置换。<br>全局置换：可以将操作系统保留的空闲物理块分配给缺页进程，也可以将别的进程持有的物理块置换到外存，再分配给缺页进程。  </p>
<ul>
<li>固定分配局部置换</li>
<li>可变分配全局置换</li>
<li>可变分配局部置换<br>何时调入页面：</li>
<li>预调页策略：主要用于进程的首次调入</li>
<li>请求调页策略：进程在运行期间发现缺页时才将所缺页面内存<br>何处调入页面</li>
<li>系统拥有足够的对换区空间</li>
<li>系统缺少足够的对换取空间</li>
<li>UNIX方式<br>频繁的页面调度行为称为抖动。产生抖动的主要原因时进程频繁访问的页面数目高于可用的物理块数。驻留集大小不能小于工作集大小</li>
</ul>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
  </entry>
  <entry>
    <title>第四章-文件管理</title>
    <url>/2024/09/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>无结构文件：文件内部的数据就是一系列二进制流或字符流组成。又称“流式文件”。如“.txt”<br>有结构文件：有一组相似的记录组成，又称“记录式文件”。每条记录若干个数据项组成。根据各条记录的长度是否相等，又可分为定长记录和可变长记录。  </p>
<h1 id="有结构文件"><a href="#有结构文件" class="headerlink" title="有结构文件"></a>有结构文件</h1><h2 id="顺序文件"><a href="#顺序文件" class="headerlink" title="顺序文件"></a>顺序文件</h2><p>文件中的记录一个接一个地顺序排列（逻辑上），记录可以是定长地或可变长的。<br>串结构：记录之间的顺序与关键字无关（时间决定）<br>顺序结构：记录之间的顺序按关键字顺序排列<br>当采用链式存储时，无论是定长/可变长记录，都无法实现随机存取，每次只能从第一个记录开始依次往后查找。<br>可变长记录的顺序存储是无法实现随机存取。每次只能从第一个记录开始依次往后查找。<br>采用定长记录地顺序结构可以快速找到某关键字对应的记录。<br>采用定长记录的串结构，无法快速找到某关键字对应的记录。  </p>
<h2 id="索引文件"><a href="#索引文件" class="headerlink" title="索引文件"></a>索引文件</h2><p>建立一张索引表（定长记录的顺序文件）以加快文件检索速度，主要用于对信息处理的及时性要求比较高的场合。  </p>
<h2 id="索引顺序文件"><a href="#索引顺序文件" class="headerlink" title="索引顺序文件"></a>索引顺序文件</h2><p>索引文件对存储空间的利用率低。一组记录对应一个索引表项。定长记录串结构。</p>
<h2 id="多级索引顺序文件"><a href="#多级索引顺序文件" class="headerlink" title="多级索引顺序文件"></a>多级索引顺序文件</h2><p>为顺序文件建立多级索引表。</p>
<h1 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h1><p>目录本身就是一种有结构的文件，有一条条记录组成。一条记录就是一个文件控制块（FCB）<br>对目录进行的操作有：搜索、创建文件、删除文件、显示目录、修改目录<br> 单级目录实现“按名存取”，但是不允许文件重名。<br> 两级文件目录分为主文件目录和用户文件目录，实现不同用户访问限制，但失去灵活性。<br> 多级目录结构：树形目录结构，从根目录出发的路径称为绝对路径。从当前目录出发的“相对路径”，不便于实现文件的共享<br> 无环图目录结构：可以用不同的文件名指向同一文件，需要为每个共享节点设置一个共享计数器。<br> 索引节点只针对文件名，不需要其他冗余信息。  </p>
<h1 id="文件的物理结构"><a href="#文件的物理结构" class="headerlink" title="文件的物理结构"></a>文件的物理结构</h1><p>磁盘块的大小与内存块、页面的大小相同。文件的逻辑地址空间也被分为一个一个的文件“块”<br>连续分配方式要求每个文件在磁盘上占有一组连续的块。支持顺序访问和直接访问（随机访问）。连续分配的文件在顺序读/写时速度最快。不方便拓展；存储空间利用率低，会产生难以利用的磁盘碎片。<br>链接分配：隐式链接和显式链接。</p>
<ul>
<li>隐式：只支持顺序访问，不支持随机访问；方便文件拓展，不会有碎片问题，外存利用率高</li>
<li>显式：逻辑块号转换成物理块号的过程不需要读磁盘操作；支持随机访问；文件访问效率高；文件分配表需要占用一定的存储空间<br>索引分配：允许文件离散地分配在各个磁盘块中，系统会为每个文件建立一张索引表，索引表中记录了文件的各个逻辑块对应的物理块。索引表存放的磁盘块称为索引块。文件数据存放的磁盘块称为数据块。  </li>
<li>支持随机访问，文件拓展也很容易实现</li>
<li>如果索引表太大，一个索引块装不下，那么可以将多个索引块链接起来存放</li>
<li>建立多层索引表，各层索引表大小不能超过一个磁盘块，采用K层索引结构，且顶级索引表未调入内存，则访问一个数据块只需要K+1次读磁盘操作</li>
<li>混合索引：多种索引分配方式结合</li>
</ul>
<h1 id="文件存储空间管理"><a href="#文件存储空间管理" class="headerlink" title="文件存储空间管理"></a>文件存储空间管理</h1><ul>
<li>空闲表法</li>
<li>空闲链表法<ul>
<li>空闲盘块链</li>
<li>空闲盘区链</li>
</ul>
</li>
<li>位示图法</li>
<li>成组链接法</li>
</ul>
<h1 id="文件的基本操作"><a href="#文件的基本操作" class="headerlink" title="文件的基本操作"></a>文件的基本操作</h1><h2 id="create系统调用"><a href="#create系统调用" class="headerlink" title="create系统调用"></a>create系统调用</h2><ul>
<li>在外存中找到文件所需的空间</li>
<li>在目录中创建该文件对应的目录项</li>
</ul>
<h2 id="Delete系统调用"><a href="#Delete系统调用" class="headerlink" title="Delete系统调用"></a>Delete系统调用</h2><ul>
<li>找到文件名对应的目录项</li>
<li>回收文件占用的磁盘块</li>
<li>删除文件对应的目录项</li>
</ul>
<h2 id="Open系统调用"><a href="#Open系统调用" class="headerlink" title="Open系统调用"></a>Open系统调用</h2><p>打开文件操作的主要工作是把指定文件的目录项复制到内存指定的区域；open（）调用的参数含有需要打开的文件的文件名</p>
<ul>
<li>找到文件名对应的目录项</li>
<li>将目录项复制到内存中的“打开文件表”中。用户使用打开文件表的编号来指明要操作的文件</li>
</ul>
<h2 id="Close系统调用"><a href="#Close系统调用" class="headerlink" title="Close系统调用"></a>Close系统调用</h2><ul>
<li>将进程的打开文件表相应表项删除</li>
<li>回收分配给该文件的内存空间等资源</li>
<li>系统打开文件表的打开计数器count减1，若count=0，则删除对应表项</li>
</ul>
<h2 id="Read系统调用"><a href="#Read系统调用" class="headerlink" title="Read系统调用"></a>Read系统调用</h2><ul>
<li>按文件描述符在打开文件表中找到该文件的目录项</li>
<li>安村去控制说明检查访问的合法性</li>
<li>根据目录项中该文件的逻辑和物理组织形式，将逻辑记录号转换成物理块号</li>
<li>向设备驱动程序发出I/O请求，完成数据交换工作</li>
</ul>
<h2 id="Write系统调用"><a href="#Write系统调用" class="headerlink" title="Write系统调用"></a>Write系统调用</h2><h1 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h1><ul>
<li>基于索引节点的共享方式（硬链接）</li>
<li>基于符号链的共享方式（软链接）（Windows的快捷方式）</li>
</ul>
<h1 id="文件保护"><a href="#文件保护" class="headerlink" title="文件保护"></a>文件保护</h1><ul>
<li>口令保护：为文件设置一个“口令”，用户想要访问文件时需要提供口令，由系统验证口令是否正确<ul>
<li>优点：保存口令的空间开销不多，验证口令的时间开销也很小</li>
<li>缺点：正确的“口令”存放在系统内部，不够安全</li>
</ul>
</li>
<li>加密保护：使用某个“密码”对文件进行加密，在访问文件时需要提供正确的“密码”才能对文件进行正确的解密<ul>
<li>优点：保密性强，不需要在系统中存储“密码”</li>
<li>缺点：编码/译码，或者说加密/解密要花费一定时间</li>
</ul>
</li>
<li>访问控制：在每个文件的FCB中增加一个访问控制列表，该表中记录了各个用户可以对该文件执行哪些操作<ul>
<li>优点：实现灵活，可以实现复杂的文件保护功能</li>
</ul>
</li>
</ul>
<h1 id="虚拟文件系统（VFS）"><a href="#虚拟文件系统（VFS）" class="headerlink" title="虚拟文件系统（VFS）"></a>虚拟文件系统（VFS）</h1><p>Linux实现虚拟文件系统VFS的对象类型：超级块对象、索引节点、目录项、文件</p>
<ul>
<li>向上层用户进程提供统一标准的系统调用接口，屏蔽底层具体文件系统的实现差异</li>
<li>VFS要求下层的文件系统必须实现某些规定的函数功能</li>
<li>vnode只存在于主存中，inode既会调入主存，也会在外存中存储<br>文件系统挂载：</li>
<li>在VFS中注册新挂载的文件系统</li>
<li>新挂在的文件系统，要向VFS提供一个函数地址列表</li>
<li>将新文件系统加到挂载点，也就是将新文件系统挂载再某个父目录</li>
</ul>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
  </entry>
  <entry>
    <title>第二章-进程管理</title>
    <url>/2024/08/24/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>程序：是静态的，就是个存放在磁盘里的可执行文件，就是一系列的指令集和<br>进程：是动态的，是程序的一次执行过程，是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。<br>PCB是进程存在的唯一标志。<br>一个进程实体（进程映象）由PCB、程序段、数据段组成。进程是动态的，进程实体是静态的。<br>进程的特征：动态性、并发性、独立性、异步性、结构性  </p>
<h1 id="进程的状态与转换"><a href="#进程的状态与转换" class="headerlink" title="进程的状态与转换"></a>进程的状态与转换</h1><p>创建态：操作系统为进程分配资源、初始化PCB<br>就绪态：已经具备运行条件，但由于没有空闲CPU，就暂时不能运行<br>运行态：在CPU上运行<br>阻塞态：请求等待某个事件的发生，在这个事件发生之前，进程无法继续往下执行<br>终止态：执行exit系统调用，请求操作系统终止该进程，并回收内存空间等资源，最后回收PCB<br>==进程不可能由阻塞态直接转换为运行态，也不能有就绪态直接转换为阻塞态==<br><img lazyload src="/images/loading.svg" data-src="/2024/08/24/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/PTransform.png">  使用<strong>链接队列</strong>或者<strong>索引</strong>方式进行组织。  </p>
<hr>
<h1 id="进程控制"><a href="#进程控制" class="headerlink" title="进程控制"></a>进程控制</h1><p>进程控制：对系统中的所有进程是是有效的管理，它具有创建新进程、撤销已有进程、实现进程状态转换等功能。（原语实现）  </p>
<ul>
<li>“关中断”：不在例行检查中断信号</li>
<li>“开中断”：恢复检查中断信号</li>
</ul>
<h2 id="进程的创建"><a href="#进程的创建" class="headerlink" title="进程的创建"></a>进程的创建</h2><ul>
<li>申请空白PCB</li>
<li>为新进程分配所需资源</li>
<li>初始化PCB</li>
<li>将PCB插入就绪队列<br>实例：用户登录、作业调度、提供服务、应用请求</li>
</ul>
<h2 id="进程终止"><a href="#进程终止" class="headerlink" title="进程终止"></a>进程终止</h2><ul>
<li>从PCB集合中找到终止进程的PCB</li>
<li>若进程正在执行，立即剥夺CPU，将CPU分配给其他进程</li>
<li>终止其所有子进程（进程之间的关系是树形结构）</li>
<li>将该进程拥有的所有资源归还给父进程或操作系统</li>
<li>删除PCB<br>引起事件：正常结束、异常结束、外界干预</li>
</ul>
<h2 id="阻塞原语"><a href="#阻塞原语" class="headerlink" title="阻塞原语"></a>阻塞原语</h2><p>运行态-&gt;阻塞态</p>
<ul>
<li>找到要阻塞的进程对应的PCB</li>
<li>保护进程运行现场，将PCB状态信息设置为“阻塞态”，暂时停止进程运行</li>
<li>将PCB插入响应时间的等待队列<br>引起事件：需要等待系统分配某种资源、需要等待相互合作的其他进程完成工作</li>
</ul>
<h2 id="唤醒原语"><a href="#唤醒原语" class="headerlink" title="唤醒原语"></a>唤醒原语</h2><p>阻塞态-&gt;就绪态</p>
<ul>
<li>在事件等待队列中找到PCB</li>
<li>将PCB从等待队列移除，设置进程为就绪态</li>
<li>将PCB插入就绪队列，等待被调度<br>引起事件：等待的事件发生</li>
</ul>
<h2 id="切换原语"><a href="#切换原语" class="headerlink" title="切换原语"></a>切换原语</h2><p>运行态-&gt;就绪态，就绪态-&gt;运行态</p>
<ul>
<li>将运行环境信息存入PCB</li>
<li>PCB移入相应队列</li>
<li>选择另一个进程执行，并更新其PCB</li>
<li>根据PCB恢复新进程所需的运行环境<br>引起事件：当前进程时间片到、有更高优先级的进程到达、当前进程主动阻塞、当前进程终止<br>PSW：程序状态字寄存器<br>PC：程序计数器，存放下一条指令的地址<br>IR：指令寄存器，存放当前正在执行的指令<br>通用寄存器：其他一些必要信息</li>
</ul>
<h1 id="进程通信"><a href="#进程通信" class="headerlink" title="进程通信"></a>进程通信</h1><p>进程间的通信：两个进程之间产生数据交互。  </p>
<h2 id="共享存储"><a href="#共享存储" class="headerlink" title="共享存储"></a>共享存储</h2><p>通过“增加页表项/段表项”即可将同一片共享内存区映射到各个进程的地址空间中。<br>为避免出错，各个进程对共享空间的访问应该是互斥的。各个进程可使用操作系统内核提供的同步互斥工具。  </p>
<ul>
<li>基于存储区的共享：操作系统在内存中划出一块共享存储区，数据的形式、存放位置都由通信进程控制，而不是操作系统。这种共享方式速度很快，是一种高级通信方式  </li>
<li>基于数据结构的共享：比如共享空间里只能放一个长度为10的数组。这种共享方式速度慢、限制多，是一种低级通信方式。</li>
</ul>
<h2 id="消息传递"><a href="#消息传递" class="headerlink" title="消息传递"></a>消息传递</h2><p>进程间的数据交换以格式化的消息为单位。进程通过操作系统提供的“发送消息/接收消息”两个原语进行数据交换。  </p>
<ul>
<li>直接通信：消息发送进程要指明接收进程的ID</li>
<li>间接通信（信箱通信方式）：通过“信箱”间接地通信。</li>
</ul>
<h2 id="管道通信"><a href="#管道通信" class="headerlink" title="管道通信"></a>管道通信</h2><p>“管道”：是一个特殊的共享文件，又名pipe文件。其实就是在内存中开辟了一个大小固定的内存缓冲区。（先进先出，循环队列）<br>管道只能支持半双工通信，某一时间段内只能是西安单向的传输。如果要实现双向同时通信，则需要设置两个管道。<br>各进程要互斥地访问管道（由操作系统实现）<br>当管道写满时，写进程将堵塞，直到读进程将管道中的数据取走，即可唤醒写进程。<br>当管道读空时，读进程将阻塞，直到写进程往管道中写入数据，即可唤醒读进程。<br>管道中的数据一旦被读出，就彻底消失。因此多个进程读一个管道时，可能会错乱：</p>
<ul>
<li>==一个管道允许多个写进程，一个读进程==</li>
<li>允许有多个写进程，多个读进程，但系统会让多个读进程轮流从管道中读数据</li>
</ul>
<hr>
<h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><p>线程是一个基本的CPU执行单元，也是程序执行流的最小单位，是操作系统中最小的调度单位。<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/Differnence.png">  </p>
<ul>
<li>线程是处理及调度的单位</li>
<li>多CPU计算机中，各个线程客栈用不同的CPU</li>
<li>每个线程都有一个线程ID、线程控制块</li>
<li>线程也有就绪、阻塞、运行三种基本状态</li>
<li>线程几乎不拥有系统资源</li>
<li>同一进程的不同线程之间共享进程的资源</li>
<li>由于共享内存地址空间，同一进程中的线程间通信甚至无需系统干预</li>
<li>同一进程中的线程切换，不会引起进程切换</li>
<li>切换同进程内的线程，系统开销小；切换进程，系统开销大</li>
</ul>
<h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><p><strong>用户级线程</strong>：线程的管理工作由线程库完成，线程切换不需要CPU变态，操作系统意识不到用户级线程的存在。（”代码逻辑“的载体）<br>优点：不需要切换到核心态，线程管理的系统开销小，效率高。<br>缺点：当一个用户级线程被阻塞后，整个进程都会被阻塞，并发度不高。多个线程不可在多核处理机上并行运行。<br><strong>内核级线程</strong>：线程的管理工作由操作系统完成，线程切换需要CPU变态。（运行机会的载体）<br>优点：并发能力强，多线程可在多核处理及上并行执行。<br>缺点：需要切换内核态，线程管理成本高，开销大。<br><strong>多线程</strong>：</p>
<ul>
<li>一对一模型：一个用户及线程映射到一个内核级线程。每个用户进程有与用户级线程同数量的内核级线程。<ul>
<li>优点：当一个线程被阻塞后，别的线程还可以继续执行，并发能力强。多线程可在多核处理机上并行执行</li>
<li>缺点：需要切换内核态，线程管理成本高，开销大。</li>
</ul>
</li>
<li>多对一模型：多个用户级线程映射到一个内核级线程。且一个进程只被分配一个内核级线程。<ul>
<li>不需要切换核心态，系统开销小，效率高</li>
<li>并发度不高，多个线程不可在多核处理机上并行运行</li>
</ul>
</li>
<li>多对多模型：n用户及线程线程映射到m个内核级线程（n&gt;=m）。每个用户进程对应m各内核级线程。（克服了一对一模型和多对一模型的缺点）<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/Transform.png"><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/TCB.png"></li>
</ul>
<h1 id="调度"><a href="#调度" class="headerlink" title="调度"></a>调度</h1><p>高级调度(作业调度)：按一定的原则从外存的作业后备队列中挑选一个作业调入内存，并创建进程。每个作业只调入一次，调出一次。作业调入时会建立PCB，调出时才撤销PCB。(无-&gt;创建态-&gt;就绪态)<br>低级调度（进程调度/处理机调度）：按照某种策略从就绪队列中选取一个进程，将处理机分配给它。（进程调度是操作系统中最基本的一种调度，在一般的操作系统中都必须配置进程调度。进程调度的频率很高，一般几十毫秒一次，就绪态-&gt;运行态）<br>中级调度（内存调度）：按照某种策略决定将哪个处于挂起状态的进程重新调入内存。（挂起态-&gt;就绪态）<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/7_station.png"><br>不能进行进程调度与切换的情况：</p>
<ul>
<li>在处理中断的过程中。中断处理过程复杂，与硬件密切相关，很难做到在中断处理过程中进行进程切换。</li>
<li>进程在操作系统内核程序临界区（一般是用来访问某种内核数据结构）中</li>
<li>在原子操作过程中。原子操作不可中断，要一气呵成。<br>进程调度的方式：</li>
<li>非剥夺调度方式：实现简单，系统开销小，无法及时处理紧急任务</li>
<li>剥夺调度方式：适合于分时操作系统、实时操作系统<br>“狭义的进程调度”与“进程切换”的区别：</li>
<li>==狭义的进程调度==是指从就绪队列中选中一个要运行的进程</li>
<li>进程切换是指一个进程让出处理机，有另一个进程占用处理机的过程<ul>
<li>对原来运行进程各种数据的保存</li>
<li>对新的进程各种数据的恢复</li>
</ul>
</li>
</ul>
<p>什么事件会触发“调度程序”</p>
<ul>
<li>创建新进程</li>
<li>进程退出</li>
<li>运行进程阻塞</li>
<li>I/O中断发生</li>
<li>非抢占式调度策略只有运行进程阻塞或退出才出发调度程序工作</li>
<li>抢占式调度策略，每个时钟中断或k个时钟中断会触发调度程序工作<br>闲逛进程（调度程序永远的备胎）：</li>
<li>优先级最低</li>
<li>可以是0地址指令，占一个完整的指令周期</li>
<li>能耗低</li>
</ul>
<hr>
<h1 id="调度算法的评价指标"><a href="#调度算法的评价指标" class="headerlink" title="调度算法的评价指标"></a>调度算法的评价指标</h1><h2 id="CPU利用率"><a href="#CPU利用率" class="headerlink" title="CPU利用率"></a>CPU利用率</h2><p>指cpu“忙碌”的事件占总时间的比例（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.158ex;" xmlns="http://www.w3.org/2000/svg" width="18.799ex" height="3.447ex" role="img" focusable="false" viewbox="0 -1011.8 8309.1 1523.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">利</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">用</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">率</text></g><g data-mml-node="mo" transform="translate(3277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mfrac" transform="translate(4333.6,0)"><g data-mml-node="mrow" transform="translate(220,481.4) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">忙</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">碌</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g></g><g data-mml-node="mrow" transform="translate(927.1,-370.3) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">总</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g></g><rect width="3735.5" height="60" x="120" y="220"/></g></g></g></svg></mjx-container>）</p>
<h2 id="系统吞吐量"><a href="#系统吞吐量" class="headerlink" title="系统吞吐量"></a>系统吞吐量</h2><p>单位时间内完成作业的数量（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.158ex;" xmlns="http://www.w3.org/2000/svg" width="28.123ex" height="3.447ex" role="img" focusable="false" viewbox="0 -1011.8 12430.4 1523.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">系</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">统</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">吞</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">吐</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">量</text></g><g data-mml-node="mo" transform="translate(5277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mfrac" transform="translate(6333.6,0)"><g data-mml-node="mrow" transform="translate(220,481.4) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">总</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">共</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">完</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">成</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g></g><g data-mml-node="mrow" transform="translate(927.1,-370.3) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">总</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">共</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">花</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g></g><rect width="5856.9" height="60" x="120" y="220"/></g></g></g></svg></mjx-container>）</p>
<h2 id="周转时间"><a href="#周转时间" class="headerlink" title="周转时间"></a>周转时间</h2><p>指从作业被提交给系统开始，到作业完成为止的这段时间间隔<br>包括四个部分：作业在外存后备队列上等待作业调度的时间、进程在就绪队列上等待作业调度的时间、进程在CPU上执行的时间、进程等待I/O操作完成的时间<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.077ex;" xmlns="http://www.w3.org/2000/svg" width="200.504ex" height="5.285ex" role="img" focusable="false" viewbox="0 -1418 88622.7 2336"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,-8)"><g data-mml-node="mtd"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">周</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">转</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mo" transform="translate(4277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(5333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(6333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(7333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">完</text></g><g data-mml-node="mi" transform="translate(8333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">成</text></g><g data-mml-node="mi" transform="translate(9333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(10333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mo" transform="translate(11555.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(12556,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(13556,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(14556,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">提</text></g><g data-mml-node="mi" transform="translate(15556,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">交</text></g><g data-mml-node="mi" transform="translate(16556,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(17556,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mtext" transform="translate(18556,0)"><path data-c="A0" d=""/></g><g data-mml-node="mi" transform="translate(18806,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">平</text></g><g data-mml-node="mi" transform="translate(19806,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">均</text></g><g data-mml-node="mi" transform="translate(20806,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">周</text></g><g data-mml-node="mi" transform="translate(21806,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">转</text></g><g data-mml-node="mi" transform="translate(22806,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(23806,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mo" transform="translate(25083.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mfrac" transform="translate(26139.6,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">各</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">周</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">转</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">之</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">和</text></g></g><g data-mml-node="mrow" transform="translate(3220,-710)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g></g><rect width="9200" height="60" x="120" y="220"/></g><g data-mml-node="mtext" transform="translate(35579.6,0)"><path data-c="A0" d=""/></g><g data-mml-node="mi" transform="translate(35829.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">带</text></g><g data-mml-node="mi" transform="translate(36829.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">权</text></g><g data-mml-node="mi" transform="translate(37829.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">周</text></g><g data-mml-node="mi" transform="translate(38829.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">转</text></g><g data-mml-node="mi" transform="translate(39829.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(40829.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mo" transform="translate(42107.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mfrac" transform="translate(43163.1,0)"><g data-mml-node="mrow" transform="translate(1720,676)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">周</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">转</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g></g><g data-mml-node="mrow" transform="translate(220,-710)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">实</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">际</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">运</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">行</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g></g><rect width="9200" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(52880.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mfrac" transform="translate(53936.7,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">完</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">成</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mo" transform="translate(6222.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(7222.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(8222.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(9222.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">提</text></g><g data-mml-node="mi" transform="translate(10222.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">交</text></g><g data-mml-node="mi" transform="translate(11222.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(12222.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g></g><g data-mml-node="mrow" transform="translate(2331.2,-710)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">实</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">际</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">运</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">行</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g></g><rect width="13422.4" height="60" x="120" y="220"/></g><g data-mml-node="mtext" transform="translate(67599.1,0)"><path data-c="A0" d=""/></g><g data-mml-node="mi" transform="translate(67849.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">平</text></g><g data-mml-node="mi" transform="translate(68849.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">均</text></g><g data-mml-node="mi" transform="translate(69849.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">带</text></g><g data-mml-node="mi" transform="translate(70849.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">权</text></g><g data-mml-node="mi" transform="translate(71849.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">周</text></g><g data-mml-node="mi" transform="translate(72849.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">转</text></g><g data-mml-node="mi" transform="translate(73849.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(74849.1,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mo" transform="translate(76126.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mfrac" transform="translate(77182.7,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">各</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">带</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">权</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">周</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">转</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mi" transform="translate(9000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">之</text></g><g data-mml-node="mi" transform="translate(10000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">和</text></g></g><g data-mml-node="mrow" transform="translate(4220,-710)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">业</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g></g><rect width="11200" height="60" x="120" y="220"/></g></g></g></g></g></g></svg></mjx-container></p>
<h2 id="等待时间"><a href="#等待时间" class="headerlink" title="等待时间"></a>等待时间</h2><p>指作业/进程处于等待处理机状态之和，等待时间越长，用户满意度越低。  </p>
<ul>
<li>对于进程，等待时间就是指进程建立之后等待被服务的时间之和，在等待I/O完成的期间其实进程也是被服务的，所以不计入等待时间</li>
<li>对于作业，不仅要考虑建立进程后的等待时间，还要加上作业在外存后备队列中等待的时间</li>
</ul>
<h2 id="响应时间"><a href="#响应时间" class="headerlink" title="响应时间"></a>响应时间</h2><p>只从用户提交请求到首次响应所用的时间</p>
<h1 id="调度算法"><a href="#调度算法" class="headerlink" title="调度算法"></a>调度算法</h1><h2 id="先来先服务（FCFS）"><a href="#先来先服务（FCFS）" class="headerlink" title="先来先服务（FCFS）"></a>先来先服务（FCFS）</h2><p><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/FCFS.png"></p>
<h2 id="短作业优先（SJF）"><a href="#短作业优先（SJF）" class="headerlink" title="短作业优先（SJF）"></a>短作业优先（SJF）</h2><p>短作业/进程优先算法默认是非抢占式<br>在所有进程同时可运行时，采用SJF调度算法的平均等待时间、平均周转时间最少<br>相比于其他算法，SJF依然可以获得较少的平均等待时间、平均周转时间<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/SJF.png"></p>
<h2 id="高响应比优先（HRRN）"><a href="#高响应比优先（HRRN）" class="headerlink" title="高响应比优先（HRRN）"></a>高响应比优先（HRRN）</h2><p><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/HRRN.png">  </p>
<hr>
<h2 id="时间片轮转调度算法（RR）"><a href="#时间片轮转调度算法（RR）" class="headerlink" title="时间片轮转调度算法（RR）"></a>时间片轮转调度算法（RR）</h2><p>如果时间片太大，使得每个进程都可以在一个时间片内就完成，则时间片轮转调度算法退化为先来先服务调度算法，并且会增大进程响应时间，因此时间片不能太大。<br>如果时间片太小，会导致进程切换过于频繁，系统会花大量时间来处理进程切换，从而导致实际用于进程执行的时间比例减少。可见时间片不能太小。<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/RR.png"></p>
<h2 id="优先级调度算法"><a href="#优先级调度算法" class="headerlink" title="优先级调度算法"></a>优先级调度算法</h2><p><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/first_priority.png"> </p>
<h2 id="多级反馈队列调度算法"><a href="#多级反馈队列调度算法" class="headerlink" title="多级反馈队列调度算法"></a>多级反馈队列调度算法</h2><p><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/LayerDrawBackQueue.png"><br>系统进程&gt;交互式进程&gt;批处理进程  </p>
<hr>
<h1 id="同步与互斥"><a href="#同步与互斥" class="headerlink" title="同步与互斥"></a>同步与互斥</h1><p>一个时间段内只允许一个进程使用的资源称为临界资源。<br>进入区和退出区是负责实现互斥的代码段。  </p>
<ul>
<li>空闲让进</li>
<li>忙则等待</li>
<li>有限等待</li>
<li>让权等待</li>
</ul>
<h2 id="进程互斥的软件实现方法"><a href="#进程互斥的软件实现方法" class="headerlink" title="进程互斥的软件实现方法"></a>进程互斥的软件实现方法</h2><h3 id="单标志法"><a href="#单标志法" class="headerlink" title="单标志法"></a>单标志法</h3><p>两个进程在访问完临界区后会把使用临界区的权限转交给另一个进程。也就是说每个进程进入临界区的权限只能被另一个进程赋予。<br>缺点：“空闲让进”</p>
<h3 id="双标志先检查法"><a href="#双标志先检查法" class="headerlink" title="双标志先检查法"></a>双标志先检查法</h3><p>设置一个布尔型数据flag []，数组中各个元素用来标记各进程想进入临界区的意愿，比如“flag[0]=true”意味着0号进程P0现在想要进入临界区。<br>缺点：违反“忙则等待”原则</p>
<h3 id="双标志后检查法"><a href="#双标志后检查法" class="headerlink" title="双标志后检查法"></a>双标志后检查法</h3><p>相对于“双标志先检查法”，先进行“上锁”，在进行“检查”<br>缺点：违背了“空闲让进”和“有限等待”原则，会产生“饥饿”现象</p>
<h3 id="Peterson算法"><a href="#Peterson算法" class="headerlink" title="Peterson算法"></a>Peterson算法</h3><p>如果双方都争着想进入临界区，那可以让进程尝试谦让。<br>缺点：未遵循“让权等待”原则</p>
<h2 id="进程互斥的硬件实现方法"><a href="#进程互斥的硬件实现方法" class="headerlink" title="进程互斥的硬件实现方法"></a>进程互斥的硬件实现方法</h2><h3 id="中断屏蔽方法"><a href="#中断屏蔽方法" class="headerlink" title="中断屏蔽方法"></a>中断屏蔽方法</h3><p>利用“开/关中断指令”实现<br>优点：简单、高效<br>缺点：不适用于多处理机；只适用于操作系统内核进程，不适用于用户进程</p>
<h3 id="TestAndSet指令"><a href="#TestAndSet指令" class="headerlink" title="TestAndSet指令"></a>TestAndSet指令</h3><p>TSL指令使用硬件实现的，执行的过程不允许被中断，只能一气呵成。（简称TS指令或TSL指令）<br>优点：实现简单，无需像软件实现方法那样严格检查是否会有逻辑漏洞；适用于多处理机环境。<br>缺点：不满足“让权等待”原则，暂时无法进入临界区的进程会占用CPU并循环执行TSL指令，从而导致“忙等”  </p>
<h3 id="Swap指令"><a href="#Swap指令" class="headerlink" title="Swap指令"></a>Swap指令</h3><p>也叫XCHG指令，与TS指令相似<br>优点：实现简单，无需像软件实现方法那样严格检查是否会有逻辑漏洞；适用于多处理机环境。<br>缺点：不满足“让权等待”原则，暂时无法进入临界区的进程会占用CPU并循环执行TSL指令，从而导致“忙等”  </p>
<h2 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h2><p>互斥锁：一个进程在进入临界区时应获得锁；在退出临界区时释放锁。（忙等待）<br>需要连续循环忙等的互斥锁，被称为自旋锁<br>优点：等待期间不用切换进程上下文，多处理机系统中，若上锁的时间短，则等待代价很低，常用于多处理机系统，不适用于单处理机系统。  </p>
<h2 id="信号量机制"><a href="#信号量机制" class="headerlink" title="信号量机制"></a>信号量机制</h2><p>用户进程可以通过使用操作系统提供的一对原语来对信号量操作，从而很方便的是西安进程互斥、进程同步。<br>信号量：标识系统中某种资源的数量<br>整形信号量不满足“让权等待”原则，会发生“忙等”；但记录型信号量不会出现这个问题。  </p>
<h3 id="实现进程互斥"><a href="#实现进程互斥" class="headerlink" title="实现进程互斥"></a>实现进程互斥</h3><ol>
<li>分析并发进程的关键活动，划定临界区</li>
<li>设置互斥信号量mutex，初值为1</li>
<li>在进入区P（mutex）–申请资源</li>
<li>在退出区V（mutex）–释放资源<br>对不同的临界资源需要设置不同的互斥信号量。P、V操作必须成对出现。</li>
</ol>
<h3 id="实现进程同步"><a href="#实现进程同步" class="headerlink" title="实现进程同步"></a>实现进程同步</h3><ol>
<li>分析什么地方需要实现“同步关系”，即必须保证“一前一后”执行的两个操作</li>
<li>设置同步信号量S，初始值为0</li>
<li>在“前操作”之后执行V（S）</li>
<li>在“后操作”之前执行P（S）</li>
</ol>
<h2 id="生产者与消费者问题"><a href="#生产者与消费者问题" class="headerlink" title="生产者与消费者问题"></a>生产者与消费者问题</h2><p>系统中有一组生产者进程，生产者进程每次生产一个产品放入缓冲区，消费者进程每次从缓冲区中取出一个产品使用。（生产者、消费者共享一个初始为空、大小为n的缓冲区。只有缓冲区没满时，生产者才能把产品放入缓冲区，否则必须等待。只有缓冲区不空时，消费者才能从中取出产品，否则必须等待。缓冲区是临界资源，各进程必须互斥地访问）</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">semophore mutex=1;                   //临界区互斥信号量</span><br><span class="line">semophore empty=n;                   //空闲缓冲区</span><br><span class="line">semophore full=0;                    //缓冲区初始化为空</span><br><span class="line">producer(){                          //生产者进程</span><br><span class="line">	while(1){</span><br><span class="line">		produce an item in nextp;    //生产数据</span><br><span class="line">		P(empty);                    //获取空缓冲区单元</span><br><span class="line">		P(mutex);                    //进入临界区</span><br><span class="line">		add nextp to buffer;         //将数据放入缓冲区</span><br><span class="line">		V(mutex);                    //离开临界区，释放互斥信号量</span><br><span class="line">		V(full);                     //满缓冲区加1</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line">consumer(){                          //消费者进程</span><br><span class="line">	while(1){</span><br><span class="line">		P(full);                     //获取满缓冲区单元</span><br><span class="line">		P(mutex);                    //进入临界区</span><br><span class="line">		remove an item from buffer;  //从缓冲区中取出数据</span><br><span class="line">		V(mutex);                    //离开临界区，释放互斥信号量</span><br><span class="line">		P(empty);                    //空缓冲区数加1</span><br><span class="line">		consume the item;            //消费数据</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<h2 id="读者写者问题"><a href="#读者写者问题" class="headerlink" title="读者写者问题"></a>读者写者问题</h2><p>有读者和写者两组并发进程，共享一个文件，当两个或两个以上地读进程同时访问共享数据时不会产生副作用，但若某个写进程和其它进程（读进程或写进程）同时访问共享数据时则可能导致数据不一致的错误。因此要求：允许多个读者可以同时对文件执行读操作；只允许一个写者往文件中写信息；任一写者在完成写操作之前不允许其他读者或写者工作；写者执行写操作之前，应让已有的读者和写者全部退出。  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">int count=0;          //用于记录当前的读者数量</span><br><span class="line">semaphore mutex=1;    //用于保护更新count变量是的互斥</span><br><span class="line">semaphore rw=1;       //用于保证读者和写着互斥地访问文件</span><br><span class="line">semaphore w=1;        //用于实现“写优先”</span><br><span class="line">writer(){             //写者进程</span><br><span class="line">	while(1){</span><br><span class="line">		P(w);         //在无写进程请求时进入</span><br><span class="line">		P(rw);        //互斥访问共享文件</span><br><span class="line">		writing;      //写入</span><br><span class="line">		V(rw);        //释放共享文件</span><br><span class="line">		V(w);         //恢复对共享文件的访问</span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line">reader(){             //读者进程</span><br><span class="line">	while(1){</span><br><span class="line">		P(w);         //在无写进程请求时进入</span><br><span class="line">		P(mutex);     //互斥访问count变量</span><br><span class="line">		if(count==0)  //当一个读进程读共享文件时</span><br><span class="line">			P(rw);    //阻止写进程写</span><br><span class="line">		count++;      //读者计数器加1</span><br><span class="line">		V(mutex);     //释放互斥变量count</span><br><span class="line">		V(w);         //恢复对共享文件的访问</span><br><span class="line">		reading;      //读取</span><br><span class="line">		P(mutex);     //互斥访问count变量</span><br><span class="line">		count--;      //读者计数器减1</span><br><span class="line">		if(count==0)  //当最后一个读进程读完共享文件</span><br><span class="line">			V(rw);    //允许写进程写</span><br><span class="line">		V(mutex);     //释放互斥变量count</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<h2 id="哲学家进餐问题"><a href="#哲学家进餐问题" class="headerlink" title="哲学家进餐问题"></a>哲学家进餐问题</h2><p>一张圆桌上坐着5名哲学家，每两个哲学家之间的桌子摆一根筷子，桌子的中间是一碗米饭。哲学家倾注毕生的精力用于思考和进餐，哲学家在思考时，并不影响他人。只有当哲学家饥饿时，才是试图拿起左、右两根筷子。如果筷子已在他人受伤，则需等待。饥饿的哲学家只有同时拿起两根筷子才可以开始进餐，当进餐完毕后，放下筷子继续思考。  </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">semaphore chopstick[5]={1,1,1,1,1};  //初始化信号量</span><br><span class="line">semaphore mutex=1;                   //设置取筷子地信号量</span><br><span class="line">Pi(){                                //i号哲学家的进程</span><br><span class="line">	do{</span><br><span class="line">		P(mutex);                    //在取筷子前获得互斥量</span><br><span class="line">		P(chopstick[i]);             //取左边筷子</span><br><span class="line">		P(chopstick[(i+1)%5]);       //取右边筷子</span><br><span class="line">		V(mutex);                    //释放取筷子的信号量</span><br><span class="line">		eat;                         //进餐</span><br><span class="line">		V(chopstick[i]);             //放回左边筷子</span><br><span class="line">		P(chopstick[(i+1)%5]);       //放回右边筷子</span><br><span class="line">		think;                       //思考</span><br><span class="line">	}while(1);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div>
<h1 id="管程"><a href="#管程" class="headerlink" title="管程"></a>管程</h1><p>管程是一种特殊的软件模块：</p>
<ul>
<li>局部于管程的共享数据结构说明</li>
<li>对该数据结构进行操作对的一组过程</li>
<li>对局部于管程的共享数据设置初始值的语句；</li>
<li>管程有一个名字；<br>管程的基本特征：</li>
<li>局部于管程的数据只能被局部于管程的过程所访问</li>
<li>一个进程只有通过调用管程内的过程才能进入莞城访问共享数据</li>
<li>每次仅允许一个进程在管程内执行某个内部过程</li>
</ul>
<h1 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h1><p>死锁：各进程互相等待对方手里的资源，导致各进程阻塞，无法推进的现象。<br>饥饿：由于长期得不到想要的资源，某进程无法向前推进的现象。<br>死循环：某进程执行过程中一直跳不出某个循环地现象。<br>死锁发生的条件：</p>
<ul>
<li>互斥条件：只有对必须互斥使用的资源的争抢才会导致死锁</li>
<li>不剥夺条件：进程所获得的资源在未使用完之前，不能由其他进程强行夺走，只能主动释放。  </li>
<li>请求和保持条件：进程已经保持了至少一个资源，但又提出了新的资源请求，而该资源又被其他进程占有，此时请求进程阻塞，但又对自己已有的资源保持不变。  </li>
<li>循环等待条件：存在一种进程资源的循环等待链，链中的每一个进程已获得的资源同时被下一个进程所请求。</li>
</ul>
<p>发生死锁的时机：</p>
<ul>
<li>对系统资源的竞争</li>
<li>进程推进顺序非法</li>
<li>信号量使用不当<br>死锁地处理策略：</li>
<li>预防死锁</li>
<li>避免死锁：”银行家算法“：在资源分配之前预先判断这次分配是否会导致系统进入不安全状态</li>
<li>死锁的检测和解除<ul>
<li>资源剥夺法</li>
<li>撤销进程法</li>
<li>进程回退法</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
  </entry>
  <entry>
    <title>第五章-IO管理</title>
    <url>/2024/09/13/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E4%BA%94%E7%AB%A0-IO%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>I/O设备的电子部件：CPU无法直接控制I/O设备的机械部件，因此I/O设备还要有一个电子部件座位CPU和I/O设备机械部件的“中介”，用于实现CPU对设备的控制。<br>I/O控制器的功能：</p>
<ul>
<li>接受和识别CPU发出的命令：I/O控制器中会有相应的控制寄存器，来存放命令和参数</li>
<li>向CPU报告设备的状态：会有响应的状态寄存器，用于记录I/O设备的当前状态</li>
<li>数据交换：设置响应的数据寄存器</li>
<li>地址识别：需要给各个寄存器设置一个特定的“地址”<br><img lazyload src="/images/loading.svg" data-src="/2024/09/13/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E4%BA%94%E7%AB%A0-IO%E7%AE%A1%E7%90%86/IOControle.png"></li>
<li>一个I/O控制器可能会对应多个设备</li>
<li>数据存储器、控制寄存器、状态机村可能有多个（内存映像I/O、寄存器独立编址）<ul>
<li>内存映射I/O：控制器中的寄存器与内存统一编制，可以采用堆内存进行操作的指令来对控制器进行操作</li>
<li>寄存器独立编制：控制器中的寄存器独立编址，需要设置专门的指令来操作控制器</li>
</ul>
</li>
</ul>
<h1 id="I-O控制方式"><a href="#I-O控制方式" class="headerlink" title="I/O控制方式"></a>I/O控制方式</h1><h2 id="程序直接控制方式"><a href="#程序直接控制方式" class="headerlink" title="程序直接控制方式"></a>程序直接控制方式</h2><p>cpu会向I/O模块进行轮询检查，判断所对应的I/O模块的状态，从而进行相关操作。<br>CPU干预很频繁，I/O操作开始之前、完成后需要CPU介入，并且在等待I/O完成的过程中CPU需要不断地轮询检查。<br><em>每次读写一个字，每个字的读写都需要CPU帮助</em></p>
<ul>
<li>优点：实现简单</li>
<li>缺点：CPU和I/O设备只能串行工作，CPU需要移植轮询检查，长期处于“忙等”状态，CPU利用率低。</li>
</ul>
<h2 id="中断驱动方式"><a href="#中断驱动方式" class="headerlink" title="中断驱动方式"></a>中断驱动方式</h2><p>引入中断机制。由于I/O设备速度很慢，因此在CPU发出读/写命令后，可将等待I/O的进程阻塞，先切换到别的进程执行。当I/O完成后，控制器回想CPU发出一个中断信号，CPU检测到中断信号后，会保存当前进程的运行环境信息，转去执行中断处理程序该中断。处理终端过程中，CPU从I/O控制器读一个字的数据传送到CPU寄存器，再写入主存。接着，CPU恢复等待I/O的进程的运行环境，然后继续执行。  </p>
<ol>
<li>CPU会在每个指令周期的末尾检查中断</li>
<li>中断处理过程中需要保存、恢复进程的运行环境，这个过程是需要一定时间开销的。如果中断发生的频率过高，会降低系统性能。<br><em>每次读/写一个字</em></li>
</ol>
<ul>
<li>优点：CPU和I/O设备并行工作，CPU利用率得到明显提升</li>
<li>缺点：频繁的中断处理会消耗较多的CPU时间</li>
</ul>
<h2 id="DMA方式"><a href="#DMA方式" class="headerlink" title="DMA方式"></a>DMA方式</h2><p>直接存储器存取。主要用于块设备的I/O控制。<strong>数据的传送单位是“块”</strong>，多个块必须是连续存放，仅在传送一个或多个数据块的开始和结束时才需要CPU干预。<br>DMA控制器（==本身就是I/O设备==）：</p>
<ul>
<li>DR（数据寄存器）：暂存从设备到内存，或从内存到设备的数据</li>
<li>MAR（内存地址寄存器）：在输入时，MAR表示数据应放到内存中的什么位置；输出时MAR表示要输出的数据放在内存中的什么位置</li>
<li>DC（数据计数器）：表示剩余要读/写的字节数</li>
<li>CR（命令状态寄存器）：用于存放CPU发来的I/O命令，或设备的状态信息<br>优点：数据传输效率增加，CPU利用率高。<br>缺点：读取离散的块需要执行多条I/O指令，进行多次中断处理才能完成。</li>
</ul>
<h2 id="通道控制方式"><a href="#通道控制方式" class="headerlink" title="通道控制方式"></a>通道控制方式</h2><p>通道可以识别并执行一系列通道指令。<br>与CPu相比，通道可以执行的指令很单一，并且通道程序是放在主机内存中，也就是说通道与CPU共享内存。  </p>
<ul>
<li>优点：实现复杂，需要专门的通道硬件支持</li>
<li>缺点：CPU、通道、I/O设备可并行工作，资源利用率高</li>
</ul>
<h1 id="I-O软件层次"><a href="#I-O软件层次" class="headerlink" title="I/O软件层次"></a>I/O软件层次</h1><ul>
<li>用户层软件：实现了与用户交互的接口，用户可直接使用该层提供的、与I/O操作相关的库函数对设备进行操作（SPOOLING技术）</li>
<li>设备独立性软件：用户层软件将用户请求翻译成格式化的I/O请求，并通过“系统调用”请求操作系统内核的服务</li>
<li>设备驱动程序：向上层提供统一的调用接口；设备的保护；差错处理；设备的分配与回收；数据缓冲区管理；建立逻辑设备名到物理设备名的映射关系：根据设备类型选择调用相应的驱动程序（逻辑设备表LUT）</li>
<li>中断处理程序：根据中断信号类型找到中断处理程序并执行</li>
</ul>
<h1 id="输入输出应用接口"><a href="#输入输出应用接口" class="headerlink" title="输入输出应用接口"></a>输入输出应用接口</h1><ul>
<li>字符设备接口：get/put</li>
<li>块设备接口：read/write、seek（寻址）</li>
<li>网络设备接口：socket、bind、connect、read/write<br>阻塞I/O：应用程序发出I/O系统调用，进程需转为阻塞态等待<br>非阻塞I/O：应用程序发出I/O系统调用，系统调用可迅速返回，进程无需阻塞等待<br>设备驱动程序接口会被统一规定好</li>
</ul>
<h1 id="I-O核心子系统"><a href="#I-O核心子系统" class="headerlink" title="I/O核心子系统"></a>I/O核心子系统</h1><h2 id="SPOOLING系统"><a href="#SPOOLING系统" class="headerlink" title="SPOOLING系统"></a>SPOOLING系统</h2><p>引入脱机技术后，缓解了CPU与慢速I/O设备的速度矛盾。另一方面，即使CPU在忙碌，也可以提前将数据输入到磁带；即使慢速的输出设备正在忙碌，也可以将数据输出到磁带。<br>SPOOLING技术需要多道批道程序支持</p>
<h2 id="设备的分配"><a href="#设备的分配" class="headerlink" title="设备的分配"></a>设备的分配</h2><p>设备的固有属性：独占设备、共享设备、虚拟设备<br>从进程运行的安全性上考虑：</p>
<ul>
<li>安全分配方式：为进程分配一个设备后就将进程阻塞，本溪I/O完成后才将进程唤醒</li>
<li>不安全分配方式：进程发出I/O请求后，系统为其分配I/O设备，进程可继续执行，之后还可以发出新的I/O请求。只有某个I/O请求得不到满足时才将进程阻塞（==死锁避免==）<br>根据进程的分配过程：</li>
<li>静态分配：进程运行前为其分配全部所需资源，运行结束后归还资源（破坏了“请求和保持”条件，不会发生死锁）</li>
<li>动态分配：进程运行过程中动态申请设备资源<br>设备控制表（DCT）、控制器控制表（COCT）、通道控制表（CHCT）、系统设备表（记录系统全部设备情况）<br>设备分配步骤：</li>
</ul>
<ol>
<li>根据进程请求的物理设备名查找系统设备表（物理设备名是进程请求分配设备时提供的参数）</li>
<li>根据系统设备表找到设备控制表，若设备忙碌则将进程PCB挂到设备等待队列中，不忙碌则将设备分配给进程。</li>
<li>根据设备控制表找到控制器控制表，若控制器忙碌则将进程PCB挂到控制器等待队列中，不忙陆泽将控制器分配给进程</li>
<li>根据控制器控制表找到通道控制表，若通道忙碌则将进程PCb挂到通道等待队列中，不忙碌则将通道分配给进程<br>缺点：</li>
</ol>
<ul>
<li>底层细节对用户不透明，不方便编程</li>
<li>换物理设备则程序无法运行</li>
<li>若进程请求的物理设备正在忙碌，则机试系统中还有同类型的设备，进程也必须阻塞等待<br>改进方法：建立逻辑设备名与物理设备名的映射机制，用户编程时只需提供逻辑设备名</li>
</ul>
<h2 id="缓冲区"><a href="#缓冲区" class="headerlink" title="缓冲区"></a>缓冲区</h2><p>缓冲区是一个存储区域，可以有专门的硬件寄存器组成，也可利用内存作为缓冲区。<br>使用硬件作为缓冲区的成本较高，容量也较小，一般金庸在队速度要求非常高的场合。<br>缓冲区的作用：</p>
<ul>
<li>缓和CPU与I/O设备之间速度不匹配的矛盾</li>
<li>减少对CPU的中断频率，放宽对CPU中断响应时间的限制</li>
<li>解决数据粒度不匹配的问题</li>
<li>提高CPU与I/O设备之间的并行性</li>
</ul>
<h3 id="单缓冲"><a href="#单缓冲" class="headerlink" title="单缓冲"></a>单缓冲</h3><p>操作系统在主存中为一个进程分配一个缓冲区。当缓冲区数据非空时，不能往缓冲区冲入数据，只能从缓冲区把数据传出；当缓冲区为空时，可以往缓冲区冲入数据，但必须把缓冲区充满以后，才能从缓冲区把数据传出。  </p>
<h3 id="双缓冲"><a href="#双缓冲" class="headerlink" title="双缓冲"></a>双缓冲</h3><p>处理一个数据块的平均耗时为MAX（T，C+M）</p>
<h3 id="循环缓冲区"><a href="#循环缓冲区" class="headerlink" title="循环缓冲区"></a>循环缓冲区</h3><p>将多个大小相等的缓冲区链接成一个循环队列</p>
<h3 id="缓冲池"><a href="#缓冲池" class="headerlink" title="缓冲池"></a>缓冲池</h3><p>缓冲池由系统中共用的缓冲区组成。这些缓冲区按使用状况可以分为：空缓冲队列、装满输入数据的缓冲队列、装满输出数据的缓冲队列</p>
<h1 id="磁盘调度算法"><a href="#磁盘调度算法" class="headerlink" title="磁盘调度算法"></a>磁盘调度算法</h1><p>寻找时间（寻道时间）：在读/写数据前，将磁头移动到制定此岛所花的时间<br>延迟时间：通过旋转磁盘，使磁头定位到目标扇区所需要的时间<br>传输时间：从磁盘读出或向磁盘写入数据所经历的时间。<br>先进先出算法、最短寻找时间优先（容易产生饥饿现象）、扫描算法（SCAN）、LOOK调度算法（边移动边观察）、循环扫描算法（C-Scan，磁头返回时直接快速移动至起始端而不处理任何请求）、C-LOOK算法<br>减少延迟时间的方法：</p>
<ul>
<li>交替编号：让逻辑上相邻的扇区在物理上有一定的间隔，可以实读取连续的逻辑扇区所需要的延迟时间更小</li>
<li>错位命名</li>
</ul>
<h1 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h1><p>一个扇区通常可划分为头、数据区域、尾。<br>完整的自举程序放在磁盘的启动块（引导块），启动块位于磁盘的固定位置。<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%94%E7%AB%A0-IO%E7%AE%A1%E7%90%86/SSD.png"></p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
  </entry>
  <entry>
    <title>中共会议</title>
    <url>/2024/10/26/%E8%80%83%E7%A0%94%E6%94%BF%E6%B2%BB/%E4%B8%AD%E5%85%B1%E4%BC%9A%E8%AE%AE/</url>
    <content><![CDATA[<p>中共一大：1921年7月23日，确定党的名称是“中国共产党”，决定首先集中精力组织工人，坚持用革命的手段实现社会主义和共产主义的奋斗目标。<br>中共二大：</p>
<ul>
<li>第一次提出反帝反封建的民主纲领，组成“民主主义的联合战线”</li>
<li>开始采取民族资产阶级、小资产阶级的政党和政治派别没有采取过、也不可能采取的革命方法，即群众路线的方法</li>
</ul>
<p>中共三大：重视决定全体共产党员以个人名义加入国民党，同孙中山领导的国民党建立统一战线。明确规定共产党员加入国民党时，党必须在政治上、思想上、组织上保持自己的独立性。<br>八七会议：</p>
<ul>
<li>会议彻底清算了大革命后期的陈独秀右倾机会主义错误</li>
<li>确定了土地革命和武装反抗国民党反动统治的总方针。会议明确提出土地革命是中国资产阶级民主革命的中心问题</li>
</ul>
<p>古田会议：确立了思想建党、政治建军原则，规定红军是一个执行革命的政治任务的武装集团，必须绝对服从共产党的领导，必须担负打仗、筹款和做群众工作的任务，必须加强政治工作<br>遵义会议：集中解决了当时具有决定意义的军事问题和组织问题，确立了毛泽东在党中央和红军的领导地位，开始确立以毛泽东为主要代表的马克思主义正确路线在党中央的领导地位，开始形成以毛泽东同志为核心的第一代中央领导集体<br>瓦窑堡会议：</p>
<ul>
<li>阐明抗日统一战线的可能性</li>
<li>批评拿了“左”倾冒险主义、关门主义错误倾向，强调共产党在抗日民族统一战线中的领导作用</li>
<li>规定了建立广泛的抗日民族统一战线的具体政策，决定以“人民共和国”口号代替“工农共和国”</li>
<li>制定了“发展进步势力、争取中间势力、孤立顽固势力”的策略方针</li>
</ul>
<p>六届六中全会：基本纠正了王明的右倾错误，进一步巩固了毛泽东在全党的领导地位，统一了全党的思想和步调，推动了各项工作迅速发展<br>六届七中全会：通过《关于若干历史问题的会议》，该决议是全党特别是党的高级干部对中国革命基本问题的认识达到了一致，增强了全党团结，为党的七大胜利召开创造了充分条件，有力促进了中国革命事业发展。<br>中共七大：制定了党的政治路线，总结了党的建设的历史经验，把党在长期奋斗形成的优良作风概括为三大作风，确立了毛泽东思想在全党的指导地位。<br>中共七届二中全会：</p>
<ul>
<li>提出了迅速夺取全国胜利的方针，有天津市、北平式、绥远式</li>
<li>党的工作重心必须由乡村转移到城市</li>
<li>指出了中国由农业国转变为工业国、由新民主主义社会转变为社会主义社会的发展方向</li>
</ul>
<p>中共八大：国内主要矛盾已经是人民对于经济文化迅速发展的需要同当前经济文化不能满足人民需要的状况之间的矛盾。<br>十一届三中全会：重新确立了马克思主义的思想路线、政治路线和组织路线，形成了以邓小平同志为核心的党中央领导集体，揭开了社会主义改革开放的序幕，重新确立了解放思想、实事求是的路线，开始了拨乱反正，结束了阶级斗争为纲、将党和国家的重心转移到经济建设和现代化建设<br>十一届六中全会：</p>
<ul>
<li>提出了毛泽东思想活的灵魂</li>
<li>科学评价了毛泽东思想和毛泽东本人</li>
<li>完成了拨乱反正</li>
<li>第一次使用社会主义初级阶段</li>
</ul>
]]></content>
      <categories>
        <category>考研政治</category>
      </categories>
  </entry>
  <entry>
    <title>毛主席的文章</title>
    <url>/2024/10/26/%E8%80%83%E7%A0%94%E6%94%BF%E6%B2%BB/%E6%AF%9B%E6%B3%BD%E4%B8%9C%E7%9A%84%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h1 id="《中国社会各阶级分析》"><a href="#《中国社会各阶级分析》" class="headerlink" title="《中国社会各阶级分析》"></a>《中国社会各阶级分析》</h1><p>时期：大革命时期<br>重要内容：分清敌友。以往的斗争之所以成效甚少，一个重要原因，就在于不能团结真正的朋友，以攻击真正的敌人。  </p>
<h1 id="《国民革命与农民运动》"><a href="#《国民革命与农民运动》" class="headerlink" title="《国民革命与农民运动》"></a>《国民革命与农民运动》</h1><p>时期：大革命时期<br>“农民问题乃国民问题的中心问题”，“所谓国民革命任务，其大部分即是农民运动”</p>
<h1 id="《中国的红色政权为什么能够存在》和《井冈山的斗争》"><a href="#《中国的红色政权为什么能够存在》和《井冈山的斗争》" class="headerlink" title="《中国的红色政权为什么能够存在》和《井冈山的斗争》"></a>《中国的红色政权为什么能够存在》和《井冈山的斗争》</h1><p>时期：土地革命<br>提出了工农武装割据的思想  </p>
<h1 id="《星星之火。可以燎原》"><a href="#《星星之火。可以燎原》" class="headerlink" title="《星星之火。可以燎原》"></a>《星星之火。可以燎原》</h1><p>时期：土地革命<br>进一步阐明了中国革命只能走与资本主义国家不同的道路</p>
<h1 id="《反对本本主义》"><a href="#《反对本本主义》" class="headerlink" title="《反对本本主义》"></a>《反对本本主义》</h1><p>时期：土地革命  </p>
<ol>
<li>阐明了坚持辩证唯物主义的思想路线即坚持理论与实际相结合的原则的极端重要性</li>
<li>提出了“没有调查，没有发言权”和“中国革命斗争的胜利要靠中国同志了解中国情况”的重要思想，表现了毛泽东开辟新道路、创造新理论的革命首创精神</li>
</ol>
<h1 id="《论反对日本帝国主义的策略》"><a href="#《论反对日本帝国主义的策略》" class="headerlink" title="《论反对日本帝国主义的策略》"></a>《论反对日本帝国主义的策略》</h1><p>时期：土地革命后期至抗日战争时期<br>阐明党的抗日民族统一战线的新政策，系统说明了党的政治策略上的诸问题</p>
<h1 id="《中国战争革命的战略问题》"><a href="#《中国战争革命的战略问题》" class="headerlink" title="《中国战争革命的战略问题》"></a>《中国战争革命的战略问题》</h1><p>时期：土地革命后期至抗日战争时期<br>总结土地革命战争中党内在军事问题上的争论，系统说明了有关中国革命战争战略方面的诸问题</p>
<h1 id="《实践论》和《矛盾论》"><a href="#《实践论》和《矛盾论》" class="headerlink" title="《实践论》和《矛盾论》"></a>《实践论》和《矛盾论》</h1><p>时期：土地革命后期至抗日战争时期<br>从马克思主义认识论的高度，总结中国共产党的历史经验，揭露和批评党内的主观主义尤其是教条主义错误，深入论证马克思列宁主义基本原理同中国具体实际相结合的原则，科学阐明了党的马克思主义思想路线。  </p>
<h1 id="《论持久战》"><a href="#《论持久战》" class="headerlink" title="《论持久战》"></a>《论持久战》</h1><p>时期：抗日战争时期<br>一方面，日本是强国，中国是弱国，强国弱国的对比，决定了抗日战争只能是持久战。另一方面，日本是小国，发动的是退步的、野蛮的侵略战争，在国际上失道寡助；而中国是大国，进行的是进步的、正义的反侵略战争，在国际上得道多助。科学预见抗日战争的发展进程，即抗日战争将经过战略防御、战略相持、战略反攻三个阶段。其中，战略相持阶段，是中国抗日战争取得最后胜利的最关键阶段。只要坚持持久抗战、坚持抗日民族统一战线，中国将在这个阶段中获得转弱为强的力量。  </p>
<h1 id="《论新阶段》"><a href="#《论新阶段》" class="headerlink" title="《论新阶段》"></a>《论新阶段》</h1><p>时期：抗日战争时期<br>明确提出了“马克思主义的中国化”这个命题</p>
<h1 id="《论人民民主专政》"><a href="#《论人民民主专政》" class="headerlink" title="《论人民民主专政》"></a>《论人民民主专政》</h1><p>时期：解放战争时期<br>资产阶级共和国的方案在中国行不通。人民民主专政需要工人阶级的领导。人民民主专政的基础是工人阶级、农民阶段和城市小资产阶级的联盟，而主要是工人和农民的联盟。  </p>
<h1 id="《论十大关系》"><a href="#《论十大关系》" class="headerlink" title="《论十大关系》"></a>《论十大关系》</h1><p>时期：一化三改时期  </p>
<ol>
<li>方针：调动一切积极因素，为社会主义事业服务</li>
<li>原则：探索适合中国情况的社会主义建设道路</li>
<li>两个标准：以毛泽东同志为主要代表的中国共产党人开始探索中国国情的社会主义建设道路的标志；马克思主义与中国化第二次结合的开始</li>
</ol>
<h1 id="《关于正确处理人民内部矛盾的问题》"><a href="#《关于正确处理人民内部矛盾的问题》" class="headerlink" title="《关于正确处理人民内部矛盾的问题》"></a>《关于正确处理人民内部矛盾的问题》</h1><p>时期：建设社会主义时期<br>提出关于社会主义社会两类不同性质的社会矛盾，关于社会主义社会的基本矛盾</p>
]]></content>
      <categories>
        <category>考研政治</category>
      </categories>
  </entry>
  <entry>
    <title>第二章-物理层</title>
    <url>/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%89%A9%E7%90%86%E5%B1%82/</url>
    <content><![CDATA[<p>任务：实现相邻节点之间的比特（0或1）的传输</p>
<h2 id="通信基础"><a href="#通信基础" class="headerlink" title="通信基础"></a>通信基础</h2><ul>
<li>信源：信号的来源  </li>
<li>信宿：信号的“归宿”</li>
<li>数据：信息的实体</li>
<li>信道：信号的通道  </li>
<li>信号：<ul>
<li>数字信号：离散的</li>
<li>模拟信号：连续的</li>
</ul>
</li>
<li>码元：对应一种信号 <strong>1码元=<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="5.85ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 2585.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g><g data-mml-node="mi" transform="translate(1696.6,0)"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"/></g></g></g></svg></mjx-container>bit</strong></li>
<li>码元宽度：信号周期</li>
<li>波特率：每秒钟传输的码元数码元/秒</li>
</ul>
<h2 id="信道的极限容量"><a href="#信道的极限容量" class="headerlink" title="信道的极限容量"></a>信道的极限容量</h2><p>奈奎斯特定理：<em><strong>对于一个理想低通信道（没有噪声、带宽有限的信道）</strong></em> 极限波特率=2W（波特即码元/秒）即**极限波特率=<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="9.352ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 4133.6 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"/></g><g data-mml-node="mi" transform="translate(1548,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(1846,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(2331,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g><g data-mml-node="mi" transform="translate(3244.6,0)"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"/></g></g></g></svg></mjx-container>**【W为带宽】  </p>
<ul>
<li>如果波特率太高，会导致“码间串扰”，即接收方无法识别码元</li>
<li>带宽越大，信道传输码元的能力越强</li>
<li>并未对一个码元最多可以携带多少比特做出解释</li>
</ul>
<p>香农定理：<em><strong>对于一个有噪声、带宽有限的信道</strong></em>，极限比特率=W<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="11.912ex" height="2.8ex" role="img" focusable="false" viewbox="0 -892.5 5264.9 1237.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g><g data-mml-node="mo" transform="translate(1696.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mn" transform="translate(2085.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(2807.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mfrac" transform="translate(3808,0)"><g data-mml-node="mi" transform="translate(305.9,394) scale(0.707)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="mi" transform="translate(220,-345) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"/></g><rect width="827.9" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(4875.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container>  (b/s)<br>信噪比=S/N=<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.158ex;" xmlns="http://www.w3.org/2000/svg" width="8.994ex" height="3.447ex" role="img" focusable="false" viewbox="0 -1011.8 3975.5 1523.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,481.4) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">噪</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">声</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">功</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">率</text></g></g><g data-mml-node="mrow" transform="translate(220,-370.3) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">信</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">号</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">功</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">率</text></g></g><rect width="3735.5" height="60" x="120" y="220"/></g></g></g></svg></mjx-container>=10<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.238ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 4083.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"/></g></g></g><g data-mml-node="mi" transform="translate(2050.1,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2695.1,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"/></g></g><g data-mml-node="mi" transform="translate(3195.1,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"/></g></g></g></svg></mjx-container>(db分贝)</p>
<ul>
<li>提升信道带宽、加强信号功率、降低噪声功率，都可以提高信道的极限比特率</li>
<li>在带宽、信噪比确定的信道上，一个码元可以携带的比特数是有上限的</li>
</ul>
<h2 id="编码与调制"><a href="#编码与调制" class="headerlink" title="编码与调制"></a>编码与调制</h2><h3 id="数据编码转换为数字信号（编码）"><a href="#数据编码转换为数字信号（编码）" class="headerlink" title="数据编码转换为数字信号（编码）"></a>数据编码转换为数字信号（编码）</h3><ul>
<li>不归零编码（NRZ）：低0高1，中不变（没有自同步能力，不浪费带宽，抗干扰能力弱）</li>
<li>归零编码（RZ）：低0高1，中归0（有自同步能力，浪费带宽，抗干扰能力弱）</li>
<li>反向非归零编码（NRZI）：跳0不跳1看起点，中不变（若增加冗余位，可支持自同步，会浪费一点带宽，抗干扰能力弱）</li>
<li>曼彻斯特编码：跳0反跳1看中间，中必变（有自同步能力，浪费带宽，抗干扰能力强） <em>以太网常用曼彻斯特编码</em></li>
<li>差分曼彻斯特编码：跳0不跳1看起点，中必变 （有自同步能力，浪费带宽，抗干扰能力强）</li>
</ul>
<h3 id="数字数据转换为模拟信号（调制）"><a href="#数字数据转换为模拟信号（调制）" class="headerlink" title="数字数据转换为模拟信号（调制）"></a>数字数据转换为模拟信号（调制）</h3><ul>
<li>调幅（AM或ASK）：通过改变载波的振幅来表示数字0或1</li>
<li>调频（FM或FSK）：通过改变载波的频率来表示数字信号1和0</li>
<li>调相（PM或PSK）：通过改变载波的相位来表示数字1和0</li>
<li>正交幅度调制（QAM）：在频率相同的前提下，将AM与PM结合起来，形成叠加信号。设波特率为B，采用m个相位，每个相位有n种振幅则数据传输速率R为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="13.634ex" height="2.034ex" role="img" focusable="false" viewbox="0 -694 6026.1 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"/></g><g data-mml-node="mo" transform="translate(1036.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(2092.6,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"/></g><g data-mml-node="mi" transform="translate(2851.6,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(3149.6,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(3634.6,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g><g data-mml-node="mi" transform="translate(4548.1,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(5426.1,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></svg></mjx-container></li>
</ul>
<h2 id="传输介质"><a href="#传输介质" class="headerlink" title="传输介质"></a>传输介质</h2><p><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%89%A9%E7%90%86%E5%B1%82/%E5%8F%8C%E7%BB%9E%E7%BA%BF.png"><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%89%A9%E7%90%86%E5%B1%82/%E5%90%8C%E8%BD%B4%E7%94%B5%E7%BC%86.png"><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%89%A9%E7%90%86%E5%B1%82/%E5%85%89%E7%BA%A4.png"></p>
<ul>
<li>10Base5——10Mbps,同轴电缆,最远传输距离500m</li>
<li>10BaseF*——10Mbps,光纤。*可以是其他信息</li>
<li>10BaseT*——10Mbps，双绞线。*可以是其他信息</li>
</ul>
<h3 id="无线传输介质"><a href="#无线传输介质" class="headerlink" title="无线传输介质"></a>无线传输介质</h3><ul>
<li>无线电波：穿透能力强、传输距离长、信号指向性弱（手机信号、WiFi）</li>
<li>微波通信：频率带宽高、信号指向性强、保密性差（卫星通信）</li>
<li>红外通信、激光通信等（信号指向性强）</li>
</ul>
<h3 id="物理层接口特性"><a href="#物理层接口特性" class="headerlink" title="物理层接口特性"></a>物理层接口特性</h3><ul>
<li>机械特性：指明接口所用接线器的形状和尺寸、引脚数目和排列、固定和锁定装置等</li>
<li>电气特性：指明在接口电缆的各条线上出现的电压的范围、传输速率、距离限制等</li>
<li>功能特性：指明某条线上出现的某一点平的电压的意义</li>
<li>过程特性：指明对于不同功能的各种可能时间的出现顺序</li>
</ul>
<h2 id="物理层设备"><a href="#物理层设备" class="headerlink" title="物理层设备"></a>物理层设备</h2><p>中继器：中继器只有两个端口。通过一个端口接收信号，将失真信号整形再生，并转发至另一个端口，<em>仅支持半双工通信</em>，两个端口对应两个“网段”<br>集线器：本质上是多端口中继器。集线器将其中一个端口接收到的信号整形再生后，转发到其他端口，各端口连接的结点不可同时发送数据，会导致“冲突”，集线器的N个端口对应N个“网段”，各网段属于同一个“冲突域”  </p>
<ul>
<li>集线器、中继器不能无线串联</li>
<li>集线器连接的网络，物理上是星型拓扑，逻辑上是总线型拓扑</li>
<li>集线器链接的各网段“共享带宽”</li>
</ul>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>计算机网络体系结构</title>
    <url>/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p><strong>计算机网络</strong>：是一个将众多分散的、自治的计算机系统，通过通信设备与线路连接，有功能完整的软件实现资源共享和信息传递的系统。<br><strong>互连网</strong>：可以把两个或多个计算机网络互相连接起来，形成更大的计算机网络。<code>任意协议</code><br><strong>互联网（Internet）</strong>：由各大ISP（Internet Service Provider）和国际机构组建的，覆盖全球范围的互连网。<code>TCP/IP协议</code><br><code>家用路由器=路由器+交换机+其他功能</code></p>
<h2 id="计算机网络组成"><a href="#计算机网络组成" class="headerlink" title="计算机网络组成"></a>计算机网络组成</h2><ul>
<li>从组成部分来看：<ul>
<li>硬件：<ul>
<li>主机</li>
<li>通信链路</li>
<li>交互设备</li>
<li>通信处理机</li>
<li>······</li>
</ul>
</li>
<li>软件：方便用户使用，实现资源共享</li>
<li>协议：规定了计算机网络中的通信规则，由硬件、软件共同实现。</li>
</ul>
</li>
<li>从工作方式来看：<ul>
<li>边缘部分：<ul>
<li>工作方式：直接为用户服务</li>
<li>主要由连接到互联网上的主机及其软件组成</li>
</ul>
</li>
<li>核心部分：<ul>
<li>工作方式：为边缘部分提供服务</li>
<li>由大量网络和连接这些网络的路由器组成</li>
</ul>
</li>
</ul>
</li>
<li>从逻辑功能来看：<ul>
<li>通信子网：<ul>
<li>计算机网络中负责计算机间信息信息传输的部分。即把计算机和其他用户装置互联在一起的所有通信设备和介质的总称</li>
<li>主要由通信链路+通信设备+协议构成</li>
</ul>
</li>
<li>资源子网：<ul>
<li>计算机网络运行应用程序，向用户提供可共享的硬件、软件和信息资源的部分</li>
<li>主要由连接到互联网上的主机组成</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="计算机网络的功能"><a href="#计算机网络的功能" class="headerlink" title="计算机网络的功能"></a>计算机网络的功能</h2><ul>
<li>资源共享：<ul>
<li>硬件资源共享</li>
<li>软件资源共享</li>
<li>数据资源共享</li>
</ul>
</li>
<li>数据通信：实现计算机之间的数据传输。<em>最基本最重要的功能</em></li>
<li>分布式处理：将某个复杂任务分配给网络中多台计算机处理</li>
<li>提高可靠性：网络中各台计算机互为替代机</li>
<li>负载均衡：将工作任务均衡地分配给计算机网络中的各台计算机</li>
<li>还可以实现电子化办公与服务、远程教育、娱乐等功能</li>
</ul>
<h2 id="电路交换、报文交换与分组交换"><a href="#电路交换、报文交换与分组交换" class="headerlink" title="电路交换、报文交换与分组交换"></a>电路交换、报文交换与分组交换</h2><p><strong>电路交换</strong>：通过物理线路的连接，动态地分配传输线路资源<br>优点：</p>
<ul>
<li>通信钱从主叫端到被叫端建立一条专用的物理线路，在通信的全部时间内，两个用户始终占用端到端的线路资源。数据直送，传输速率高。<code>更适用于：低频次、大量地传输数据</code></li>
</ul>
<p>缺点：</p>
<ul>
<li>建立/释放连接，需要额外的时间开销</li>
<li>线路被通信双方独占，利用率低</li>
<li>线路分配的灵活性差</li>
<li>交换节点不支持“差错控制”（无法发现传输过程中发生的数据错误）</li>
</ul>
<p><strong>报文交换</strong>：存储转发交换<br>优点：</p>
<ul>
<li>通信前无需建立连接</li>
<li>数据以“报文”为单元被交换节点间“存储转发”，通信线路可以灵活分配</li>
<li>在通信时间内，两个用户无需独占一整条物理线路。相比于电路交换，线路利用率高</li>
<li>支持“差错控制”（通过校验技术）</li>
</ul>
<p>缺点：</p>
<ul>
<li>报文不定长，不方便存储管理</li>
<li>长报文的·存储转发时间开销大、缓存开销大</li>
<li>长报文容易出错，重传的代价高</li>
</ul>
<p><strong>分组交换</strong>：将用户的信息划分为一定长度的数据分组，然后在分组数据上加上控制信息和地址，然后经过分组交换机发送到目的地址。<br>优点：</p>
<ul>
<li>通信前无需建立连接</li>
<li>数据以“分组”为单元被交换结点间“存储转发”，通信线路可以灵活分配</li>
<li>在通信时间内，两个用户无需独占一整条物理线路。相比于电路交换，线路利用率高</li>
<li>支持“差错控制”（通过校验技术）</li>
</ul>
<p>改进问题：（相对于报文交换）</p>
<ul>
<li>分组定长，方便存储转发管理</li>
<li>分组的存储转发时间开销小、缓存开销小</li>
<li>分组不易出错、重传代价低</li>
</ul>
<p>缺点：</p>
<ul>
<li>控制信息占比增加（）</li>
<li>存在转发时延</li>
<li>报文被拆分成多个分组，传输过程中可能出现失序、丢失等问题，增加处理的复杂度<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/Three_Net.png"></li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>电路交换</th>
<th>报文交换交换</th>
<th>分组交换</th>
</tr>
</thead>
<tbody><tr>
<td>完成传输所需时间</td>
<td>最少</td>
<td>最多</td>
<td>较少</td>
</tr>
<tr>
<td>存储转发时延</td>
<td>无</td>
<td>较高</td>
<td>较低</td>
</tr>
<tr>
<td>通信前是否需要建立连接</td>
<td>是</td>
<td>否</td>
<td>否</td>
</tr>
<tr>
<td>缓存开销</td>
<td>无</td>
<td>高</td>
<td>低</td>
</tr>
<tr>
<td>是否支持差错控制</td>
<td>不支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>报文数据是否有序到达</td>
<td>是</td>
<td>是</td>
<td>否</td>
</tr>
<tr>
<td>是否需要额外的控制信息</td>
<td>否</td>
<td>是</td>
<td>是（控制信息占比较大）</td>
</tr>
<tr>
<td>线路分配的灵活性</td>
<td>不灵活</td>
<td>灵活</td>
<td>非常灵活</td>
</tr>
<tr>
<td>线路利用率</td>
<td>低</td>
<td>高</td>
<td>非常高</td>
</tr>
</tbody></table>
<h2 id="计算机网路的分类"><a href="#计算机网路的分类" class="headerlink" title="计算机网路的分类"></a>计算机网路的分类</h2><ul>
<li>按分布范围分类：<ul>
<li>广域网（WAN）：一般跨国跨省</li>
<li>城域网（MAN）：跨城市，常采用“以太网技术”</li>
<li>局域网（LAN）：跨学校/企业/工作单位/家庭，<strong>“以太网技术”</strong></li>
<li>个域网（PAN）：个人家庭使用，经常被称为“无线个域网”</li>
</ul>
</li>
<li>按传输技术分类：<ul>
<li>广播式网络：当一台计算机发送数据分组时，广播范围内所有计算机都会收到该分组，并通过检查分组的目的地址决定是否接受该分组</li>
<li>点对点网络：数据只会从发送方“点对点”发到接收方，精准送达</li>
</ul>
</li>
<li>按拓扑结构：<ul>
<li>总线型结构：数据”广播式“传输；存在”总线争用“</li>
<li>环形结构：数据”广播式“传输；通过”令牌“解决总线争用问题，令牌顺环形依次传递，拿到令牌者可使用总线</li>
<li>星型结构：由中央设备实现数据的”点对点“传输，不存在”总线争用“问题</li>
<li>网状结构：数据通过各中间节点逐一存储转发，属于”点到点“传输，常见于”广域网“，灵活、可靠性高但是复杂性也高</li>
</ul>
</li>
<li>按使用者分类：<ul>
<li>公用网：向公众开放的网络</li>
<li>专用网：仅供某个组织内部使用的网络</li>
</ul>
</li>
<li>按传输介质分类：有线网络、无线网络</li>
</ul>
<h2 id="计算机网络的性能指标"><a href="#计算机网络的性能指标" class="headerlink" title="计算机网络的性能指标"></a>计算机网络的性能指标</h2><h3 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h3><p>定义：指连接到网络上的节点在信道上传输数据的速率。也称<strong>数据率或比特率、数据传输速率</strong><br>单位：bits/s,b/s或者bps（比特每秒）(1B = 8b)<em>以1000作为横跨单位</em><br>信道：表示某一方向传送信息的通道（信道<strong>不等于</strong>通信线路），一条信道线路在逻辑上往往对应一条发送信道和一条接受信道  </p>
<h3 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h3><p>定义：某信道所能传送的最高数据率（其他含义：表示某信道允许通过的信号频带范围）<br>单位：bps（b/s、bit/s）</p>
<h3 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h3><p>定义：指单位时间内通过某个网络（或信道、接口）的实际数据量。<br>吞吐量受带宽限制、受复杂的网络负载情况影响</p>
<h3 id="时延"><a href="#时延" class="headerlink" title="时延"></a>时延</h3><p>定义：指数据（一个报文或分组，甚至比特）从网络的一端传送到另一端所需的时间。有时也被称为延迟或迟延<br><strong>总时延=发送时延+传播时延+处理时延+排队时延</strong><br>传输（发送）时延：节点将数据推向信道所花时间 =<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.238ex;" xmlns="http://www.w3.org/2000/svg" width="12.005ex" height="3.607ex" role="img" focusable="false" viewbox="0 -1047.1 5306.3 1594.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(562.6,516.8) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">据</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">长</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">度</text></g><g data-mml-node="mo" transform="translate(4000,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(4389,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"/></g><g data-mml-node="mi" transform="translate(4818,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(5163,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></g><g data-mml-node="mo" transform="translate(5524,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g><g data-mml-node="mrow" transform="translate(220,-370.3) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">发</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">送</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">速</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">率</text></g><g data-mml-node="mo" transform="translate(4000,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(4389,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"/></g><g data-mml-node="mi" transform="translate(4818,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(5163,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5524,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"/></g></g><g data-mml-node="mi" transform="translate(6024,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="mo" transform="translate(6493,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g><rect width="5066.3" height="60" x="120" y="220"/></g></g></g></svg></mjx-container><br>传播时延：电磁波在信道中传播一定的距离所花的时间=<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.238ex;" xmlns="http://www.w3.org/2000/svg" width="26.347ex" height="3.527ex" role="img" focusable="false" viewbox="0 -1011.8 11645.5 1558.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(3391,481.4) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">信</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">道</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">长</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">度</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(5000,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(5878,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g></g><g data-mml-node="mrow" transform="translate(220,-370.3) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">电</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">磁</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">波</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">在</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">洗</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">脑</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">中</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(8000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">传</text></g><g data-mml-node="mi" transform="translate(9000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">播</text></g><g data-mml-node="mi" transform="translate(10000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">速</text></g><g data-mml-node="mi" transform="translate(11000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">度</text></g><g data-mml-node="mi" transform="translate(12000,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(13000,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(13878,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"/></g></g><g data-mml-node="mi" transform="translate(14378,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="mi" transform="translate(14847,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g></g><rect width="11405.5" height="60" x="120" y="220"/></g></g></g></svg></mjx-container><br>处理时延：被路由器处理所花的时间<br>排队时延：数据排队进入，排队发出路由器所花的时间<br><code>处理时延与排队时延受网络负载、路由器性能等诸多因素影响</code>  </p>
<h3 id="时延带宽积"><a href="#时延带宽积" class="headerlink" title="时延带宽积"></a>时延带宽积</h3><p><em><strong>时延带宽积=传播时延*带宽</strong></em><br>定义：一条链路中，已从发送端发出但尚未达到接收端的最大比特数</p>
<h3 id="往返时延"><a href="#往返时延" class="headerlink" title="往返时延"></a>往返时延</h3><p>（RTT）定义：表示从发送方发送完数据，到发送方收到来自接收方的确认总共经历的时间<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/RTT.png">  </p>
<h3 id="信道利用率"><a href="#信道利用率" class="headerlink" title="信道利用率"></a>信道利用率</h3><p>定义：某个信道有百分之多少的时间是有数据通过的<br>信道利用率=<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.158ex;" xmlns="http://www.w3.org/2000/svg" width="29.437ex" height="3.447ex" role="img" focusable="false" viewbox="0 -1011.8 13010.9 1523.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(3677,481.4) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">有</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">据</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">通</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">过</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g></g><g data-mml-node="mrow" transform="translate(220,-370.3) scale(0.707)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">有</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">据</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">通</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">过</text></g><g data-mml-node="mi" transform="translate(5000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(6000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(7000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mo" transform="translate(8000,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(8778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">没</text></g><g data-mml-node="mi" transform="translate(9778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">有</text></g><g data-mml-node="mi" transform="translate(10778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(11778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">据</text></g><g data-mml-node="mi" transform="translate(12778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">通</text></g><g data-mml-node="mi" transform="translate(13778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">过</text></g><g data-mml-node="mi" transform="translate(14778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(15778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(16778,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g></g><rect width="12770.9" height="60" x="120" y="220"/></g></g></g></svg></mjx-container><br><code>信道利用率太高说明网络拥塞；太低说明浪费资源</code></p>
<h2 id="计算机分层"><a href="#计算机分层" class="headerlink" title="计算机分层"></a>计算机分层</h2><p>ISO提出OSI参考模型（法律上的标准）：物理层、数据链路层、网络层、运输层、会话层、表示层、应用层；<br>ARPANET提出TCP/IP模型：网络接口层、网际层、传输层、应用层<br><strong>教学用的模型：物理层、数据链路层、网络层、传输层、应用层</strong><br>网络的体系结构：计算机网络的各层及其协议的集合，就是这个计算机网络及其构件所应完成的精确定义<br><code>服务的作用方向为垂直的，协议的方向是水平的</code><br>协议数据单元（PDU）：对等层次之间传送的数据单位<br>服务数据单元（SDU）：为完成上一层实体所要求的功能而传送的数据<br>协议控制信息（PCI）：控制协议操作的信息<br>n-SDU+n-PCI = n-PDU=(n-1)-SDU<br>协议由语法、语义和同步三部分组成  </p>
<ul>
<li>语法：数据与控制信息的格式</li>
<li>语义：即需要发出何种控制信息、完成何种动作及做出何种应答。</li>
<li>同步：执行各种操作的条件、时序关系等，即事件实现顺序的详细说明。</li>
</ul>
<h3 id="OSI模型"><a href="#OSI模型" class="headerlink" title="OSI模型"></a>OSI模型</h3><p>物理层任务：实现相邻节点之间的比特传输<br>链路层任务：确保相邻节点之间的链路逻辑上无差错（差错控制、流量控制、物理寻址）<br>网络层任务：把”分组“从源节点转发到目的节点（路由选择、分组转发、拥塞控制、网际互联、差错控制、流量控制、连接建立与释放、可靠传输管理······）<br>传输层任务：实现端到端通信（复用和分用）<br>会话层任务：管理进程间会话  （会话管理）<br>表示层任务：解决不同主机上信息表示不一致的问题  （数据格式转换）<br>应用层任务：实现特定的网络应用<br> <code>网络层向上层提供有连接可靠的服务（虚电路）无连接不可靠服务（数据报）</code><br> <code>OSI传输层向上提供有连接可靠的服务</code></p>
<h3 id="TCP-IP模型"><a href="#TCP-IP模型" class="headerlink" title="TCP/IP模型"></a>TCP/IP模型</h3><p>网络接口层：为网络层传输”分组“，<em>未具体描述网络接口层的功能、协议</em><br>应用层：将OSI模型中的会话层、表示层、应用层的任务集合在应用层中<br>网络层：路由选择、分组转发、拥塞控制、网际互联<br>传输层：复用和分用、差错控制、流量控制、连接建立与释放、可靠传输管理<br><code>网络层向上层提供无连接不可靠服务（数据报）</code><br> <code>TCP/IP传输层向上提供有连接可靠的服务（TCP）无连接不可靠服务（UDP）</code></p>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>服务访问点（SAP）：在同一系统中相邻两层的实体交换信息的逻辑接口。<em>用于区分不同的服务类型</em><br>数据链路层的SAP：<strong>帧的“类型”字段</strong><br>网络层的SAP：<strong>IP数据报的“协议”字段</strong><br>传输层的SAP：<strong>“端口号”字段</strong><br>应用层的SAP：<strong>“用户接口”</strong>  </p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>土地政策</title>
    <url>/2024/10/24/%E8%80%83%E7%A0%94%E6%94%BF%E6%B2%BB/%E5%9C%9F%E5%9C%B0%E6%94%BF%E7%AD%96/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>历史时间</th>
<th>耕者是否有其田</th>
<th>是否否定了封建土地剥削</th>
</tr>
</thead>
<tbody><tr>
<td>太平天国</td>
<td>是</td>
<td>是（废除了封建土地剥削是错误的）</td>
</tr>
<tr>
<td>辛亥革命</td>
<td>无</td>
<td>无</td>
</tr>
<tr>
<td>新三民主义</td>
<td>有</td>
<td>有</td>
</tr>
<tr>
<td>土地革命</td>
<td>有</td>
<td>是</td>
</tr>
<tr>
<td>抗日时期</td>
<td>无</td>
<td>无</td>
</tr>
<tr>
<td>解放时期</td>
<td>有</td>
<td>有（废除）</td>
</tr>
<tr>
<td>建国初期</td>
<td>有</td>
<td>有</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>事件</th>
<th>任务</th>
<th>纲领</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>太平天国</td>
<td>反帝反封建</td>
<td>不反帝，反封建</td>
<td>打击了帝国主义</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th></th>
<th>旧民主主义革命</th>
<th>新民主主义革命</th>
<th>社会主义革命</th>
</tr>
</thead>
<tbody><tr>
<td>领导人物</td>
<td>资产阶级</td>
<td>无产阶级</td>
<td>无产阶级</td>
</tr>
<tr>
<td>性质</td>
<td>资产阶级</td>
<td>资产阶级</td>
<td>无产阶级</td>
</tr>
<tr>
<td>任务对象</td>
<td>反帝反封建</td>
<td>反帝反封建</td>
<td>反资</td>
</tr>
<tr>
<td>指导思想</td>
<td>三民主义</td>
<td>马克思主义</td>
<td>马克思主义</td>
</tr>
<tr>
<td>前途</td>
<td>资本主义国家</td>
<td>新民主主义国家-&gt;社会主义国家</td>
<td>社会主义国家</td>
</tr>
<tr>
<td>决定革命性质的不是领导者而是任务对象</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<ul>
<li>中国资产阶级民主革命的中心问题是土地革命  </li>
<li>国民革命的中心问题是农民问题</li>
<li>中国革命的中心问题是无产阶级领导权问题</li>
</ul>
]]></content>
      <categories>
        <category>考研政治</category>
      </categories>
  </entry>
  <entry>
    <title>第五章-传输层</title>
    <url>/2024/08/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/</url>
    <content><![CDATA[<p><em>只有主机才有的层次</em><br>功能：</p>
<ul>
<li>提供进程和进程之间的逻辑通信</li>
<li>复用和分用</li>
<li>对收到的报文进行差错检测</li>
<li>传输层的两种协议（TCP、UDP）</li>
</ul>
<p>复用：应用层所有的应用进程都可以通过传输层在传输到网络层<br>分用：传输层从网络层收到数据后指明的应用程序<br>端口：传输层的SAP，标识主机中的应用进程（逻辑端口/软件端口）。端口号只有本地意义，在因特网中不同计算机的相同端口号是没有联系的  </p>
<ul>
<li>服务端使用的端口号<ul>
<li>熟知端口号：给TCP/IP最重要的一些应用程序，让所有用户都知道（0~1023）</li>
<li>登记端口号：为没有熟知端口号的应用程序使用的（1024~49151）</li>
</ul>
</li>
<li>客户端使用：仅在客户进程运行时才动态选择的端口号（49152~65535）<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/acknowledged_pot.png"><br>套接字：唯一标识网络中的一个主机和它上面的一个进程（主机IP地址，端口号）</li>
</ul>
<hr>
<h1 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h1><p>UDP只在IP数据报服务之上增加很少功能，即复用分用和差错检测功能</p>
<ul>
<li>UDP是无连接的，减少开销和发送数据之前的时延</li>
<li>UDP使用最大努力交付，即不保证可靠交付</li>
<li>UDP是面向报文的，适合一次性传输少量数据的网络应用</li>
<li>UDP无拥塞控制，适合很多实时应用</li>
<li>UDP首部开销小，8B，TCP20B<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/UDP.png"><br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/UDP_IP.png"><br>伪首部只有在计算校验和时才出现，不想下传送也不向上递交。<br>17：封装UDP报文的IP数据报首部协议字段时17.</li>
</ul>
<hr>
<h1 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h1><ul>
<li>TCP是面向连接（虚连接）的传输层协议</li>
<li>每一条TCP连接只能有两个端点，每一条TCP连接只能是点对点的</li>
<li>TCP提供可靠交付的服务，无差错、不丢失、不重复、按序到达。</li>
<li>提供全双工通信。<ul>
<li>发送缓存：准备发送的数据&amp;已发送但尚未收到确认的数据</li>
<li>接受缓存：按序到达但尚未被接受应用程序读取的数据&amp;不按序到达的数据</li>
</ul>
</li>
<li>TCP面向字节流：TCP把应用程序交下来的数据堪称仅仅是一连串的无结构字节流<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/TCP.png">序号（seq）：在一个TCP连接中传送的字节流中的每一个字节都按顺序编号，本字段标识本报文段所发送数据的第一个字节的序号。<br>确认号（<strong>小写ack</strong>）：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，则证明到序号N-1为止的所有数据都已正确收到。<br>数据偏移（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4B为单位，即一个数值是4B。<br><em>紧急位URG</em>：URG=1时，标明此报文段中有紧急数据，是高优先级的数据，应尽快传送，不用在缓存里排队，配合紧急指针字段使用。<br><em>确认位ACK</em>：ACK=1时确认号有效，在连接建立后所有传送的报文段都必须把ACK置为1.<br><em>推送位PSH</em>：PSH=1时，接收方尽快交付接受应用进程，不再等到缓存填满再向上交付。<br><em>复位RST</em>：RST=1时，表明TCP连接中出现严重差错，必须释放连接，然后再重新建立传输链接。<br><em>同步位SYN</em>：SYN=1时，表明是一个连接请求/连接接收报文。<br><em>终止位FIN</em>：FIN=1时，表明此报文段发送方数据已发送完，要求释放连接。<br>窗口：指的是发送本报文段的一方的接收窗口，即现在允许对方发送的数据量。<br>校验和：校验首部+数据，检验时要加上12B伪首部，第四个字段为6.<br>紧急指针：URG=1时才有意义，指出本报文段中紧急数据的字节数。<br>选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认······</li>
</ul>
<h2 id="TCP连接管理"><a href="#TCP连接管理" class="headerlink" title="TCP连接管理"></a>TCP连接管理</h2><p>TCP连接的建立采用客户服务器方式，主动发起连接建立的应用进程叫做客户，而被动等待连接建立的应用进程叫服务器。<br><em><strong>“三次握手”</strong></em>：<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/three_shake.png"><br>SYN洪范攻击：攻击者发送TCP SYN，SYN是TCP三次握手中的第一个数据包，而当服务器返回ACK后，该攻击者就不对其进行再确认，那这个TCP连接就处于挂起状态，也就是所谓的半连接状态，服务器收不到再确认的话，还会重复发送ACK给攻击者。这样更加会浪费服务器的资源。攻击者就对服务器发送大量的这种TCP连接，由于每一个都没法完成三次握手，所以在服务器上，这些TCP连接会因为挂起状态而消耗CPU和内存，最后服务器可能死机，就无法为正常用户提供服务了。<br><em><strong>“四次握手”</strong></em>：<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/four_shake.png"></p>
<h2 id="TCP可靠传输"><a href="#TCP可靠传输" class="headerlink" title="TCP可靠传输"></a>TCP可靠传输</h2><p>可靠：保证接收方进程从缓存区读出的字节流与发送方发出的字节流是完全一样的。<br>重传：确认重传不分家，TCP的发送方在规定的时间内没有收到确认就要重传已发送的报文段。<br>冗余ACK：每当比期望序号大的失序报文段到达时，发送一个冗余ACK，指明下一个期待字节的序号。  </p>
<h2 id="TCP流量控制"><a href="#TCP流量控制" class="headerlink" title="TCP流量控制"></a>TCP流量控制</h2><p>流量控制：让发送方慢点，要让接收方来得及接受。（TCP利用滑动窗口机制实现流量控制）<br>在通信过程中，接收方根据自己接受缓存的大小，动态地调整发送方的发送窗口大小，即接收窗口rwnd（接收方设置确认报文段的窗口字段来将rwnd通知给发送方），发送方的发送窗口取接受窗口rwnd和拥塞窗口cwnd的最小值。<br>TCP为每一个连接设有一个持续计时器，只要TCP连接的一方收到对方的零窗口通知，就启动持续计时器。若持续计时器设置的时间到期，就发送一个零窗口探测报文段。接收方收到探测报文段。接收方收到探测报文段时给出现在的窗口值。若窗口仍然是0，那么发送方就重新设置持续计时器。  </p>
<h2 id="TCP拥塞控制"><a href="#TCP拥塞控制" class="headerlink" title="TCP拥塞控制"></a>TCP拥塞控制</h2><h3 id="慢开始和拥塞避免"><a href="#慢开始和拥塞避免" class="headerlink" title="慢开始和拥塞避免"></a>慢开始和拥塞避免</h3><p><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/slow_start.png">  </p>
<h3 id="快重传和快恢复"><a href="#快重传和快恢复" class="headerlink" title="快重传和快恢复"></a>快重传和快恢复</h3><p><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%BC%A0%E8%BE%93%E5%B1%82/swift_recover.png"></p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>第六章-应用层</title>
    <url>/2024/08/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E5%BA%94%E7%94%A8%E5%B1%82/</url>
    <content><![CDATA[<p>应用层对应用程序的通信提供服务。  </p>
<ul>
<li>文件传输、访问和管理</li>
<li>电子邮件</li>
<li>虚拟终端</li>
<li>查询服务和远程作业登录</li>
</ul>
<h1 id="网络应用模型"><a href="#网络应用模型" class="headerlink" title="网络应用模型"></a>网络应用模型</h1><h2 id="C-S模型"><a href="#C-S模型" class="headerlink" title="C/S模型"></a>C/S模型</h2><p>服务器：提供计算服务的设备。  </p>
<ul>
<li>永久提供服务</li>
<li>永久性访问地址/域名</li>
</ul>
<h2 id="客户机：请求计算服务的主机。-与服务器通信，使用服务器提供的服务-间接性接入网络-可能使用动态IP地址-不与其他客户机直接通信-P2P模型-每个主机既可以提供服务，也可以请求服务。-任意端-系统-结点之间可以直接通讯。-节点间接性接入网络-节点可能改变IP地址-可拓展性好。-网络健壮性强。"><a href="#客户机：请求计算服务的主机。-与服务器通信，使用服务器提供的服务-间接性接入网络-可能使用动态IP地址-不与其他客户机直接通信-P2P模型-每个主机既可以提供服务，也可以请求服务。-任意端-系统-结点之间可以直接通讯。-节点间接性接入网络-节点可能改变IP地址-可拓展性好。-网络健壮性强。" class="headerlink" title="客户机：请求计算服务的主机。+ 与服务器通信，使用服务器提供的服务+ 间接性接入网络+ 可能使用动态IP地址+ 不与其他客户机直接通信## P2P模型+ 每个主机既可以提供服务，也可以请求服务。+ 任意端/系统/结点之间可以直接通讯。+ 节点间接性接入网络+ 节点可能改变IP地址+ 可拓展性好。+ 网络健壮性强。"></a>客户机：请求计算服务的主机。<br>+ 与服务器通信，使用服务器提供的服务<br>+ 间接性接入网络<br>+ 可能使用动态IP地址<br>+ 不与其他客户机直接通信<br>## P2P模型<br>+ 每个主机既可以提供服务，也可以请求服务。<br>+ 任意端/系统/结点之间可以直接通讯。<br>+ 节点间接性接入网络<br>+ 节点可能改变IP地址<br>+ 可拓展性好。<br>+ 网络健壮性强。</h2><h1 id="域名解析系统DNS"><a href="#域名解析系统DNS" class="headerlink" title="域名解析系统DNS"></a>域名解析系统DNS</h1><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><h2 id="顶部顶级域名：国家顶级域名（cn、us、uk）、通用顶级域名、基础结构域名（arpa）二级域名：类别域名（ac，com，edu，gov）、行政区域名（用于我国各省、自治区、直辖市）、自定义域名-域名服务器-本地域名服务器：当一个主机发出DNS查询请求时，哥哥查询请求报文就发给本地域名服务器。（递归查询、迭代查询）-根域名服务器：能够查询到顶级域名服务器的最高级服务器-顶级域名服务器：管理该顶级域名服务器注册的所有二级域名-权限域名服务器：负责一个区的域名服务器"><a href="#顶部顶级域名：国家顶级域名（cn、us、uk）、通用顶级域名、基础结构域名（arpa）二级域名：类别域名（ac，com，edu，gov）、行政区域名（用于我国各省、自治区、直辖市）、自定义域名-域名服务器-本地域名服务器：当一个主机发出DNS查询请求时，哥哥查询请求报文就发给本地域名服务器。（递归查询、迭代查询）-根域名服务器：能够查询到顶级域名服务器的最高级服务器-顶级域名服务器：管理该顶级域名服务器注册的所有二级域名-权限域名服务器：负责一个区的域名服务器" class="headerlink" title="顶部顶级域名：国家顶级域名（cn、us、uk）、通用顶级域名、基础结构域名（arpa）二级域名：类别域名（ac，com，edu，gov）、行政区域名（用于我国各省、自治区、直辖市）、自定义域名## 域名服务器+ 本地域名服务器：当一个主机发出DNS查询请求时，哥哥查询请求报文就发给本地域名服务器。（递归查询、迭代查询）+ 根域名服务器：能够查询到顶级域名服务器的最高级服务器+ 顶级域名服务器：管理该顶级域名服务器注册的所有二级域名+ 权限域名服务器：负责一个区的域名服务器"></a>顶部顶级域名：国家顶级域名（cn、us、uk）、通用顶级域名、基础结构域名（arpa）<br>二级域名：类别域名（ac，com，edu，gov）、行政区域名（用于我国各省、自治区、直辖市）、自定义域名<br>## 域名服务器<br>+ 本地域名服务器：当一个主机发出DNS查询请求时，哥哥查询请求报文就发给本地域名服务器。（递归查询、迭代查询）<br>+ 根域名服务器：能够查询到顶级域名服务器的最高级服务器<br>+ 顶级域名服务器：管理该顶级域名服务器注册的所有二级域名<br>+ 权限域名服务器：负责一个区的域名服务器</h2><h1 id="FTP文件传输协议"><a href="#FTP文件传输协议" class="headerlink" title="FTP文件传输协议"></a>FTP文件传输协议</h1><p>FTP是基于C/S的协议。用户通过一个客户机程序连接至在远程计算机上运行的服务器程序。依照FTP协议提供服务，进行文件传送的计算机就是FTP服务器。连接FTP服务器，遵循FTP协议与服务器传送文件的电脑就是FTP客户端。<br>FTP使用TCP实现可靠传输。<br>使用FTP协议需要建立1个主进程和n个从进程，从进程种有控制进程（始终连接）、数据传送进程等。<br>主动方式使用TCP 20端口。<br>被动方式由服务器和客户端自行协商决定（端口&gt;1024）<br>在服务器端，控制连接使用TCP的21号端口，数据连接使用TCP的20号端口；而在客户端，控制连接和数据连接的TCP端口号都是由客户端系统自动分配的。  </p>
<hr>
<h1 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h1><p><img lazyload src="/images/loading.svg" data-src="/2024/08/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E5%BA%94%E7%94%A8%E5%B1%82/email_system_construct.png"><br>用户代理：撰写、显示、处理、通信<br>邮件服务器：发送&amp;接收邮件、想发送人报告邮件传送结果<br>SMTP协议：规定了在两个相互通信的SMTP进程之间应如何交换信息。负责发送邮件的SMTP进程就是SMTP客户，负责接收邮件的进程就是SMTP服务器。（端口号25）  </p>
<ul>
<li>连接建立</li>
<li>邮件发送</li>
<li>连接释放</li>
</ul>
<p>SMTP的缺点：</p>
<ul>
<li>不能传送可执行文件或者其他二进制对象</li>
<li>SMTP仅限于传送7位ASCII码，不能传送其他非英语国家的文学</li>
<li>会拒绝超过一定长度的邮件</li>
</ul>
<p>POP3协议：端口号110，用于接收邮件。下载并保留（服务器）、下载并删除。<br>IMAP协议：相对复杂，用户可看到邮箱的首部，若用户需要打开某个邮件，该邮件才上传到用户的计算机上。IMAP可以让用户在不同地方使用不同计算机随时上网阅读处理邮件，还允许只读取邮件中的某一个部分。</p>
<h1 id="万维网和HTTP"><a href="#万维网和HTTP" class="headerlink" title="万维网和HTTP"></a>万维网和HTTP</h1><p>万维网是一个大规模、联机式的信息储藏所，是无数个网站点和网页的集合。<br>用户通过点击超链接获取资源，这些资源通过超文本传输协议HTTP传送给使用者。<br>HTTP协议定义了浏览器（万维网客户进程）怎样向万维网服务器请求万维网文档，以及服务器怎样把文档传送给浏览器。<br>www服务第一部操作是浏览器对服务器的请求域名解析<br>HEAD方法只对HTTP报文进行响应，不返回请求对象  </p>
<ul>
<li>HTTP协议是无状态的</li>
<li>采用TCP作为运输层协议，但HTTP协议本身是无连接的</li>
<li>可使用非持久连接和持久连接（流水线式（HTTP/1.1）和非流水线式（HTTP/1.0））<br><img lazyload src="/images/loading.svg" data-src="/2024/08/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E5%BA%94%E7%94%A8%E5%B1%82/HTTP.png"></li>
</ul>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>第三章-数据链路层</title>
    <url>/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</url>
    <content><![CDATA[<p>数据链路层使用“物理层”提供的“比特传输”服务<br>数据链路层为网络层提供服务，将网络层的IP数据报（分组）封装成帧，传输给下一个相邻节点<br><strong>物理链路</strong>：传输介质（0层）+物理层（1层）实现了相邻节点之间的“物理链路”<br><strong>逻辑链路</strong>：数据链路层需要基于“物理链路”，实现相邻结点之间逻辑上无差错的“数据链路”  </p>
<hr>
<h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><ul>
<li>封装成帧：<ul>
<li>帧定界：如何让接收方能够确定帧的界限</li>
<li>透明传输：接收方链路层要能从收到的帧内恢复原始SDU，让网络层“感受不到”将分组封装成帧的过程</li>
</ul>
</li>
<li>差错控制：发现并解决一个帧内部的“位错”<ul>
<li>解决方案一：接收方发现比特错后丢弃帧，发送方重传帧（仅需采用检错编码）</li>
<li>解决方案二：由接收方发现并纠正比特错误（需采用纠错编码）</li>
</ul>
</li>
<li>可靠传输：发现并解决“帧错”（帧丢失、帧重复、帧失序）</li>
<li>流量控制：控制发送方发送帧的速率别太快，让接收方“来得及”接受</li>
<li>介质访问控制：<ul>
<li>“广播信道”需要实现此功能。广播信道在逻辑上是总线型拓扑，多个结点需争抢传输介质的使用权</li>
<li>“点对点信道”通常不需要实现此功能。点对点信道通常意味着两个节点之间有专属介质，不用抢</li>
</ul>
</li>
</ul>
<hr>
<h1 id="组帧"><a href="#组帧" class="headerlink" title="组帧"></a>组帧</h1><ul>
<li>字符计数法：在每个帧开头，用一个定长计数字段表示帧长<ul>
<li>缺点：任何一个技术字段出错，都会导致后续所有帧无法定界</li>
</ul>
</li>
<li>字节填充法：使用SOH和EOT控制字符表示一帧的开始与结束，通常会使用ESC转义字符避免帧中出现控制字符导致扫描出错。</li>
<li>零比特填充法（HDLC、PPP）：使用比特串01111110来标志一帧的开始和结束<ul>
<li>发送方需要对帧的数据部分进行处理，<em>每当遇到5个1，就填充一个0</em></li>
<li>接收方需要对帧的数据部分进行逆处理，<em>每当遇到连续5个1，就删掉后面的0</em></li>
</ul>
</li>
<li>违规编码法：需要物理层配合，对采用的信号传输方式使用违规的信号编码，例如基于曼彻斯特码，每一个信号是观察信号是否跳变，当信号不进行跳变时则“违规”，将其表示帧的开始或结束</li>
</ul>
<hr>
<h1 id="差错控制"><a href="#差错控制" class="headerlink" title="差错控制"></a>差错控制</h1><h3 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h3><p>奇（偶）校验码：整个校验码（有效信息为何校验位）中“1”的个数为奇（偶）数<br>奇校验：检查信息位中“1”的个数为偶数则校验位为1，为奇数则检验位为0（偶校验相反）<br>偶校验的硬件实现：各信息进行异或运算，得到的结果即为偶校验位<br>缺点：只能检测奇数位出现错误的情况，并且不知道哪些位出错</p>
<h3 id="循环冗余码（CRC）"><a href="#循环冗余码（CRC）" class="headerlink" title="循环冗余码（CRC）"></a>循环冗余码（CRC）</h3><p>思想：数据发送、接收方约定为一个“除数”，K个信息位+R个校验位作为“被除数”，添加校验位后需保证出发的余数为0，然后接收方进行除法检测余数是否为0，非0即需要重传或者纠错<br>基本思想：</p>
<ol>
<li>收发双方约定生成多项式G(x)（最高位和最低位必须为1），k位位串可视为阶数为k-1的多项式的系数序列。例如，可用多项式<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="11.226ex" height="2.072ex" role="img" focusable="false" viewbox="0 -833.9 4962 915.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"/></g></g><g data-mml-node="mo" transform="translate(1230.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="msup" transform="translate(2231,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"/></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g><g data-mml-node="mo" transform="translate(3461.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(4462,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container>表示位串1101</li>
<li>发送方基于待发送的数据和G(x)，计算冗余码，将冗余码附加到数据后面一起发送</li>
<li>接收方收到数据和冗余码后，通过G(x)来计算收到的数据和冗余码是否产生差错</li>
</ol>
<p>检错能力：</p>
<ul>
<li>可检测出所有格奇数个错误</li>
<li>可检测出所有双比特的错误</li>
<li>可检测出所有小于等于检验位长度的连续错误</li>
<li>若选择合适的生成多项式，且<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.312ex;" xmlns="http://www.w3.org/2000/svg" width="15.941ex" height="2.226ex" role="img" focusable="false" viewbox="0 -846 7046.1 984"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"/></g></g><g data-mml-node="mo" transform="translate(1397.5,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="mi" transform="translate(2453.2,0)"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"/></g><g data-mml-node="mo" transform="translate(3564.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(4564.7,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"/></g><g data-mml-node="mo" transform="translate(5545.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(6546.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container>,则可纠正单比特错误</li>
</ul>
<h3 id="海明校验码"><a href="#海明校验码" class="headerlink" title="海明校验码"></a>海明校验码</h3><ol>
<li>确定海明码位数：n为有效信息位数，k为校验位的位数，则信息位n和校验位k应满足<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.312ex;" xmlns="http://www.w3.org/2000/svg" width="18.265ex" height="2.244ex" role="img" focusable="false" viewbox="0 -853.7 8073.3 991.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(1822.4,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g><g data-mml-node="mo" transform="translate(2565.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mn" transform="translate(3565.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(4343.7,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="msup" transform="translate(5399.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g></g><g data-mml-node="mo" transform="translate(6573.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(7573.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container></li>
<li>确定校验位的分布，校验位<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.192ex" height="1.902ex" role="img" focusable="false" viewbox="0 -683 969 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"/></g><g data-mml-node="mi" transform="translate(675,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>放在海明位号为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="3.915ex" height="1.887ex" role="img" focusable="false" viewbox="0 -833.9 1730.6 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></g></g></svg></mjx-container>的位置上，信息位按顺序放到其余位置</li>
<li>分组以形成校验关系：被检验数据位的海明位号等于检验该数据位的各检验位海明位号之和</li>
<li>检验位取值：检验位<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.192ex" height="1.902ex" role="img" focusable="false" viewbox="0 -683 969 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"/></g><g data-mml-node="mi" transform="translate(675,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>的值为第i组所有位求异或</li>
<li>构造校验方程：G1 = P1 ⊕ D1 ⊕ D2 ⊕ D4 ；G2 = P2 ⊕ D1 ⊕ D3 ⊕ D4；G3 = P3 ⊕ D2 ⊕ D3 ⊕ D4等，最后由“G3G2G1”的值进行判断，若为“000”，则正确，若为“001”，则第一位发生了错误</li>
</ol>
<p>综上所述，海明码纠错能力只有1位，检错能力可以检错2位<br>海明码“纠错”d位，需要码距2d+1的编码方案；“检错”d位，则只需码距为d+1  </p>
<hr>
<h1 id="流量控制与可靠传输机制"><a href="#流量控制与可靠传输机制" class="headerlink" title="流量控制与可靠传输机制"></a>流量控制与可靠传输机制</h1><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.373ex;" xmlns="http://www.w3.org/2000/svg" width="15.049ex" height="1.918ex" role="img" focusable="false" viewbox="0 -683 6651.8 847.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"/></g><g data-mml-node="mi" transform="translate(977,-150) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"/></g></g><g data-mml-node="mo" transform="translate(1747,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="msub" transform="translate(2747.2,0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"/></g><g data-mml-node="mi" transform="translate(977,-150) scale(0.707)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"/></g></g><g data-mml-node="mo" transform="translate(4588.7,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="msup" transform="translate(5644.5,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container>  </p>
<h2 id="停止等待协议（S-W）"><a href="#停止等待协议（S-W）" class="headerlink" title="停止等待协议（S-W）"></a>停止等待协议（S-W）</h2><p>原理：发送方每次只允许发送一个帧，接收方每接收一个帧都要反馈一个应答信号，表示可以接受下一帧，发送方收到应答信号后才能发送下一帧。若发送方没有收到接收方反馈的应答信号，则需要一直等待。发送方每发送完一个帧，就进入等待接收方确认信息的过程中，因而传输效率很低。<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/SW.png"></p>
<h2 id="后退N帧协议（GBN）"><a href="#后退N帧协议（GBN）" class="headerlink" title="后退N帧协议（GBN）"></a>后退N帧协议（GBN）</h2><p>在后退N帧协议中，发送方可在为收到确认帧的情况下，将序号在发送窗口内的多个数据帧全部发送出去。后退N帧的含义是：发送方发送N个数据帧后，若发现这N个帧的前一个数据帧在计时器超时的时候仍未收到其确认信息，则该帧被判为出错或丢失，此时发送方不得不重传该出错帧及随后的N个帧<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/GBN.png"></p>
<h2 id="选择重传协议（SR）"><a href="#选择重传协议（SR）" class="headerlink" title="选择重传协议（SR）"></a>选择重传协议（SR）</h2><p>选择重传协议：用于在不可靠的网络中进行可靠数据传输。它允许发送方同时发送多个数据包，并在接收方接收到这些数据包后进行选择性的重传。只有丢失或损坏的数据包会被重新传输，而不需要重新传输整个数据流。<code>存在帧缓冲区，用于维持帧的顺序位次</code>  </p>
<ol>
<li>发送方将数据分成多个数据包，并分配唯一的序列号给每个数据包。</li>
<li>发送方将这些数据包发送到接收方。</li>
<li>接收方接收数据包，并根据序列号将它们按顺序重组。</li>
<li>如果接收方检测到有丢失或损坏的数据包，它会向发送方发送一个选择性重传请求，请求重新发送仅丢失或损坏的数据包。</li>
<li>发送方收到选择性重传请求后，仅重新发送被请求的数据包。</li>
<li>这个过程不断重复，直到接收方成功接收所有数据包。</li>
</ol>
<hr>
<h1 id="信道划分介质访问控制"><a href="#信道划分介质访问控制" class="headerlink" title="信道划分介质访问控制"></a>信道划分介质访问控制</h1><h2 id="信道划分介质访问控制（MAC）：-将使用介质的每个设备与来自同一信道上的其他设备的通信隔离开，把时域和频域资源合理地分配给网路上的设备。多路复用技术：把多个信号组合在一条物理信道上进行传输，使得多个计算机或终端设备共享信道资源，提高信道利用率。分用：把一条广播信道，逻辑上分成几条用于两个节点之间通信的互不干扰的子信道，实际就是把广播信道转变为点对点信道。-频分多路复用（FDM）用户在分配到一定的频带后，在通信过程中自始至终都占用这个频带。频分复用的所有用户在同样的时间占用不同的带宽资源。优点：充分利用传输介质带宽，系统效率较高；由于技术比较成熟，实现也比较容易。-时分多路复用（TDM）将时间划分为一段段等长的时分复用帧。每一个时分复用的用户在每一个TDM帧中占用固定序号的时隙，所有用户轮流占用信道。统计时分复用（STDM）：每一个STDM帧中的时隙数小于连接在集中器上的用户数。各用户有了数据就随时发往集中器的输入缓存，然后集中按顺序依次扫描输入缓存，把缓存中的输入数据放入STDM帧中，一个STDM帧满了就可以发出。STDM帧不是固定分配时隙，而是按需动态分配时隙。-波分多路复用（WDM）光的频分多路复用，在一根光纤中传输多种不同波长的光信号，由于波长不同，所以各路光信号互不干扰，最后再用波长分解复用器将各路波长分解出来。-码分多路复用（CDM）码分多址（CDMA）：1个比特分为多个码片，每一个站点被指定一个唯一的m位的芯片序列。1-多个站点同时发送数据的时候，要求各个站点芯片序列相互正交，规格化内积为0-S·T-frac-1-m-sum-i-1-m-S-iT-i-0-2-两个向量到了公共信道，线性相加。-S-T3-数据分离：合并的数据和源站规格化内积-S·-S-T-1-T·-S-T-1"><a href="#信道划分介质访问控制（MAC）：-将使用介质的每个设备与来自同一信道上的其他设备的通信隔离开，把时域和频域资源合理地分配给网路上的设备。多路复用技术：把多个信号组合在一条物理信道上进行传输，使得多个计算机或终端设备共享信道资源，提高信道利用率。分用：把一条广播信道，逻辑上分成几条用于两个节点之间通信的互不干扰的子信道，实际就是把广播信道转变为点对点信道。-频分多路复用（FDM）用户在分配到一定的频带后，在通信过程中自始至终都占用这个频带。频分复用的所有用户在同样的时间占用不同的带宽资源。优点：充分利用传输介质带宽，系统效率较高；由于技术比较成熟，实现也比较容易。-时分多路复用（TDM）将时间划分为一段段等长的时分复用帧。每一个时分复用的用户在每一个TDM帧中占用固定序号的时隙，所有用户轮流占用信道。统计时分复用（STDM）：每一个STDM帧中的时隙数小于连接在集中器上的用户数。各用户有了数据就随时发往集中器的输入缓存，然后集中按顺序依次扫描输入缓存，把缓存中的输入数据放入STDM帧中，一个STDM帧满了就可以发出。STDM帧不是固定分配时隙，而是按需动态分配时隙。-波分多路复用（WDM）光的频分多路复用，在一根光纤中传输多种不同波长的光信号，由于波长不同，所以各路光信号互不干扰，最后再用波长分解复用器将各路波长分解出来。-码分多路复用（CDM）码分多址（CDMA）：1个比特分为多个码片，每一个站点被指定一个唯一的m位的芯片序列。1-多个站点同时发送数据的时候，要求各个站点芯片序列相互正交，规格化内积为0-S·T-frac-1-m-sum-i-1-m-S-iT-i-0-2-两个向量到了公共信道，线性相加。-S-T3-数据分离：合并的数据和源站规格化内积-S·-S-T-1-T·-S-T-1" class="headerlink" title="信道划分介质访问控制（MAC）：  将使用介质的每个设备与来自同一信道上的其他设备的通信隔离开，把时域和频域资源合理地分配给网路上的设备。多路复用技术：把多个信号组合在一条物理信道上进行传输，使得多个计算机或终端设备共享信道资源，提高信道利用率。分用：把一条广播信道，逻辑上分成几条用于两个节点之间通信的互不干扰的子信道，实际就是把广播信道转变为点对点信道。## 频分多路复用（FDM）用户在分配到一定的频带后，在通信过程中自始至终都占用这个频带。频分复用的所有用户在同样的时间占用不同的带宽资源。优点：充分利用传输介质带宽，系统效率较高；由于技术比较成熟，实现也比较容易。## 时分多路复用（TDM）将时间划分为一段段等长的时分复用帧。每一个时分复用的用户在每一个TDM帧中占用固定序号的时隙，所有用户轮流占用信道。统计时分复用（STDM）：每一个STDM帧中的时隙数小于连接在集中器上的用户数。各用户有了数据就随时发往集中器的输入缓存，然后集中按顺序依次扫描输入缓存，把缓存中的输入数据放入STDM帧中，一个STDM帧满了就可以发出。STDM帧不是固定分配时隙，而是按需动态分配时隙。## 波分多路复用（WDM）光的频分多路复用，在一根光纤中传输多种不同波长的光信号，由于波长不同，所以各路光信号互不干扰，最后再用波长分解复用器将各路波长分解出来。## 码分多路复用（CDM）码分多址（CDMA）：1个比特分为多个码片，每一个站点被指定一个唯一的m位的芯片序列。1. 多个站点同时发送数据的时候，要求各个站点芯片序列相互正交，规格化内积为0.     $S·T=\frac{1}{m}\sum_{i=1}^{m}S_iT_i=0$2. 两个向量到了公共信道，线性相加。  S-T3. 数据分离：合并的数据和源站规格化内积$S·(S-T)=1 \ T·(S-T)=1$"></a>信道划分介质访问控制（MAC）：  将使用介质的每个设备与来自同一信道上的其他设备的通信隔离开，把时域和频域资源合理地分配给网路上的设备。<br>多路复用技术：把多个信号组合在一条物理信道上进行传输，使得多个计算机或终端设备共享信道资源，提高信道利用率。<br>分用：把一条广播信道，逻辑上分成几条用于两个节点之间通信的互不干扰的子信道，实际就是把广播信道转变为点对点信道。<br>## 频分多路复用（FDM）<br>用户在分配到一定的频带后，在通信过程中自始至终都占用这个频带。频分复用的所有用户在同样的时间占用不同的带宽资源。<br>优点：充分利用传输介质带宽，系统效率较高；由于技术比较成熟，实现也比较容易。<br>## 时分多路复用（TDM）<br>将时间划分为一段段等长的时分复用帧。每一个时分复用的用户在每一个TDM帧中占用固定序号的时隙，所有用户轮流占用信道。<br>统计时分复用（STDM）：每一个STDM帧中的时隙数小于连接在集中器上的用户数。各用户有了数据就随时发往集中器的输入缓存，然后集中按顺序依次扫描输入缓存，把缓存中的输入数据放入STDM帧中，一个STDM帧满了就可以发出。STDM帧不是固定分配时隙，而是按需动态分配时隙。<br>## 波分多路复用（WDM）<br>光的频分多路复用，在一根光纤中传输多种不同波长的光信号，由于波长不同，所以各路光信号互不干扰，最后再用波长分解复用器将各路波长分解出来。<br>## 码分多路复用（CDM）<br>码分多址（CDMA）：1个比特分为多个码片，每一个站点被指定一个唯一的m位的芯片序列。<br>1. 多个站点同时发送数据的时候，要求各个站点芯片序列相互正交，规格化内积为0.     <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.798ex;" xmlns="http://www.w3.org/2000/svg" width="24.367ex" height="2.755ex" role="img" focusable="false" viewbox="0 -864.9 10770.3 1217.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="mo" transform="translate(867.2,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"/></g><g data-mml-node="mi" transform="translate(1367.4,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"/></g><g data-mml-node="mo" transform="translate(2349.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mfrac" transform="translate(3405,0)"><g data-mml-node="mn" transform="translate(353.6,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mi" transform="translate(220,-345) scale(0.707)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><rect width="820.8" height="60" x="120" y="220"/></g><g data-mml-node="munderover" transform="translate(4632.5,0)"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"/></g><g data-mml-node="TeXAtom" transform="translate(1089,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g><g data-mml-node="msub" transform="translate(7085.8,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="msub" transform="translate(8025.8,0)"><g data-mml-node="mi"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"/></g><g data-mml-node="mi" transform="translate(617,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(9214.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mn" transform="translate(10270.3,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"/></g></g></g></svg></mjx-container><br>2. 两个向量到了公共信道，线性相加。  S-T<br>3. 数据分离：合并的数据和源站规格化内积<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="30.339ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 13409.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="mo" transform="translate(867.2,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"/></g><g data-mml-node="mo" transform="translate(1367.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(1756.4,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="mo" transform="translate(2623.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(3623.9,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"/></g><g data-mml-node="mo" transform="translate(4327.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(4994.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mn" transform="translate(6050.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mtext" transform="translate(6550.4,0)"><path data-c="A0" d=""/></g><g data-mml-node="mi" transform="translate(6800.4,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"/></g><g data-mml-node="mo" transform="translate(7726.7,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"/></g><g data-mml-node="mo" transform="translate(8226.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(8615.9,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="mo" transform="translate(9483.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(10483.3,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"/></g><g data-mml-node="mo" transform="translate(11187.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(11854.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mn" transform="translate(12909.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container></h2><h1 id="随机访问介质访问控制"><a href="#随机访问介质访问控制" class="headerlink" title="随机访问介质访问控制"></a>随机访问介质访问控制</h1><h2 id="ALOHA协议"><a href="#ALOHA协议" class="headerlink" title="ALOHA协议"></a>ALOHA协议</h2><h2 id="纯ALOHA协议：不监听信道，不按时间槽发送，随机重发（如果发生冲突，接收方就会检测出差错，然后不予确认，发送方在一定时间内收不到就判断发生冲突，超时后等一随机时间在重传）时隙ALOHA协议：把时间分成若干个相同的时间片，所有用户在时间片开始时刻同步接入网络信道，若发生冲突，则必须等到下一个时间片开始时刻再发送-纯ALOHA比时隙ALOHA吞吐量更低，效率更低-纯ALOHA想发就发，时隙ALOHA只有在时间片段开始时才能发-CSMA协议CS：载波监听，每一个站在发送数据之前以及发送数据时要检测一下总线上是否有其他计算机在发送数据。MA：多点接入，表示许多计算机以多点接入的方式连接在一根总线。CSMA思想：发送帧之前，监听信道-1-坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则直接传输，不必等待；忙则一直监听，知道空闲马上传输。如果有冲突，则等待一个随机长的时间监听，重复上述过程。-优点：只要媒体空闲，站点就马上发送，避免了媒体利用率的损失。-假如有两个或两个以上的站点有数据要发送，冲突就不可避免。-非坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则直接传输，不必等待；忙则等待一个随机时间之后再进行监听-优点：采用随机的重发延迟时间可以减少冲突发生的可能性。-缺点：可能存在大家都在延迟等待过程中，使得媒体仍可能处于空闲状态，媒体使用率降低。-p-坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则以p概率直接传输，不必等待；概率1-p等待到下一个时间槽在传输；忙则持续监听知道信道空闲再以p概率发送。若冲突则等到下一个时间槽开始在监听并重复上述过程。-优点：既能像非坚持算法那样减少冲突，又能像1-坚持算法那样减少媒体空闲时间-缺点：发生冲突后还是要坚持把数据帧发送完，造成了浪费。-CSMA-CD（以太网）CD：碰撞检测，“边发送边监听”，适配器边发送数据边检测信道上信号电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。（半双工网络）争用期：以太网的端到端往返时间2t截断二进制指数规避算法：1-确定基本退避时间为争用期2t2-定义参数k为重传次数，但k不超过10，即k-min【重传次数，10】-3-从离散的整数集合【0，1，···，-2-k-1-】中随机取出一个数r，重传所需要退避的时间就是r倍的基本退避时间，即2rt4-当重传达16次仍不能成功时，说明网络太拥挤，认为此帧永远无法正确发出，抛弃此帧并向高层报告出错最小帧长问题：帧的传输时延至少要两倍于信号在总线中的传播时延（最小帧长-总线传播时延-数据传输速率-2）-以太网规定最短帧长为64B-CSMA-CA（无线局域网）工作原理：-发送数据前，先检测信道是否空闲。-空闲则发出RTS，RTS包括发射端的地址、接收端的地址、下一份数据将持续发送的时间等信息；信道忙则等待。-接收端收到RTS，将响应CTS。-发送端收到CTS后，开始发送数据帧（同时预约信道：发送方告知其他站点自己要传多久数据）-接收端收到数据帧后，将用CRC来检验数据是否正确，正确则响应ACK帧-发送方收到ACK就可以及逆行下一个数据帧的发送，若没有则一直重传至规定重发次数为止（采用二进制指数退避算法来确定随机的推迟时间）"><a href="#纯ALOHA协议：不监听信道，不按时间槽发送，随机重发（如果发生冲突，接收方就会检测出差错，然后不予确认，发送方在一定时间内收不到就判断发生冲突，超时后等一随机时间在重传）时隙ALOHA协议：把时间分成若干个相同的时间片，所有用户在时间片开始时刻同步接入网络信道，若发生冲突，则必须等到下一个时间片开始时刻再发送-纯ALOHA比时隙ALOHA吞吐量更低，效率更低-纯ALOHA想发就发，时隙ALOHA只有在时间片段开始时才能发-CSMA协议CS：载波监听，每一个站在发送数据之前以及发送数据时要检测一下总线上是否有其他计算机在发送数据。MA：多点接入，表示许多计算机以多点接入的方式连接在一根总线。CSMA思想：发送帧之前，监听信道-1-坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则直接传输，不必等待；忙则一直监听，知道空闲马上传输。如果有冲突，则等待一个随机长的时间监听，重复上述过程。-优点：只要媒体空闲，站点就马上发送，避免了媒体利用率的损失。-假如有两个或两个以上的站点有数据要发送，冲突就不可避免。-非坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则直接传输，不必等待；忙则等待一个随机时间之后再进行监听-优点：采用随机的重发延迟时间可以减少冲突发生的可能性。-缺点：可能存在大家都在延迟等待过程中，使得媒体仍可能处于空闲状态，媒体使用率降低。-p-坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则以p概率直接传输，不必等待；概率1-p等待到下一个时间槽在传输；忙则持续监听知道信道空闲再以p概率发送。若冲突则等到下一个时间槽开始在监听并重复上述过程。-优点：既能像非坚持算法那样减少冲突，又能像1-坚持算法那样减少媒体空闲时间-缺点：发生冲突后还是要坚持把数据帧发送完，造成了浪费。-CSMA-CD（以太网）CD：碰撞检测，“边发送边监听”，适配器边发送数据边检测信道上信号电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。（半双工网络）争用期：以太网的端到端往返时间2t截断二进制指数规避算法：1-确定基本退避时间为争用期2t2-定义参数k为重传次数，但k不超过10，即k-min【重传次数，10】-3-从离散的整数集合【0，1，···，-2-k-1-】中随机取出一个数r，重传所需要退避的时间就是r倍的基本退避时间，即2rt4-当重传达16次仍不能成功时，说明网络太拥挤，认为此帧永远无法正确发出，抛弃此帧并向高层报告出错最小帧长问题：帧的传输时延至少要两倍于信号在总线中的传播时延（最小帧长-总线传播时延-数据传输速率-2）-以太网规定最短帧长为64B-CSMA-CA（无线局域网）工作原理：-发送数据前，先检测信道是否空闲。-空闲则发出RTS，RTS包括发射端的地址、接收端的地址、下一份数据将持续发送的时间等信息；信道忙则等待。-接收端收到RTS，将响应CTS。-发送端收到CTS后，开始发送数据帧（同时预约信道：发送方告知其他站点自己要传多久数据）-接收端收到数据帧后，将用CRC来检验数据是否正确，正确则响应ACK帧-发送方收到ACK就可以及逆行下一个数据帧的发送，若没有则一直重传至规定重发次数为止（采用二进制指数退避算法来确定随机的推迟时间）" class="headerlink" title="纯ALOHA协议：不监听信道，不按时间槽发送，随机重发（如果发生冲突，接收方就会检测出差错，然后不予确认，发送方在一定时间内收不到就判断发生冲突，超时后等一随机时间在重传）时隙ALOHA协议：把时间分成若干个相同的时间片，所有用户在时间片开始时刻同步接入网络信道，若发生冲突，则必须等到下一个时间片开始时刻再发送+ 纯ALOHA比时隙ALOHA吞吐量更低，效率更低+ 纯ALOHA想发就发，时隙ALOHA只有在时间片段开始时才能发## CSMA协议CS：载波监听，每一个站在发送数据之前以及发送数据时要检测一下总线上是否有其他计算机在发送数据。MA：多点接入，表示许多计算机以多点接入的方式连接在一根总线。CSMA思想：发送帧之前，监听信道+ 1-坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则直接传输，不必等待；忙则一直监听，知道空闲马上传输。如果有冲突，则等待一个随机长的时间监听，重复上述过程。    + 优点：只要媒体空闲，站点就马上发送，避免了媒体利用率的损失。    + 假如有两个或两个以上的站点有数据要发送，冲突就不可避免。+ 非坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则直接传输，不必等待；忙则等待一个随机时间之后再进行监听    + 优点：采用随机的重发延迟时间可以减少冲突发生的可能性。    + 缺点：可能存在大家都在延迟等待过程中，使得媒体仍可能处于空闲状态，媒体使用率降低。+ p-坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则以p概率直接传输，不必等待；概率1-p等待到下一个时间槽在传输；忙则持续监听知道信道空闲再以p概率发送。若冲突则等到下一个时间槽开始在监听并重复上述过程。    + 优点：既能像非坚持算法那样减少冲突，又能像1-坚持算法那样减少媒体空闲时间    + 缺点：发生冲突后还是要坚持把数据帧发送完，造成了浪费。## CSMA/CD（以太网）CD：碰撞检测，“边发送边监听”，适配器边发送数据边检测信道上信号电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。（半双工网络）争用期：以太网的端到端往返时间2t截断二进制指数规避算法：1. 确定基本退避时间为争用期2t2. 定义参数k为重传次数，但k不超过10，即k=min【重传次数，10】.3. 从离散的整数集合【0，1，···，$2^k-1$】中随机取出一个数r，重传所需要退避的时间就是r倍的基本退避时间，即2rt4. 当重传达16次仍不能成功时，说明网络太拥挤，认为此帧永远无法正确发出，抛弃此帧并向高层报告出错最小帧长问题：帧的传输时延至少要两倍于信号在总线中的传播时延（最小帧长=总线传播时延*数据传输速率*2）,以太网规定最短帧长为64B## CSMA/CA（无线局域网）工作原理：+ 发送数据前，先检测信道是否空闲。+ 空闲则发出RTS，RTS包括发射端的地址、接收端的地址、下一份数据将持续发送的时间等信息；信道忙则等待。+ 接收端收到RTS，将响应CTS。+ 发送端收到CTS后，开始发送数据帧（同时预约信道：发送方告知其他站点自己要传多久数据）+ 接收端收到数据帧后，将用CRC来检验数据是否正确，正确则响应ACK帧+ 发送方收到ACK就可以及逆行下一个数据帧的发送，若没有则一直重传至规定重发次数为止（采用二进制指数退避算法来确定随机的推迟时间）"></a>纯ALOHA协议：不监听信道，不按时间槽发送，随机重发（如果发生冲突，接收方就会检测出差错，然后不予确认，发送方在一定时间内收不到就判断发生冲突，超时后等一随机时间在重传）<br>时隙ALOHA协议：把时间分成若干个相同的时间片，所有用户在时间片开始时刻同步接入网络信道，若发生冲突，则必须等到下一个时间片开始时刻再发送<br>+ 纯ALOHA比时隙ALOHA吞吐量更低，效率更低<br>+ 纯ALOHA想发就发，时隙ALOHA只有在时间片段开始时才能发<br>## CSMA协议<br>CS：载波监听，每一个站在发送数据之前以及发送数据时要检测一下总线上是否有其他计算机在发送数据。<br>MA：多点接入，表示许多计算机以多点接入的方式连接在一根总线。<br>CSMA思想：<code>发送帧之前，监听信道</code><br>+ 1-坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则直接传输，不必等待；忙则一直监听，知道空闲马上传输。如果有冲突，则等待一个随机长的时间监听，重复上述过程。<br>    + 优点：只要媒体空闲，站点就马上发送，避免了媒体利用率的损失。<br>    + 假如有两个或两个以上的站点有数据要发送，冲突就不可避免。<br>+ 非坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则直接传输，不必等待；忙则等待一个随机时间之后再进行监听<br>    + 优点：采用随机的重发延迟时间可以减少冲突发生的可能性。<br>    + 缺点：可能存在大家都在延迟等待过程中，使得媒体仍可能处于空闲状态，媒体使用率降低。<br>+ p-坚持CSMA：如果一个主机要发送消息，那么它先监听信道，空闲则以p概率直接传输，不必等待；概率1-p等待到下一个时间槽在传输；忙则持续监听知道信道空闲再以p概率发送。若冲突则等到下一个时间槽开始在监听并重复上述过程。<br>    + 优点：既能像非坚持算法那样减少冲突，又能像1-坚持算法那样减少媒体空闲时间<br>    + 缺点：发生冲突后还是要坚持把数据帧发送完，造成了浪费。<br>## CSMA/CD（以太网）<br>CD：碰撞检测，“边发送边监听”，适配器边发送数据边检测信道上信号电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。（半双工网络）<br>争用期：以太网的端到端往返时间2t<br>截断二进制指数规避算法：<br>1. 确定基本退避时间为争用期2t<br>2. 定义参数k为重传次数，但k不超过10，即k=min【重传次数，10】.<br>3. 从离散的整数集合【0，1，···，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.049ex" height="2.117ex" role="img" focusable="false" viewbox="0 -853.7 2673.8 935.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"/></g></g><g data-mml-node="mo" transform="translate(1173.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(2173.8,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container>】中随机取出一个数r，重传所需要退避的时间就是r倍的基本退避时间，即2rt<br>4. 当重传达16次仍不能成功时，说明网络太拥挤，认为此帧永远无法正确发出，抛弃此帧并向高层报告出错<br><strong>最小帧长问题：帧的传输时延至少要两倍于信号在总线中的传播时延（最小帧长=总线传播时延*数据传输速率*2）,以太网规定最短帧长为64B</strong><br>## CSMA/CA（无线局域网）<br>工作原理：<br>+ 发送数据前，先检测信道是否空闲。<br>+ 空闲则发出<strong>RTS</strong>，RTS包括发射端的地址、接收端的地址、下一份数据将持续发送的时间等信息；信道忙则等待。<br>+ 接收端收到RTS，将响应<strong>CTS</strong>。<br>+ 发送端收到CTS后，开始发送数据帧（同时<strong>预约信道</strong>：发送方告知其他站点自己要传多久数据）<br>+ 接收端收到数据帧后，将用CRC来检验数据是否正确，正确则响应<strong>ACK帧</strong><br>+ 发送方收到ACK就可以及逆行下一个数据帧的发送，若没有则一直重传至规定重发次数为止（采用二进制指数退避算法来确定随机的推迟时间）</h2><h1 id="轮询访问介质"><a href="#轮询访问介质" class="headerlink" title="轮询访问介质"></a>轮询访问介质</h1><p>信道划分介质访问控制（MAC）：</p>
<ul>
<li>基于多路复用技术划分资源</li>
<li>网络负载重：共享信道效率高，且公平</li>
<li>网络负载轻：共享信道效率低<br>随机访问MAC：</li>
<li>用户根据意愿随机发送信息，发送信息时可独占信道带宽</li>
<li>网络负载重：产生冲突开销</li>
<li>网络负载轻：共享信道效率高，单个节点可利用信道全部带宽<br>轮询访问MAC协议：</li>
<li>既要不产生冲突，又要发送时占全部带宽。</li>
</ul>
<h2 id="轮询协议"><a href="#轮询协议" class="headerlink" title="轮询协议"></a>轮询协议</h2><p>主节点轮流“邀请”从属结点发送数据</p>
<h2 id="令牌传递协议（物理星型拓扑，逻辑环形拓扑）"><a href="#令牌传递协议（物理星型拓扑，逻辑环形拓扑）" class="headerlink" title="令牌传递协议（物理星型拓扑，逻辑环形拓扑）"></a>令牌传递协议（物理星型拓扑，逻辑环形拓扑）</h2><p>令牌：一个特殊格式的MAC控制帧，不含任何信息。控制信道使用，确保同一时刻只有一个结点独占信道。<br><em>常用于负载较大、通信量较大的网络中</em>  </p>
<hr>
<h1 id="局域网"><a href="#局域网" class="headerlink" title="局域网"></a>局域网</h1><p>简称LAN，是指在某一区域内由多台计算机互联成的计算机组，使用广播信道。</p>
<ol>
<li>覆盖的地理范围较小，只在一个相对独立的局部范围内联</li>
<li>使用专门铺设的传输介质进行联网，数据传输速率高</li>
<li>通信延迟时间短，误码率低，可靠性较高</li>
<li>各站为平等关系，共享传输信道</li>
<li>多采用分布式控制和广播式通信，能进行广播和组播</li>
</ol>
<h2 id="拓扑结构"><a href="#拓扑结构" class="headerlink" title="拓扑结构"></a>拓扑结构</h2><p>主要存在：星型拓扑、总线型拓扑、环形拓扑、树型拓扑</p>
<ul>
<li>星型：传输速度快、便于控制和管理但网络可靠性低、网络共享能力差，有单点故障问题</li>
<li>总线型：可靠性高、网络节点响应速度快、共享资源能力强、设备投入量少、成本低、安装使用方便</li>
<li>环形：通信设备和线路比较节省，有单点故障问题，系统响应延时长，信息传输效率低</li>
<li>树型：易于拓展、易于隔离故障、容易单点故障</li>
</ul>
<h2 id="介质访问控制方法"><a href="#介质访问控制方法" class="headerlink" title="介质访问控制方法"></a>介质访问控制方法</h2><ol>
<li>CSMA/CD：常用于总线型局域网，也用于树型网络</li>
<li>令牌总线：常用于总线型局域网，也用于树型网络。把总线型或树型网络中的各个工作站按一定顺序如按接口地址大小排列形成一个逻辑环。只有令牌持有者才能控制总线，才有发送信息的权力。</li>
<li>令牌环：用于环形局域网，如令牌环网</li>
</ol>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ol>
<li>以太网：IEEE802.3</li>
<li>令牌环网：物理上是星型拓扑结构，逻辑上是环形拓扑结构（IEEE802.5）</li>
<li>FDDI网：物理上采用了双环拓扑结构，逻辑上是环形拓扑结构</li>
<li>ATM网：较新型的单元交换技术，使用53字节固定长度的单元进行交换</li>
<li>无线局域网：采用IEEE802.11标准</li>
</ol>
<h3 id="以太网"><a href="#以太网" class="headerlink" title="以太网"></a>以太网</h3><p>提供无连接、不可靠的服务。<strong>只实现无差错接受，不实现可靠传输</strong><br><em>以太网参考模型一般只包括物理层和数据链路层（网卡实现的主要功能在物理层和数据链路层）</em><br>10BASE-T是传送基带信号的双绞线以太网，T表示双绞线，传输速率是10Mb/s，<strong>采用曼彻斯特编码，采用CSMA/CD</strong><br>MAC地址：每个适配器有一个全球唯一的48位二进制地址，前24位代表厂家，后24位厂家自己制定<br>以太网V2MAC帧：<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/V2MAC.png"><br>高速以太网：100BASE-T以太网（全双工、半双工）、吉比特以太网（使用光纤传输、全双工、半双工）、10吉比特以太网<br>快速以太网仍然使用CSMA/CD协议，采用保持最短帧长不变而将最大电缆长度减少提高数据传输速率</p>
<h3 id="无线局域网"><a href="#无线局域网" class="headerlink" title="无线局域网"></a>无线局域网</h3><p>802.11的MAC帧头格式：<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/80211MAC.png"></p>
<ul>
<li>有固定基础设施无线局域网</li>
<li>无固定基础设施无线局域网的自组织网络</li>
</ul>
<h2 id="MAC子层和LLC子层"><a href="#MAC子层和LLC子层" class="headerlink" title="MAC子层和LLC子层"></a>MAC子层和LLC子层</h2><p>IEEE802将数据链路层划分为逻辑链路层LLC子层和介质访问控制MAC子层<br>LLC：负责识别网络层协议，然后对他们进行封装。<br>MAC：数据帧的封装/卸装，帧的寻址和识别，真的接受与发送，链路的管理，帧的差错控制等。  </p>
<h2 id="VLAN"><a href="#VLAN" class="headerlink" title="VLAN"></a>VLAN</h2><p>传统局域网的局限：</p>
<ul>
<li>缺乏流量隔离：即使把组流量局域划到一个单一交换机，广播流量仍会跨越整个机构网络</li>
<li>管理用户不便：如果一个主机在不同组件移动，必须改变物理布线，连接到新的交换机上。</li>
<li>路由器成本较高：局域网内使用很多路由器花销较大</li>
</ul>
<p>定义：VLAN是一种将局域网内的设备划分成与物理位置无关的逻辑组的局域网。每个VLAN是一个单独的广播域。<br>交换机上生成的各VLAN互不相通，若想实现通信，需要借助路由器、三层交换机。<br>VLAN标记的前两个字节表明是IEEE802.1Q帧，接下来4位没用，后面12位是VLAN标识符VID，唯一表示了该以太网帧属于哪个VLAN</p>
<ul>
<li>VID的取值范围是0<del>4095，表示VLAN的有效ID取值范围为1</del>4094</li>
<li>IEEE802.1Q帧是由交换机来处理的，而不是由用户主机来处理的（即主机和交换机之间酯交换普通的以太网帧）</li>
</ul>
<h1 id="广域网"><a href="#广域网" class="headerlink" title="广域网"></a>广域网</h1><p>通常跨接很大的物理范围，所覆盖的范围从几十公里到几千公里，可以形成国际性的远程网络。<br>广域网的通信子网主要使用<strong>分组交换</strong>技术，广域网的通信子网可以利用公用分组交换网、卫星通信网和无限分组交换网，他将分布在不同地区的局域网或计算机系统互连起来，实现存储转发，达到<strong>资源共享</strong>的目的。</p>
<h2 id="PPP协议"><a href="#PPP协议" class="headerlink" title="PPP协议"></a>PPP协议</h2><p>只支持全双工链路，提供有连接不可靠服务  </p>
<ul>
<li>简单：对于链路层的帧，无需纠错，无需序号，无需流量控制</li>
<li>封装成帧：帧定界符</li>
<li>透明传输：与帧定界符一样比特组合的数据应该如何处理：异步线路用字节填充，同步线路用比特填充</li>
<li>多种网络层协议：封装的IP数据报可以采用多种协议</li>
<li>多种类型链路：串行/并行，同步/异步，电/光</li>
<li>差错检测</li>
<li>检测连接状态</li>
<li>最大传送单元</li>
<li>网络层地址协商</li>
<li>数据压缩协商<br>无需满足的要求：</li>
<li>纠错</li>
<li>流量控制</li>
<li>序号</li>
<li>不支持多点线路<br>三个组成部分：</li>
<li>一个将IP数据报封装到串行链路的方法</li>
<li>链路控制协议LCP：建立并维护数据链路连接</li>
<li>网络控制协议NCP：PPP可支持多种网络层协议，每个不同的网络层协议都要一个相应的NCP来配置，为网络层协议建立和配置逻辑连接<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/PPP.png"></li>
</ul>
<table>
<thead>
<tr>
<th align="center">设备名称</th>
<th align="center">能否隔离冲突域</th>
<th align="center">能否隔离广播域</th>
</tr>
</thead>
<tbody><tr>
<td align="center">集线器</td>
<td align="center">不能</td>
<td align="center">不能</td>
</tr>
<tr>
<td align="center">中继器</td>
<td align="center">不能</td>
<td align="center">不能</td>
</tr>
<tr>
<td align="center">交换机</td>
<td align="center">能</td>
<td align="center">不能</td>
</tr>
<tr>
<td align="center">网桥</td>
<td align="center">能</td>
<td align="center">不能</td>
</tr>
<tr>
<td align="center">路由器</td>
<td align="center">能</td>
<td align="center">能</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>网络层</title>
    <url>/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
    <content><![CDATA[<p>主要任务：把分组从源端传到目的端，为分布交换网上的不同主机提供通信服务。网络层传输单位是数据报。  </p>
<ul>
<li>路由选择与分组转发</li>
<li>异构网络互连</li>
<li>拥塞控制</li>
</ul>
<h1 id="SDN"><a href="#SDN" class="headerlink" title="SDN"></a>SDN</h1><p>数据平面（转发）：对于数据处理过程中各种具体处理转发过程。<br>控制平面（路由选择）：用于控制和管理网络协议的运行。<br>SDN：控制平面从路由器物理上分离。路由器仅实现转发，远程控制器计算和转发转发表以供每台路由器所使用。路由选择处理器负责与远程控制器通信，目的是接受远程控制器计算的转发表项。  </p>
<ul>
<li>SDN控制器：维护准确的网络状态信息（远程链路、路由器和主机的状态）；为运行在控制平面中的网络控制应用程序提供信息<ul>
<li>北向API：与网络控制应用程序交互。允许网络控制应用程序在状态管理层之间读写网络状态</li>
<li>网络范围状态管理层：由SDN控制平面作出的最终控制决定，将要求控制器具有有关网络的主机、链路等最新状态信息</li>
<li>通信层：SDN控制器与受控网络设备之间的通信（OpenFlow协议），包含“南向接口”</li>
</ul>
</li>
<li>网络控制应用程序：根据SDN控制器提供的方法，这些应用程序通过这些方法能够监视、编程和控制下面的网络设备</li>
</ul>
<h1 id="路由算法"><a href="#路由算法" class="headerlink" title="路由算法"></a>路由算法</h1><ul>
<li>静态路由算法：管理员手动配置路由信息<ul>
<li>优点：简便、可靠，在负荷稳定、拓扑变化不大的网络中运行效果很好，广泛应用于高度安全性的军事网络和较小的商业网络</li>
<li>缺点：路由更新慢，不使用大型网络</li>
</ul>
</li>
<li>动态路由算法（自适应路由算法）<ul>
<li>全局性（链路状态路由算法OSPF）：所有路由器掌握完整的网络拓扑和连路费用信息</li>
<li>分散性（距离向量路由算法RIP）：路由器只掌握物理相连的邻居及链路费用</li>
<li>优点：路由更新快，适用大型网络，及时响应链路费用或网络拓扑变化</li>
<li>缺点：算法复杂，增加网络负担</li>
</ul>
</li>
</ul>
<p>自治系统AS：在单一的技术管理下的一组路由器，而这些路由器使用一种AS内部的路由选择协议和共同的度量以确定分组在该AS内的路由，同时还使用一种AS之间的路由协议以确定在AS之间的路由。<code>一个AS内的所有网络都属于一个行政单位来管辖，一个自治系统的所有路由器在本自治系统内都必须连通</code>  </p>
<ul>
<li>内部网关协议IGP：一个AS内使用的 （RIP、OSPF）</li>
<li>外部网关协议EGP：AS之间使用的（BGP）</li>
</ul>
<h2 id="RIP协议（UDP）"><a href="#RIP协议（UDP）" class="headerlink" title="RIP协议（UDP）"></a>RIP协议（UDP）</h2><p>RIP是一种分布式的基于距离向量的路由选择协议，是因特网的协议标准，最大优点是<em>简单</em>。<br>RIP协议要求网络中每一个路由器都维护从它自己到其他每一个目的网络的唯一最佳距离记录。<br>距离：通常为“跳数”，即从源端口到目的端口所经过的路由器个数，经过路由器跳数+1.特别地，从一路由器到直接连接的网络距离为1.RIP允许一条路由最多只能包括15个路由器，因此距离为16表示<strong>网络不可达</strong>。  </p>
<ul>
<li>仅和相邻路由器交换信息</li>
<li>路由器交换的信息是自己的路由表</li>
<li>每30秒交换一次路由信息，然后路由器根据新信息更新路由表。若超过180s没收到邻居路由器的通告，则判定邻居没了并更新自己的路由表。</li>
</ul>
<p>更新路由表规则：</p>
<ul>
<li>若目的网络相同，且下一跳路由器相同，则直接更新</li>
<li>若是新的目的地址，则增加表项</li>
<li>若目的网络相同，则下一跳路由器不同，而距离更短，则更新</li>
<li>否则，无操作</li>
</ul>
<p><strong>好消息传得快，快消息传得慢</strong>  </p>
<h2 id="OSPF协议（IP）"><a href="#OSPF协议（IP）" class="headerlink" title="OSPF协议（IP）"></a>OSPF协议（IP）</h2><p>开放最短路径优先OSPF协议：“开放”标明OSPF不是受某一家厂商控制，而是公开发表的；使用的是Dijkstra提出的最短路径算法。  （每隔30min刷新；适用于大规模网络；收敛速度快）<br>OSPF将一个自治系统再划分为若干更小的范围，称为<em>区域</em>。划分区域的好处是，将利用洪泛法交换链路状态信息的范围局限在每个区域而非整个自治系统。<br>最主要的特征：使用分布式的链路状态协议。  </p>
<ul>
<li>使用洪泛式向自治系统内所有路由器发送信息，即路由器通过输出端口向所有相邻的路由器发送信息，而每一个相邻路由器又再次将此信息发往其所有的相邻路由器</li>
<li>发送的信息就是与本路由器相邻的所有路由器的链路状态（本路由器和那些路由器相邻，以及该链路的度量/代价–费用、距离、时延、带宽等）</li>
<li>只有当链路状态发生变化时，路由器才向所有路由器洪泛发送此信息</li>
</ul>
<h3 id="链路状态路由算法"><a href="#链路状态路由算法" class="headerlink" title="链路状态路由算法"></a>链路状态路由算法</h3><ol>
<li>每个路由器发现他的邻居结点【HELLO问候分组】，并了解邻居结点的网络地址。</li>
<li>设置到它的每个邻居的成本度量metric</li>
<li>构造【DD数据库描述分组】，相邻站给出自己的链路状态数据库中的所有链路状态项目的摘要信息。</li>
<li>如果DD分组中的摘要自己都有，则邻站不做处理；如果存在没有的或者是更新的，则发送【LSR链路状态请求分组】，请求自己没有的和比自己更新的信息。</li>
<li>收到邻站的LSR分组后，发送【LSU链路状态更新分组】进行更新</li>
<li>更新完毕后，邻站返回一个【LSAck链路状态确认分组】进行确认。</li>
</ol>
<p>只有一个路由器的链路状态发生变化：</p>
<ol>
<li>泛洪发送【LSU链路状态更新分组】进行更新</li>
<li>更新完毕后，其他站返回一个【LSAck链路状态确认分组】进行确认。</li>
<li>使用Dijkstar根据自己的链路状态数据库构造到其他节点间的最短路径。</li>
</ol>
<h2 id="BGP协议（应用层）（TCP）"><a href="#BGP协议（应用层）（TCP）" class="headerlink" title="BGP协议（应用层）（TCP）"></a>BGP协议（应用层）（TCP）</h2><p>和其他AS的邻站BGP发言人交换信息；交换网络可达性的信息，即要到达某个网络所要经过的一系列AS；发生变化时更新有变化的部分。  </p>
<ul>
<li>支持CIDR</li>
<li>发生变化时更新有变化的部分</li>
</ul>
<ol>
<li>OPEN报文：用来与相邻的另一个BGP发言人建立关系，并认证发送方</li>
<li>UPDATE报文：通告新路径或撤销原路径。</li>
<li>KEEPALIVE报文：在无UPDATE时，周期性证实邻站的连通性；也作为OPEN的确认。</li>
<li>NOTIFICTION报文：报告先前报文的差错；也被用于关闭连接<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E7%BD%91%E7%BB%9C%E5%B1%82/Compare.png"></li>
</ol>
<h1 id="IP数据报"><a href="#IP数据报" class="headerlink" title="IP数据报"></a>IP数据报</h1><p><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E7%BD%91%E7%BB%9C%E5%B1%82/IP.png"><br>首部长度：<strong>以4B为单位</strong>，表示数据报中首部的长度<br>MTU：最大传送单元，链路层数据帧可封装数据的上限。以太网的MTU是1500字节。  </p>
<p>标识：同意数据报的分片使用统一标识。<br>标志：只有两位有意义，中间位DF：（DF=1，禁止分片；DF=0，允许分片）；最低位MF（MF=1，后面还有“分片”；MF=0，代表最后一片/没分片）<br>片偏移：指出较长分组分片后，某片在原分组中的相对位置。<strong>以8B为单位</strong>。  </p>
<h1 id="IPv4"><a href="#IPv4" class="headerlink" title="IPv4"></a>IPv4</h1><p>IP地址：全世界唯一的32位/4字节标识符，标识路由器主机的接口{&lt;网络号&gt;&lt;主机号&gt;}<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E7%BD%91%E7%BB%9C%E5%B1%82/IPv4.png"><br>特殊的IP地址</p>
<table>
<thead>
<tr>
<th>NetID（网络号）</th>
<th>HostID（主机号）</th>
<th>作为IP分组源地址</th>
<th>作为IP分组目的地址</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>全0</td>
<td>全0</td>
<td>可以</td>
<td>不可以</td>
<td>本网范围内表示主机，路由表中用于表示默认路由（表示整个Internet网络）</td>
</tr>
<tr>
<td>全0</td>
<td>特定值</td>
<td>可以</td>
<td>不可以</td>
<td>表示本网内某个特定主机</td>
</tr>
<tr>
<td>全1</td>
<td>全1</td>
<td>不可以</td>
<td>可以</td>
<td>本网广播地址（路由器不转发）</td>
</tr>
<tr>
<td>特定值</td>
<td>全0</td>
<td>不可以</td>
<td>不可以</td>
<td>网络地址，表示一个网络</td>
</tr>
<tr>
<td>特定值</td>
<td>全1</td>
<td>不可以</td>
<td>可以</td>
<td>直接广播地址，对特定网络上的所有主机进行广播</td>
</tr>
<tr>
<td>127</td>
<td>任何数</td>
<td>可以</td>
<td>可以</td>
<td>用于本地软件换回测试，称为环回地址</td>
</tr>
<tr>
<td>私有IP地址：</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>地址类别</th>
<th>地址范围</th>
<th>网段个数</th>
</tr>
</thead>
<tbody><tr>
<td>A类</td>
<td>10.0.0.0~10.255.255.255</td>
<td>1</td>
</tr>
<tr>
<td>B类</td>
<td>172.16.0.0~172.31.255.255</td>
<td>16</td>
</tr>
<tr>
<td>C类</td>
<td>192.168.0.0~192.168.255.255</td>
<td>256</td>
</tr>
<tr>
<td>常用的三种类别IP地址的使用范围：</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>网络类别</th>
<th>最大可用网络数</th>
<th>第一个可用的网络号</th>
<th>最后一个可用的网络号</th>
<th>每个网络的最大主机数</th>
</tr>
</thead>
<tbody><tr>
<td>A</td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.016ex" height="2.088ex" role="img" focusable="false" viewbox="0 -841 2659 923"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"/></g></g><g data-mml-node="mo" transform="translate(1158.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(2159,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></svg></mjx-container></td>
<td>1</td>
<td>126</td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.816ex" height="2.09ex" role="img" focusable="false" viewbox="0 -841.7 3012.6 923.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"/></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(2512.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></svg></mjx-container></td>
</tr>
<tr>
<td>B</td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.816ex" height="2.09ex" role="img" focusable="false" viewbox="0 -841.7 3012.6 923.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" transform="translate(500,0)"/></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(2512.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container></td>
<td>128.1</td>
<td>191.255</td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.816ex" height="2.072ex" role="img" focusable="false" viewbox="0 -833.9 3012.6 915.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"/></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(2512.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></svg></mjx-container></td>
</tr>
<tr>
<td>C</td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.816ex" height="2.072ex" role="img" focusable="false" viewbox="0 -833.9 3012.6 915.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)"/></g></g></g><g data-mml-node="mo" transform="translate(1512.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(2512.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container></td>
<td>192.0.1</td>
<td>223.255.255</td>
<td><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.016ex" height="2.072ex" role="img" focusable="false" viewbox="0 -833.9 2659 915.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="38" d="M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"/></g></g><g data-mml-node="mo" transform="translate(1158.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(2159,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></svg></mjx-container></td>
</tr>
</tbody></table>
<h2 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h2><p>网络地址转换NAT：在专用网连接到因特网的路由器安装NAT软件，安装了NAT软件的路由器叫NAT路由器，它至少有一个有效的外部全球IP地址。</p>
<h2 id="子网划分和子网掩码"><a href="#子网划分和子网掩码" class="headerlink" title="子网划分和子网掩码"></a>子网划分和子网掩码</h2><p>子网掩码：用来指明分类IP地址的主机号部分被借用了多少位作为子网号（与IP地址进行与运算）<br>路由器转发分组的算法：</p>
<ol>
<li>提取目的IP地址</li>
<li>是否直接交付</li>
<li>特定主机路由</li>
<li>检测路由表有无路径</li>
<li>默认路由0.0.0.0</li>
<li>丢弃，报告转发分组失败</li>
</ol>
<h2 id="无分类编址CIDR"><a href="#无分类编址CIDR" class="headerlink" title="无分类编址CIDR"></a>无分类编址CIDR</h2><p>CIDR把网络前缀都相同的连续的IP地址组成一个“CIDR地址块”<br>CIDR记法：IP地址后加上“/”，然后写上网络前缀<br>特点：</p>
<ol>
<li>消除了传统的A类、B类和C类地址以及划分子网的概念</li>
<li>融合子网地址与子网掩码，方便子网划分</li>
</ol>
<p>将多个子网聚合成一个较大的子网，叫做路由聚合。方法：<code>将网络前缀缩短（所有网络地址取交集）</code><br>使用CIDR时，查找路由表可能得到几个匹配结果（跟网络掩码按位相与），应选择具有最长网络前缀的路由。前缀越长，地址块越小，路由越具体。  </p>
<h2 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h2><p>ARP协议：完成主机或路由器IP地址到MAC地址的映射<br>四种典型情况：</p>
<ol>
<li>主机A发给本网络上的主机B：用ARP找到主机B的硬件地址</li>
<li>主机A发给另一网络上的主机B：用ARP找到本网络上一个路由器的硬件地址；</li>
<li>路由器发给本网络的主机A：用ARP找到主机A的硬件地址；</li>
<li>路由器发给另一网络的主机B：用ARP找到本网络上的一个路由器的硬件地址</li>
</ol>
<h2 id="DHCP协议"><a href="#DHCP协议" class="headerlink" title="DHCP协议"></a>DHCP协议</h2><p>动态主机配置协议DHCP是应用层协议，使用客户/服务器方式，客户端和服务端通过广播方式进行交互，基于UDP。<br>DHCP提供即插即用联网机制，主机可以从服务器动态获取IP地址、子网掩码、默认网关、DNS服务器名称与IP地址，允许地址重用，支持移动用户加入网络，支持在用地址续租。  </p>
<ol>
<li>主机广播DHCP发现报文</li>
<li>DHCP服务器广播DHCP提供报文</li>
<li>主机广播DHCP请求报文</li>
<li>DHCP服务器广播DHCP确认报文</li>
</ol>
<h2 id="ICMP协议"><a href="#ICMP协议" class="headerlink" title="ICMP协议"></a>ICMP协议</h2><h3 id="ICMP差错报文"><a href="#ICMP差错报文" class="headerlink" title="ICMP差错报文"></a>ICMP差错报文</h3><ul>
<li>终点不可达：当路由器或主机不能交付数据报时就像源点发送终点不可达报文。</li>
<li>源点抑制报文：当路由器或主机由于拥塞而丢弃数据报时，就像源点发送源点抑制报文，使源点知道应当把数据报的发送速率变慢。拥塞丢数据。</li>
<li>时间超过：当路由器收到生存时间TTL=0的数据报时，除丢弃该数据报外，还要向远点发送时间超过报文。当终点在预先规定的时间内不能收到一个数据报的全部数据报片时，就把已收到的数据报片都丢弃，并向源点发送时间超过报文。</li>
<li>参数问题：当路由器或目的主机收到的数据报的首部中有的字段值不正确时，就丢弃该数据包，并向源点发送参数问题报文。</li>
<li>改变路由：路由器把改变路由报文发送给主机，让主机知道下次应将数据报发送给另外的路由器。</li>
</ul>
<h3 id="ICMP询问报文"><a href="#ICMP询问报文" class="headerlink" title="ICMP询问报文"></a>ICMP询问报文</h3><ul>
<li>回送请求和回答报文：测试目的站是否可达以及了解其相关状态</li>
<li>时间戳请求和回答报文：用来进行时钟同步和测量时间</li>
<li>掩码地址请求和回答报文</li>
<li>路由器询问和通告报文</li>
</ul>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>PING：测试两个主机之间的连通性，使用了ICMP回送请求和回答报文<br>Traceroute：跟踪一个分组从源点到终点的路径，使用了ICMP时间超过差错报告报文。</p>
<h1 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h1><p><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E7%BD%91%E7%BB%9C%E5%B1%82/IPv6.png"><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E7%BD%91%E7%BB%9C%E5%B1%82/IPv6-%E6%95%B0%E6%8D%AE%E6%8A%A5.png"></p>
<ul>
<li>版本：IPv6对应的是6</li>
<li>流标号：“流”是互联网络上从特定源点到特定终点的一系列数据报。所有属于同一个流的数据包具有同样的流标签</li>
<li>有效载荷长度：指明IPv6数据报除基本首部以外的字节数。</li>
<li>下一个首部：标识下一个扩展首部或上层协议首部</li>
<li>通信量类：区分不同的IPv6数据报的类别和优先级</li>
</ul>
<p><strong>IPv6和IPv4的区别：</strong></p>
<ul>
<li>IPv6将地址从32位扩大到128位，更大的地址空间</li>
<li>IPv6将IPv4的校验和字段彻底移除，以减少每跳的处理时间</li>
<li>IPv6将IPv4的可选字段移除首部，变成了扩展首部，称为灵活的首部格式，路由器通常不对扩展首部进行检查，大大提高了路由器的处理效率</li>
<li>IPv6支持即插即用，不需要DHCP协议</li>
<li>IPv6首部长度必须是8B的整数倍，IPv4首部是4B的整数倍</li>
<li>IPv6只能在主机处分片，IPv4可以在路由器和主机处分片</li>
<li>ICMIPv6：附加报文类型“分组过大”</li>
<li>IPv6取消了协议字段，改成了下一个首部字段</li>
<li>IPv6支持资源的预分配，支持实时视像等要求，保证一定的带宽和时延的应用</li>
<li>IPv6取消了总长度字段，改用了有效载荷长度字段。</li>
<li>IPv6取消了服务类型字段。</li>
</ul>
<p>基本地址类型：</p>
<ul>
<li>单播：一对一通信，可做源地址+目的地址</li>
<li>多播：一对多通信，可做目的地址</li>
<li>任播：一对多中的一个通信，可做目的地址</li>
</ul>
<p>IPv6向IPv4过渡的策略：</p>
<ul>
<li>双栈协议：同时启用IPv4协议栈和IPv6协议栈</li>
<li>隧道技术：将其他协议的数据报重新封装然后通过隧道发送</li>
</ul>
<h1 id="IP组播"><a href="#IP组播" class="headerlink" title="IP组播"></a>IP组播</h1><p>IP组播地址让源设备能够将分组发送给一组设备。属于多播组的设备将分配一个组播组IP地址（一群共同需求主机的相同标识）<br>组播地址范围为224.0.0.0~239.255.255.255（D类地址），一个D类地址表示一个组播组。只能用作分组的<strong>目标地址</strong>。源地址总是为单播地址。</p>
<ul>
<li>组播数据包不提供可靠交付，应用于UDP</li>
<li>对组播数据包不产生ICMP差错报文</li>
<li>并非所有D类地址都可以作为组播地址</li>
</ul>
<p>硬件组播：组播IP地址也需要相应的组播MAC地址在本地网络中实际传送帧。组播MAC地址以十六进制值01-00-5E打头，余下的6个十六机制位是根据IP组播组地址的最后23位转换得来的。<br>TCP/IP协议使用的以太网多播地址范围是01-00-5E-00-00-00到01-00-5E-7F-FF-FF  </p>
<ul>
<li>网际组管理协议IGMP：让路由器知道本局域网上是否有主机参加或退出了某个组播组</li>
<li>组播路由选择协议：找出以源主机为根节点的<em>多播转发树</em></li>
</ul>
<h1 id="移动IP"><a href="#移动IP" class="headerlink" title="移动IP"></a>移动IP</h1><p>移动IP技术是移动结点以固定的网络IP地址，实现跨越不同网段的漫游功能，并保证基于网络IP的网络权限再漫游过程中不发生任何改变。<br>移动节点：具有永久IP地址的移动设备。<br>归属代理（本地代理）：一个移动节点的永久“居所”称为归属网络，在归属网络中代表移动节点执行移动管理功能的实体叫做归属代理。<br>永久地址：移动站点在归属网络中的原始地址。<br>外部代理：在外部网络中帮助移动节点完成移动管理功能的实体称为外部代理。<br>转交地址：可以是外部代理的地址或动态配置的一个地址。</p>
<h1 id="网络层设备"><a href="#网络层设备" class="headerlink" title="网络层设备"></a>网络层设备</h1><p>路由器：一种具有多个输入输出端口和多个输出端口的专用计算机，其任务是分组转发，互联两个不同网络层协议的网段。（可以隔离冲突域和广播域）<br>路由表是根据路由选择算法得出的，主要用途是路由选择，总用软件来实现。<br>转发表由路由表得来的，可以用软件实现，也可以用特殊的硬件来实现。  </p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>考研初试院校信息</title>
    <url>/2024/10/09/%E9%99%A2%E6%A0%A1%E4%BF%A1%E6%81%AF/%E5%88%9D%E8%AF%95/</url>
    <content><![CDATA[<h1 id="中山大学（计算机技术）"><a href="#中山大学（计算机技术）" class="headerlink" title="中山大学（计算机技术）"></a>中山大学（计算机技术）</h1><p>考试内容：22408</p>
]]></content>
      <categories>
        <category>院校信息</category>
      </categories>
  </entry>
  <entry>
    <title>第一章-计算机系统概述</title>
    <url>/2024/09/17/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<p>计算机系统：</p>
<ul>
<li>系统软件：管理整个计算机系统</li>
<li>应用软件：按任务需要编制成的各种程序<br>“存储程序”：将指令以二进制代码的形式事先输入计算机的主存储器<br>冯·若依曼计算机的特点：</li>
<li>计算机有五大部件组成：主存储器、运算器、控制器、输入设备、输出设备</li>
<li>指令和数据以同等地位存于存储器，可按地址寻访</li>
<li>指令和数据用二进制表示</li>
<li>指令有操作码和地址码组成</li>
<li>存储程序</li>
<li><strong>以运算器为中心</strong><br>现代计算机：以存储器为中心<br>主存储器：存储体（存储单元、存储字、存储字长）、MAR（存储地址寄存器，MAR位数反映存储单元的个数）、MDR（存储数据寄存器，MSR位数=存储自长）<br>运算器：</li>
<li>ACC：累加器，用于存放操作数，或运算结果</li>
<li>MQ：乘商寄存器，在乘、除运算时，用于存放操作数或运算结果</li>
<li>X：通用的操作数寄存器，用于存放操作数</li>
<li>ALU：算术逻辑单元，通过内部复杂的电路实现算术运算、逻辑运算<br>控制器：</li>
<li>CU：控制单元，分析指令，给出控制信号</li>
<li>IR：指令寄存器，存放当前执行的指令</li>
<li>PC：程序计数器，存放下一条指令地址，有自动加1的功能</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>加</th>
<th>减</th>
<th>乘</th>
<th>除</th>
</tr>
</thead>
<tbody><tr>
<td>ACC</td>
<td>被加数、和</td>
<td>被减数、差</td>
<td>乘积高位</td>
<td>被除数、余数</td>
</tr>
<tr>
<td>MQ</td>
<td></td>
<td></td>
<td>乘数、乘积低位</td>
<td>商</td>
</tr>
<tr>
<td>X</td>
<td>加数</td>
<td>减数</td>
<td>被乘数</td>
<td>除数</td>
</tr>
</tbody></table>
<p>高级语言机器-&gt;汇编语言机器-&gt;操作系统机器-&gt;用机器语言的机器-&gt;微指令系统<br>编译程序：将高级语言一次全部翻译为汇编语言，或直接翻译为机器语言。<br>汇编程序：将汇编语言翻译成机器语言<br>解释程序：高级语言翻译为机器语言  </p>
<h1 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h1><ul>
<li>机器字长</li>
<li>数据通路带宽：数据总线一次所能并行传送信息的位数</li>
<li>主存容量</li>
<li>运算速度<ul>
<li>CPU时钟周期</li>
<li>CPU主频</li>
<li>CPI：执行一条指令所需的时钟周期数</li>
<li>执行一条指令的耗时：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="22.659ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 10015.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(760,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"/></g><g data-mml-node="mi" transform="translate(1511,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"/></g><g data-mml-node="mo" transform="translate(2237.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"/></g><g data-mml-node="mo" transform="translate(2959.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(3348.4,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"/></g><g data-mml-node="mi" transform="translate(4108.4,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"/></g><g data-mml-node="mi" transform="translate(4859.4,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"/></g><g data-mml-node="mi" transform="translate(5626.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(6626.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">钟</text></g><g data-mml-node="mi" transform="translate(7626.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">周</text></g><g data-mml-node="mi" transform="translate(8626.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">期</text></g><g data-mml-node="mo" transform="translate(9626.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container></li>
</ul>
</li>
<li>IPS：每秒执行多少指令</li>
<li>FLOPS：每秒执行多少浮点运算</li>
<li>吞吐量：指系统在单位时间内处理请求的数量</li>
<li>响应时间：指从用户向计算机发送一个请求，到该系统对该请求做出响应并获得他所需要的结果的等待时间</li>
</ul>
<p><strong>区分指令和数据是指令执行的不同阶段，区分地址和数据是根据总线的类型，统一编址下区分是存储单元地址还是I/0端口地址是根据不同的地址码</strong></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>第三章-存储系统</title>
    <url>/2024/09/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>DRAM：动态RAM，用于主存<br>SRAM：静态RAM，用于Cache<br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/SRAMvsDRAM.png"><br>DRAM刷新周期一般为2ms，每次刷新以行为单元，每次刷新一行存储单元。（减少选通线数量）有硬件支持，读出一行的信息后重新写入，占用一个读/写周期<br>三种刷新策略：</p>
<ul>
<li>分散刷新</li>
<li>集中刷新</li>
<li>异步刷新<br>地址线复用技术：行、列地址分两次送，可使地址线更少，芯片引脚更少。  </li>
<li>MROM：掩模式只读存储器</li>
<li>PROM：可编程只读存储器</li>
<li>EPROM：可擦除可编程只读存储器<ul>
<li>UVEPROM：紫外线擦除</li>
<li>EEPROM：可用“电擦除”擦除特定的字</li>
</ul>
</li>
<li>Flash Memory：闪速存储器，“写”比“读”速度更慢</li>
<li>SSD：有控制单元+存储单元构成，可进行多次快速擦除重写<br>BIOS芯片为ROM芯片，存储了“自举装入程序”，负责引导装入操作系统。</li>
</ul>
<h1 id="双端口RAM"><a href="#双端口RAM" class="headerlink" title="双端口RAM"></a>双端口RAM</h1><p>需要由两组完全独立的数据线、地址线、控制线。CPU、RAM中也要有更复杂的控制电路。<br>作用：优化多核CPU访问一根内存条的速度<br>对于“写入错误”和“读入错误”的解决办法：置“忙”信号为0，、由判断逻辑决定暂时关闭一个端口，未被关闭的端口正常访问，被关闭的端口延长一个很短的时间段后再访问。  </p>
<h1 id="多体并行存储器"><a href="#多体并行存储器" class="headerlink" title="多体并行存储器"></a>多体并行存储器</h1><p>高位交叉编址：连续读取n个存储字耗时nT<br>低位交叉编址：连续读取n个存储字耗时T+（n-1）r<br>判断可能发生访存冲突的规则：给定的访存地址在相邻的四次访问中出现在同一个存储模块内</p>
<h1 id="主存容量扩展"><a href="#主存容量扩展" class="headerlink" title="主存容量扩展"></a>主存容量扩展</h1><ul>
<li>位扩展</li>
<li>字扩展<ul>
<li>线选法：n个片选信号</li>
<li>译码片：用译码器选择片选信号</li>
</ul>
</li>
</ul>
<h1 id="Cache"><a href="#Cache" class="headerlink" title="Cache"></a>Cache</h1><p>主存与Cache之间以“块”为单位进行数据交换<br>Cache用来缓和CPU与主存之间的速度矛盾<br>Cache映射：</p>
<ul>
<li>全相联映射：“标记”、有效位<ul>
<li>优点：Cache存储空间利用充分，命中率高</li>
<li>缺点：查找“标记”最慢，有可能需要对比所有行的标记</li>
</ul>
</li>
<li>直接映射：Cache块号：主存块号%Cache总块数<ul>
<li>优点：对于任意一个地址，只需对比一个“标记”速度最快</li>
<li>缺点：Cache存储空间利用不充分，命中率低</li>
</ul>
</li>
<li>组相联映射：组号=主存块号%分组数<ul>
<li>另外两种方式的折中，综合效果最好<br>给出Cache的容量和主存块大小可以用来计算Cache的行数，以及块内地址位数即为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="15.151ex" height="2.161ex" role="img" focusable="false" viewbox="0 -750 6696.6 955"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"/></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"/></g><g data-mml-node="msub" transform="translate(783,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"/></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1696.6,0)"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">主</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">存</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">块</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">大</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">小</text></g></g></g></g></svg></mjx-container></li>
</ul>
</li>
</ul>
<h2 id="替换算法"><a href="#替换算法" class="headerlink" title="替换算法"></a>替换算法</h2><ul>
<li>随机算法（RAND）：若Cache已满，则随机选择一块替换<ul>
<li>实现简单，但完全不考虑局部性原理</li>
</ul>
</li>
<li>先进先出算法（FIFO）：若Cache已满，则替换最先被调入Cache的块<ul>
<li>实现简单，依然没考虑局部性原理，会出现抖动现象：频繁的换入换出</li>
</ul>
</li>
<li>近期最少使用（LRU）：为每一个Cache块设置一个“计数器”，用于记录每个Cache块已经有多久没被访问。当Cache满后替换“计数器”最大的。<ul>
<li>基于“局部性原理”，实际运行效果优秀，Cache命中率高，也可能出现抖动现象</li>
</ul>
</li>
<li>最近不经常使用算法（LFU）：为每一个Cache块设置一个“计数器”，用于记录每个Cache块被访问过多少次。当Cache满后替换“计数器”最小的。<ul>
<li>实际效果不如LRU</li>
</ul>
</li>
</ul>
<h2 id="一致性问题"><a href="#一致性问题" class="headerlink" title="一致性问题"></a>一致性问题</h2><p>写回法：当CPU对Cache写命中时，只修改Cache的内容，而不立即写入主存，只有当此块被换出时才写回主存<br>全写法：当CPU对Cache写命中时，必须把数据同时写入Cache和主存，一般使用写缓冲。（CPU写的速度很快，若写操作很频繁，可能会因为写缓冲饱和而发生阻塞）<br>写分配法：当CPU对Cache写不命中时，把主存中的块调入Cache，在Cache中修改。通常搭配写回法使用。<br>非写分配法：当CPU对Cache写不命中时只写入主存，不调入Cache。搭配全写法使用。  </p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>第二章-数据的表示和运算</title>
    <url>/2024/09/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="BCD码"><a href="#BCD码" class="headerlink" title="BCD码"></a>BCD码</h1><p>8421码前9个数字都是二进制表示，若进行加法运算结果超过9，则再加上二进制的6（0110）。（有权码）<br>余3码：8421码+（0011），<br>2421码：改变权值定义</p>
<table>
<thead>
<tr>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody><tr>
<td>0000</td>
<td>0001</td>
<td>0010</td>
<td>0011</td>
<td>0100</td>
<td>1011</td>
<td>1100</td>
<td>1101</td>
<td>1110</td>
<td>1111</td>
</tr>
</tbody></table>
<p>计算机硬件如何实现无符号整数的减法</p>
<ol>
<li>“被减数”不变，“减数”全部按位取反、末尾+1，减法变加法</li>
<li>从最低位开始，按位相加，并往更高位进位</li>
</ol>
<h1 id="有符号整数"><a href="#有符号整数" class="headerlink" title="有符号整数"></a>有符号整数</h1><h2 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h2><ol>
<li>符号位“0/1”对应“正/负”，剩余的数值位表示真值的绝对值</li>
<li>若机器字长n+1位，带符号整数的原码表示范围<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="23.2ex" height="2.262ex" role="img" focusable="false" viewbox="0 -750 10254.5 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mo" transform="translate(778,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="msup" transform="translate(1167,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(2396.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(3396.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(3896.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mo" transform="translate(4563.5,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5619.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"/></g></g><g data-mml-node="mo" transform="translate(6469,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="msup" transform="translate(7524.8,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g><g data-mml-node="mo" transform="translate(8754.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(9754.5,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g></g></g></svg></mjx-container></li>
<li>真值0有两种形式：+0和-0，[+0]=0.0000000,[-0]=0.0000000<br>缺点：符号位不能参与运算，需要设计复杂的硬件电路才能处理</li>
</ol>
<h2 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h2><p>原码符号位不变，数值位取反，从而得到反码</p>
<h2 id="补码"><a href="#补码" class="headerlink" title="补码"></a>补码</h2><p>反码的末尾加1，得到补码<br>原码与补码转换，原码从右往左找到第一个1，这个1左边的所有“数值位”按位取反，得到补码<br>补码数值位不能解读为“位权”<br>补码的符号位需要参与运算，补码的减法运算与无符号整数的减法运算类似，减数全部为取反、末尾加一，在进行加法<br>C语言中的数据在内存中为补码表示形式。<br><strong>对于补码，真值0只有一种补码，最小的数位1，000……000=-<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.279ex" height="1.528ex" role="img" focusable="false" viewbox="0 -675.5 1007.3 675.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></svg></mjx-container></strong>  </p>
<h2 id="移码"><a href="#移码" class="headerlink" title="移码"></a>移码</h2><p>补码的基础上将符号位取反。移码只能用于表示整数。<br>移码=真值+偏置值</p>
<h2 id="定点小数"><a href="#定点小数" class="headerlink" title="定点小数"></a>定点小数</h2><p>所有转换都与定点整数的各种形式转换一样。<br>定点小数的补码最小值为1，000……000=-1</p>
<h1 id="运算电路"><a href="#运算电路" class="headerlink" title="运算电路"></a>运算电路</h1><h2 id="原码的加减运算"><a href="#原码的加减运算" class="headerlink" title="原码的加减运算"></a>原码的加减运算</h2><ul>
<li>原码的加法运算<ul>
<li>正+正：绝对值做加法，结果为正（可能溢出）</li>
<li>负+负：绝对值做加法，结果为负（可能溢出）</li>
<li>正+负：绝对值大的减绝对值小，符号同绝对值大的数</li>
<li>负+正：与正+负情况类似</li>
</ul>
</li>
<li>原码的减法运算，“减数”符号取反，转变为加法<br>定点整数的符号拓展：在原符号位和数值位中间添加新位，正数都填0；复数原码添0，负数反、补码添1<br>定点小数的符号拓展：在原符号位和数值位后面添加新位，正数都添0；负数原、补码添0，负数反码添1</li>
</ul>
<h2 id="加法器"><a href="#加法器" class="headerlink" title="加法器"></a>加法器</h2><p>OF（Overflow Flag）：溢出标志。溢出时是1，否则置0（有符号数的加减运算是否溢出）。计算方法<em>次高位进位与最高位进位进行异或计算</em><br>SF（Sign Flag）：==有符号==加减运算结果的正负性，0为正数，1为负数<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="22.008ex" height="2.149ex" role="img" focusable="false" viewbox="0 -750 9727.6 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"/></g><g data-mml-node="mi" transform="translate(645,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"/></g><g data-mml-node="mo" transform="translate(1671.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(2727.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">最</text></g><g data-mml-node="mi" transform="translate(3727.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">高</text></g><g data-mml-node="mi" transform="translate(4727.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(5727.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(6727.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">本</text></g><g data-mml-node="mi" transform="translate(7727.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">位</text></g><g data-mml-node="mi" transform="translate(8727.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">和</text></g></g></g></svg></mjx-container><br>ZF（Zero Flag）：表示计算结果是否为0 结果为0贼ZF置1<br>CF（Carry Flag）：==无符号==加减法是否发生进位或错位。当CF=1时，说明无符号的加减运算发生了进位或错位，也即发生了溢出。  </p>
<h2 id="移位运算"><a href="#移位运算" class="headerlink" title="移位运算"></a>移位运算</h2><p>原码的算术移位：符号位保持不变，进队数值位进行移位。<br>反码的算术移位：正数的反码移位与原码移位相同，负数的反码移位规则：</p>
<ul>
<li>右移：高位补1，低位舍弃</li>
<li>左移：低位补1，高位舍弃<br>补码的算数移位：正数的补码移位与原码移位相同，负数补码最右边的1及其右边同原码。最右边的1的左边同反码</li>
<li>右移：高位补1，低位舍弃</li>
<li>左移：低位补0，高位舍弃<br>逻辑移位：当作无符号数进行移位<br>循环移位：将进位位循环移到数字末尾或者数字首部</li>
</ul>
<h2 id="原码乘法运算"><a href="#原码乘法运算" class="headerlink" title="原码乘法运算"></a>原码乘法运算</h2><p>进行n轮加法、移位</p>
<h2 id="补码乘法运算"><a href="#补码乘法运算" class="headerlink" title="补码乘法运算"></a>补码乘法运算</h2><p>进行n轮加法、移位，最后再多来一次加法。每次移位是“补码的算数右移”，符号位参与运算，加法规则如下：</p>
<ul>
<li>辅助位-MQ中最低位=1时，ACC+<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.72ex;" xmlns="http://www.w3.org/2000/svg" width="3.082ex" height="1.72ex" role="img" focusable="false" viewbox="0 -442 1362.1 760.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"/></g><g data-mml-node="TeXAtom" transform="translate(605,-176.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">补</text></g></g></g></g></g></svg></mjx-container></li>
<li>辅助位-MQ中最低位=0时，ACC+0</li>
<li>辅助位-MQ中最低位=-1时，ACC+<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.72ex;" xmlns="http://www.w3.org/2000/svg" width="4.842ex" height="2.039ex" role="img" focusable="false" viewbox="0 -583 2140.1 901.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="msub" transform="translate(778,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"/></g><g data-mml-node="TeXAtom" transform="translate(605,-176.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">补</text></g></g></g></g></g></svg></mjx-container></li>
</ul>
<h2 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h2><p>无符号与有符号数：不改变数据内容，改变解释方式<br>长整数变短整数：高位截断，保留低位。  </p>
<h1 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h1><p><img lazyload src="/images/loading.svg" data-src="/2024/09/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E5%92%8C%E8%BF%90%E7%AE%97/float.png"><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="12.005ex" height="2.095ex" role="img" focusable="false" viewbox="0 -843.8 5306.2 925.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"/></g><g data-mml-node="mo" transform="translate(1165.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="msup" transform="translate(2221.6,0)"><g data-mml-node="mi"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"/></g><g data-mml-node="mi" transform="translate(499,363) scale(0.707)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"/></g></g><g data-mml-node="mo" transform="translate(3533,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"/></g><g data-mml-node="mi" transform="translate(4255.2,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"/></g></g></g></svg></mjx-container><br>阶码E反映浮点数的表示范围及小数点的实际位置；尾数M的数值部分位数n反映浮点数的精度。<br>左规：位数算数左移一位，阶码减一<br>右规：位数算数右移一位，阶码加一<br>用原码表示的尾数进行规格化：</p>
<ul>
<li>正数为0.1…….的形式，其最大值表示为0.11…….11;最小值表示为0.10……0，表示范围为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="17.628ex" height="2.737ex" role="img" focusable="false" viewbox="0 -864.9 7791.5 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><rect width="553.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(1071.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2127.1,0)"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"/></g></g><g data-mml-node="mo" transform="translate(3455.9,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4511.7,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="msup" transform="translate(1722.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(778,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></g></g></svg></mjx-container> </li>
<li>负数为1.1……的形式，其最大值为1.10……0;最小值为1.11…1，表示范围<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="25.673ex" height="2.737ex" role="img" focusable="false" viewbox="0 -864.9 11347.5 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(778,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mn" transform="translate(1778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(2500.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="msup" transform="translate(3500.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(778,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g><g data-mml-node="mi" transform="translate(5057.8,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mo" transform="translate(6335.6,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(7391.4,0)"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"/></g></g><g data-mml-node="mo" transform="translate(8720.2,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="mo" transform="translate(9775.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mfrac" transform="translate(10553.9,0)"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><rect width="553.6" height="60" x="120" y="220"/></g></g></g></svg></mjx-container><br>用补码表示的尾数规格化</li>
<li>正数为0.1……的形式，其最大值表示为0.11…1;最小值表示为0.10…0,表示范围为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="17.628ex" height="2.737ex" role="img" focusable="false" viewbox="0 -864.9 7791.5 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><rect width="553.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(1071.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2127.1,0)"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"/></g></g><g data-mml-node="mo" transform="translate(3455.9,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4511.7,0)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(722.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="msup" transform="translate(1722.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(778,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g></g></g></g></svg></mjx-container></li>
<li>负数为1.0…..的形式，最大值表示为1.01….1;最小值表示为1.00……0，表示范围为<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="22.908ex" height="2.737ex" role="img" focusable="false" viewbox="0 -864.9 10125.5 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mo" transform="translate(1555.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="mi" transform="translate(2611.6,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"/></g><g data-mml-node="mo" transform="translate(3940.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"/></g><g data-mml-node="mo" transform="translate(4996.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mo" transform="translate(5774.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mfrac" transform="translate(6163.1,0)"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><rect width="553.6" height="60" x="120" y="220"/></g><g data-mml-node="mo" transform="translate(7178.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="msup" transform="translate(8179.1,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(778,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g></g></g><g data-mml-node="mo" transform="translate(9736.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g></g></g></svg></mjx-container><br>阶码全为0，尾数不全为0时，表示非规格化小数<br>阶码全为0，尾数全为0时，表示0<br>阶码全为1，尾数全为0时，表示无穷大<br>阶码全为1，尾数不全为0时，表示非数值“NaN”<br>int-&gt;float：可能损失精度<br>float-&gt;int:可能溢出及损失精度</li>
</ul>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>第七章-IO系统</title>
    <url>/2024/10/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%B8%83%E7%AB%A0-IO%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>I/O接口：又称为I/O控制器、设备控制器，负责协调主机与外部设备之间的数据传输  </p>
<h1 id="I-O控制方式"><a href="#I-O控制方式" class="headerlink" title="I/O控制方式"></a>I/O控制方式</h1><ul>
<li>程序查询方式（独占查询、定时查询）<ul>
<li>优点：接口设计简单、设备量少</li>
<li>缺点：CPU在信息传送过程中要花费很多时间用于查询和等待，而且在一段时间内只能和一台外设交换信息，效率大大降低</li>
</ul>
</li>
<li>程序中断方式</li>
<li>DMA方式:<ul>
<li>预处理</li>
<li>数据传送</li>
<li>后处理</li>
</ul>
</li>
<li>通道方式</li>
</ul>
<h1 id="I-O接口"><a href="#I-O接口" class="headerlink" title="I/O接口"></a>I/O接口</h1><ul>
<li>数据缓冲：通过数据寄存器打到主机和外设工作速度的匹配</li>
<li>错误或状态检测：通过状态寄存器反馈设备的各种错误、状态信息，供CPU查用</li>
<li>控制和定时：接受从控制总线发来的控制信号、时钟信号</li>
<li>数据格式转换：串-并、并-串等格式转换</li>
<li>与主机和设备通信：实现主机-I/O接口-I/O设备之间的通信</li>
</ul>
<p>部件：</p>
<ul>
<li>数据线：读写数据、状态字、控制字、中断类型号</li>
<li>地址线：指明I/O端口</li>
<li>控制线：读/写I/O端口地信号、中断请求信号</li>
</ul>
<p>端口及编址：</p>
<ol>
<li>统一编制：把I/O端口当作存储器的单元进行地址分配，用统一的访存指令就可以访问I/O端口，又称为存储器映射方式（靠不同的地址吗区分内存和I/O设备）<ul>
<li>优点：不需要专门的输入/输出指令，所有访存指令都可直接访问端口，程序设计灵活性高、端口有较大的编制空间、读写控制逻辑电路简单</li>
<li>缺点：端口占用了主存地址空间，使主存地址空间变小，外设寻址时间长</li>
</ul>
</li>
<li>独立编址：I/O端口地址与存储器地址无关，独立编址CPU需要设置专门的输入/输出指令访问端口，又称I/O映射方式（靠不同的指令区分内存和I/O设备）<ul>
<li>优点：使用专用I/O指令，程序编址清晰；I/O端口地址位数少，地址译码速度快；I/O端口的地址不占用准村地址空间</li>
<li>缺点：I/O指令类型少，一般只能对端口进行传送操作，程序设计灵活性差；需要CPU提供存储器读/写、I/O设备读/写两组控制信号，增加了控制逻辑电路的复杂性</li>
</ul>
</li>
</ol>
<p>DMA方式和中断方式的区别：</p>
<ol>
<li>中断方式是程序的切换，需要保护和回复现场；而DMA方式不中断现行程序，无需保护现场，除了预处理和后处理，其他时候不占用任何CPU资源</li>
<li>对中断请求的响应只能发生在每条指令执行结束时；而对DMA请求的响应可以发生在任意一个机器周期结束时</li>
<li>中断传送过程需要CPU的干预；而DMA传送过程不需要CPU的干预，因此数据传送速率非常高，适合于高速外设的成组数据传送</li>
</ol>
<p>DMA与CPU请求总线的优先级对比：</p>
<ul>
<li>DMA请求的优先级高于中断请求</li>
<li>中断方式具有处理异常事件的能力，而DMA方式仅限于大批数据的传送</li>
<li>从数据传送来看，中断方式靠程序传送，DMA方式靠硬件传送</li>
</ul>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>第五章-中央处理器</title>
    <url>/2024/10/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8/</url>
    <content><![CDATA[<h1 id="CPU的功能："><a href="#CPU的功能：" class="headerlink" title="CPU的功能："></a>CPU的功能：</h1><ol>
<li>指令控制：完成取指令、分析指令和执行指令的操作，即程序的顺序控制</li>
<li>操作控制：一条指令的功能往往是由若干操作信号的组合来实现的。CPU管理并产生有内存取出的每条指令的操作信号，把各种操作信号送往相应的部件，从而控制这些部件按指令的要求进行动作</li>
<li>时间控制：对各种操作加以时间上的控制。时间控制要为每条指令按时间顺序提供应有的控制信号</li>
<li>数据加工：对数据进行算术和逻辑运算</li>
<li>中断处理：对计算机运行过程中出现的异常情况和特殊请求进行处理<br>专用数据通路方式：根据指令执行过程中的数据和地址的流动方向安排连接线路</li>
</ol>
<ul>
<li>使用多路选择器根据控制信号选择一路输出</li>
<li>使用三态门可以控制每一路是否输出</li>
</ul>
<h2 id="运算器的基本结构"><a href="#运算器的基本结构" class="headerlink" title="运算器的基本结构"></a>运算器的基本结构</h2><ol>
<li>算术逻辑单元【用户可见】</li>
<li>通用寄存器组【用户可见】</li>
<li>暂存寄存器</li>
<li>累加寄存器</li>
<li>程序状态字寄存器（PSW）【用户可见】</li>
<li>移位器</li>
<li>计数器</li>
</ol>
<h2 id="控制器的基本结构"><a href="#控制器的基本结构" class="headerlink" title="控制器的基本结构"></a>控制器的基本结构</h2><ul>
<li>程序计数器（PC）【用户可见】</li>
<li>指令寄存器（IR）</li>
<li>指令译码器（ID）</li>
<li>微操作信号发生器</li>
<li>时序系统</li>
<li>存储器地址寄存器（MAR）</li>
<li>存储器数据寄存器（MDR）</li>
</ul>
<h1 id="指令执行过程"><a href="#指令执行过程" class="headerlink" title="指令执行过程"></a>指令执行过程</h1><p>指令周期：CPU从主存中每取出并执行一条指令所需的全部时间<br>指令周期常常用若干个机器周期来表示，机器周期又叫CPU周期<br>一个机器周期又包含若干时钟周期（也称为节拍、T周期或CPU时钟周期，它是CPU操作的最基本单位）  </p>
<ul>
<li>取值周期</li>
<li>间址周期</li>
<li>执行周期</li>
<li>中断周期</li>
</ul>
<h2 id="指令执行方案"><a href="#指令执行方案" class="headerlink" title="指令执行方案"></a>指令执行方案</h2><ul>
<li>单指令周期：所有指令都选用相同的执行时间来完成（串行）</li>
<li>多指令周期：对不同类型的指令选用不同的执行步骤来完成（串行）</li>
<li>流水线方案：在每一个时钟周期启动一条指令，尽量让多条指令同时运行，但各自处在不同的执行步骤中。指令之间并行执行</li>
</ul>
<h1 id="单总线方式"><a href="#单总线方式" class="headerlink" title="单总线方式"></a>单总线方式</h1><h2 id="寄存器之间数据传送"><a href="#寄存器之间数据传送" class="headerlink" title="寄存器之间数据传送"></a>寄存器之间数据传送</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(PC)-&gt;Bus  PCout有效,PC内容送总线</span><br><span class="line">Bus-&gt;MAR   MARin有效,总线内容送MAR</span><br></pre></td></tr></table></figure></div>
<h2 id="主存与CPU之间的数据传送"><a href="#主存与CPU之间的数据传送" class="headerlink" title="主存与CPU之间的数据传送"></a>主存与CPU之间的数据传送</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">(PC)-&gt;Bus-&gt;MAR  PCout和MARin有效，现行指令地址-&gt;MAR</span><br><span class="line">1-&gt;R            CU发读命令</span><br><span class="line">MEM(MAR)-&gt;MDR   MARin有效</span><br><span class="line">MDR-&gt;Bus-&gt;IR    MDRout和IRin有效，现行指令-&gt;IR</span><br></pre></td></tr></table></figure></div>
<h2 id="执行算术或逻辑运算"><a href="#执行算术或逻辑运算" class="headerlink" title="执行算术或逻辑运算"></a>执行算术或逻辑运算</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ad(IR)-&gt;Bus-&gt;MAR       MDRout和MARin有效</span><br><span class="line">1-&gt;R                   CU发读命令</span><br><span class="line">MEM(MAR)-&gt;数据线-&gt;MDR   MDRin有效</span><br><span class="line">MDR-&gt;Bus-&gt;Y            MDRout和Yin有效，CU向ALU发送加命令</span><br><span class="line">Z-&gt;ACC                 Zout和ACCin有效，结果-&gt;ACC</span><br></pre></td></tr></table></figure></div>
<h1 id="控制器的功能和工作原理"><a href="#控制器的功能和工作原理" class="headerlink" title="控制器的功能和工作原理"></a>控制器的功能和工作原理</h1><ul>
<li>一个节拍内可以并行完成多个“相容的”微操作</li>
<li>同一个位操作可能在不同指令的不同阶段使用</li>
<li>不同指令的执行周期所需节拍数不相同。为了简化设计，选择定长的机器周期，以可能出现的最大节拍数为准</li>
<li>若是及所需节拍数较少，可将微操作安排在机器周期末尾几个节拍进行</li>
</ul>
<p>在组合逻辑控制器中，微操作控制信号的形成主要与指令译码信号和时钟信号有关  </p>
<p>安排微操作时序原则：</p>
<ol>
<li>微操作的先后顺序不得随意更改</li>
<li>被控对象不同的微操作，尽量安排在一个节拍内完成</li>
<li>占用时间较短的微操作尽量安排在一个节拍内完成并允许有先后顺序</li>
</ol>
<p>硬布线控制器的特点：</p>
<ul>
<li>指令越多，设计和实现越复杂，因此一般用于RISC</li>
<li>如果扩充一条新的指令，则控制器的设计就需要大改，因此扩充指令较困难</li>
<li>由于使用纯硬件实现控制，因此执行速度很快。微操作控制信号有组合逻辑电路即时产生</li>
</ul>
<p>微指令中可能包含多个微命令，但微命令与微操作一一对应；一个指令对应一个微程序，一个微程序可能包含多个微指令<br>CM（控制存储器）：用于存放各指令对应的微程序，控制寄存器用只读存储器ROM构成。<br>CMAR（微地址寄存器）：接受微地址形成部件送来的微地址，为在CM中读取微指令做准备。<br>CMDR（微指令寄存器）：用于存放从CM中取出的微指令，他的位数同微指令字长相等。<br>微指令的格式：</p>
<ul>
<li>水平型微指令：一条微指令能定义多个可并行的微命令<ul>
<li>优点：微程序短，执行速度快</li>
<li>缺点：微指令长，编写微程序麻烦</li>
</ul>
</li>
<li>垂直型微指令：一条微指令只能定义一个微命令，由微操作码字段规定具体功能<ul>
<li>优点：微指令短、简单、规整，便于编写微程序</li>
<li>缺点：微程序长，执行速度慢，工作效率低</li>
</ul>
</li>
<li>混合型微指令：在垂直型的基础上增加一些不太复杂的并行操作。微指令较短，仍便于编写；微程序不长，执行速度加快。</li>
</ul>
<p>微指令的编码方式：</p>
<ul>
<li>直接编码方式：在微指令的操作控制字段中，每一位代表一个微操作命令，某位为“1”表示该控制信号有效<ul>
<li>优点：简单、直观，执行速度快，操作并行性好</li>
<li>缺点：为指令字长过长，n个微命令就要求微指令的操作字段有n位，造成控存容量极大。</li>
</ul>
</li>
<li>字段直接编码方式：将微指令和控制字段分成若干“段”，每段经译码后发出控制信号。微命令字段分段原则：<ul>
<li>互斥性微命令分在同一段，相容性微命令分在不同段内</li>
<li>每个小段中包含的信息为不能太多，否则将增加译码线路的复杂性和译码时间</li>
<li>一般每个小段还要留出一个状态，表示本字段不发出任何微命令。因此，当某字段的长度为3位时，最多只能表示7个互斥的微命令，通常用000表示不操作。</li>
</ul>
</li>
<li>字段间接编码方式：一个字段的某些微命令需由另一个字段中的某些微命令来解释，由于不是靠字段直接译码发出的微命令，故称为字段间接编码，又称隐式编码<ul>
<li>优点：可进一步缩短微指令字长</li>
<li>缺点：削弱了微指令的并行控制能力，故通常作为字段直接编码方式的一种辅助手段。</li>
</ul>
</li>
</ul>
<p>微指令的地址形成方式：</p>
<ul>
<li>微指令的下地址字段：微指令格式中设置一个下地址字段，有微指令的下地址字段直接指出后继微指令的地址，又称为断定方式</li>
<li>根据机器指令的操作码形成：当机器指令取至指令寄存器后，微指令的地址由操作码经微地址形成部件形成。</li>
<li>增量计数器法</li>
<li>分支转移：转移方式：指明判别条件；转移地址：指明转移成功后的去向</li>
<li>通过测试网络</li>
<li>由硬件产生微程序入口地址<br><img lazyload src="/images/loading.svg" data-src="/2024/10/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8/compare.png"></li>
</ul>
<h1 id="指令流水线"><a href="#指令流水线" class="headerlink" title="指令流水线"></a>指令流水线</h1><ul>
<li>顺序执行方式（串行执行方式）：总耗时：T=n*3t=3nt<ul>
<li>优点：控制简单，硬件代价小</li>
<li>执行指令的速度较慢，在任何时刻，处理机中只有一条指令在执行，个功能不见得利用率很低</li>
</ul>
</li>
<li>一次重叠执行方式：总耗时T=3t+(n-1)*2t=(1+2n)t<ul>
<li>优点：程序的执行时间缩短1/3，个功能部件的利用率明显提高</li>
<li>缺点：需要付出硬件上较大开销的代价，控制过程也比顺序执行复杂了</li>
</ul>
</li>
<li>二次重叠执行方式：总耗时T=3t+(n-1)t=(2+n)t<ul>
<li>属于一种最理想情况<br><img lazyload src="/images/loading.svg" data-src="/2024/10/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8/%E4%BA%94%E6%AE%B5%E5%BC%8F%E6%B5%81%E6%B0%B4%E7%BA%BF.png"><br>流水线每一个功能段部件后面都要有一个缓冲寄存器，或称为锁存器，其作用是保存本流水段的执行结果，提供给下一流水段使用。</li>
</ul>
</li>
</ul>
<h2 id="影响流水线的因素："><a href="#影响流水线的因素：" class="headerlink" title="影响流水线的因素："></a>影响流水线的因素：</h2><ul>
<li>结构相关（资源冲突）：由于多条指令在同一时期争用同一资源而形成的冲突<ul>
<li>解决办法1：后一相关指令暂停一周期</li>
<li>解决办法2：资源重复配置（数据存储器+指令存储器）</li>
</ul>
</li>
<li>数据相关（数据冲突）：数据相关指在一个程序中，存在必须等前一条指令执行完才能执行后一条指令的情况，则这两条指令即为数据相关。<ul>
<li>解决办法1：把遇到数据相关的指令及其后续指令都暂停一至几个时钟周期，直到数据相关问题消失后再继续执行。可分为硬件阻塞(stall)和软件插入“NOP”两种方法</li>
<li>解决办法2：数据旁路技术。</li>
<li>解决办法3：编译优化：通过编译器调整指令顺序来解决数据相关。</li>
</ul>
</li>
<li>控制相关（控制冲突）：当流水线遇到转移指令和其他改变PC值的指令而造成断流时，会引起控制相关。<ul>
<li>解决办法1：转移指令分支预测。简单预测（永远猜ture或false）、动态预测（根据历史情况动态调整）</li>
<li>解决办法2：预取转移成功和不成功两个控制流方向上的目标指令</li>
<li>解决办法3：加快和提前形成条件码</li>
<li>解决办法4：提高转移方向的猜准率</li>
</ul>
</li>
</ul>
<h2 id="流水线的分类"><a href="#流水线的分类" class="headerlink" title="流水线的分类"></a>流水线的分类</h2><ol>
<li>部件功能级、处理机级和处理机间级流水线</li>
<li>单功能流水线和多功能流水线</li>
<li>动态流水线和静态流水线</li>
<li>线性流水线和非线性流水线</li>
</ol>
<p>流水线的多发技术：</p>
<ul>
<li>超标量技术：每个时钟周期内可并发多条独立指令、要配置多个功能部件、不能调整指令的执行顺序</li>
<li>超流水技术：在一个时钟周期内在分段、在一个时钟周期内一个功能部件使用多次</li>
<li>超长指令字：由编译程序挖掘出指令间潜在的并行性，将多条能并行操作的指令组合成一条具有多个操作码字段的超长指令字（可达几百位），采用多个处理部件</li>
</ul>
<p><strong>RISC处理器只有“取数LOAD”和“存数STORE”指令才能访问主存</strong><br>条件转移指令只需要进行取指-译码-执行-访存四个阶段<br>无条件转移指令只需要进行取指-译码-执行<br><img lazyload src="/images/loading.svg" data-src="/2024/10/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8/MCPU.png"><br><img lazyload src="/images/loading.svg" data-src="/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%B8%AD%E5%A4%AE%E5%A4%84%E7%90%86%E5%99%A8/strumentThread.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>第六章-总线</title>
    <url>/2024/10/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E5%85%AD%E7%AB%A0-%E6%80%BB%E7%BA%BF/</url>
    <content><![CDATA[<h1 id="总线的分类"><a href="#总线的分类" class="headerlink" title="总线的分类"></a>总线的分类</h1><h2 id="按数据传输格式"><a href="#按数据传输格式" class="headerlink" title="按数据传输格式"></a>按数据传输格式</h2><ul>
<li>串行总线<ul>
<li>优点：只需要一条传输线，成本低廉，广泛应用于长距离传输；应用于计算机内部时，可以节省布线空间。</li>
<li>缺点：在数据发送和接受的时候要进行拆卸和装配，要考虑串行并行转换的问题。</li>
</ul>
</li>
<li>并行总线<ul>
<li>优点：总线的逻辑时序比较简单，电路实现起来比较容易。</li>
<li>缺点：信号线数量多，占用更多的布线空间；远距离传输成本高昂</li>
</ul>
</li>
</ul>
<h2 id="按总线功能（连接的部件）"><a href="#按总线功能（连接的部件）" class="headerlink" title="按总线功能（连接的部件）"></a>按总线功能（连接的部件）</h2><ul>
<li>片内总线：芯片内部的总线。它是CPU芯片内部寄存器与寄存器之间、寄存器与ALU之间的公共连接线。</li>
<li>系统总线：计算机系统内各功能部件（CPU、主存、I/O接口）之间相互连接的总线。<ul>
<li>数据总线用来传输各功能部件之间的数据信息，它是双向传输总线，其位数与机器字长、存储字长有关 。</li>
<li>地址总线用来指出数据总线上的源数据或目的数据所在的主存单元或I/O端口的地址，它是单向传输总线，地址总线的位数与主存地址空间的大小有关。</li>
<li>控制总线传输的是控制信息，包括CPU送出的控制命令和主存（或外设）返回CPU的反馈信号 。</li>
</ul>
</li>
<li>通信总线：通信总线是用于计算机系统之间或计算机系统与其他系统（如远程通信设备、测试设备）之间信息传送的总线，通信总线也称为外部总线。</li>
</ul>
<h2 id="系统总线的结构"><a href="#系统总线的结构" class="headerlink" title="系统总线的结构"></a>系统总线的结构</h2><ul>
<li>单总线结构：CPU、主存、I/O设备（通过I/O接口）都连接在一组总线上，允许I/O设备之间、I/O设备和CPU之间或I/O设备与主存之间直接交换信息。<ul>
<li>优点：结构简单，成本低，易于接入新的设备。</li>
<li>缺点：带宽低、负载重，多个部件只能争用唯一的总线，且不支持并发传送操作。</li>
</ul>
</li>
<li>双总线结构有两条总线，一条主存总线，用于CPU、主存和通道之间进行数据传送；另一条时I/O总线，用于多个外部设备与通道之间进行数据传送<ul>
<li>优点：将较低速的I/O设备从单总线上分离出来，实现存储器总线和I/O总线分离。</li>
<li>缺点：需要增加通道等硬件设备。</li>
</ul>
</li>
<li>三总线结构：三总线结构是在计算机系统各部件之间采用3条各自独立的总线来构成信息通路，这3条总线分别为主存总线 、I/O 总线 和直接内存访问DMA 。<ul>
<li>优点：提高了I/O设备的性能，使其更快地响应命令，提高系统吞吐量。</li>
<li>缺点：系统工作效率较低。</li>
</ul>
</li>
</ul>
<h1 id="总线定时"><a href="#总线定时" class="headerlink" title="总线定时"></a>总线定时</h1><p>总线传输的四个阶段：</p>
<ul>
<li>申请分配阶段：传输请求和总线仲裁</li>
<li>寻址阶段</li>
<li>传输阶段：数据传输</li>
<li>结束阶段</li>
</ul>
<p>总线定时：总线在双方交换数据的过程中需要时间上配合关系的控制  </p>
<h2 id="同步通信"><a href="#同步通信" class="headerlink" title="同步通信"></a>同步通信</h2><p>由统一时钟控制数据传送<br>优点：传送速度较快，具有较高的传输效率；总线控制逻辑简单<br>缺点：主从设备属于强制性同步；不能及时进行数据通信的有效性检验，可靠性较差<br>同步通信适用于总线长度较短及总线所接部件的存取时间比较接近的系统</p>
<h2 id="异步通信"><a href="#异步通信" class="headerlink" title="异步通信"></a>异步通信</h2><p>采用应答方式，没有公共时钟标准  </p>
<ul>
<li>不互锁方式：主设备发出“请求”信号后，不必等到接到从设备的“回答”信号，而实经过一段时间，便撤销“请求”信号；而从设备在接到“请求”信号后，发出“回答”信号，并经过一段时间，自动撤销“回答”信号。双方不存在互锁关系。（速度最快、可靠性最差）</li>
<li>半互锁方式：主设备发出“请求”信号后，必须待接到从设备的“回答”信号后，才撤销“请求”信号，有互锁的关系。而从设备在接到“请求”信号后，发出“回答”信号，但不必等待获知主设备的“请求”信号已经撤销，而是隔一段时间后自动撤销“回答”信号，不存在互锁关系。</li>
<li>全互锁方式：主设备发出“请求”信号后，必须待从设备“回答”后，才撤销“请求”信号；从设备发出“回答”信号，必须待获知主设备“请求”信号已撤销后，再撤销其“回答”信号。双方存在互锁关系。（最可靠、速度最慢）<br>优点：总线周期长度可变，能保证两个工作速度相差很大的部件或设备之间可靠地进行信息交换，自动适应时间的配合。<br>缺点：比同步控制方式少复杂一些，速度比同步定时方式慢。</li>
</ul>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>旅游博客/北京（摆烂式旅游）</title>
    <url>/2024/08/11/%E6%97%85%E6%B8%B8%E5%8D%9A%E5%AE%A2/%E5%8C%97%E4%BA%AC%EF%BC%88%E6%91%86%E7%83%82%E5%BC%8F%E6%97%85%E6%B8%B8%EF%BC%89/</url>
    <content><![CDATA[<p>旅行时间：7.11-7.17（7月10号中午到北京，晚上和同学吃饭，16号休息一天）  </p>
<p> 我是在江西长大的，有一说一对北京的美食并不是很提得起兴趣，但是对于北京烤鸭我还是绝对喜欢的。来北京吃烤鸭最有名的几个如四季民福、全聚德等，四季民福比全聚德相对来说便宜（对于我这个来自小城市的人来说人均200左右也不便宜了😅），有名的京菜有紫光园（价格很实惠）  </p>
<p>总的来说玩了一个礼拜，旅游景点顺序为[奥林匹克公园（鸟巢、水立方）-&gt;故宫博物馆-&gt;颐和园-&gt;天坛公园-&gt;慕田峪长城-&gt;天安门广场]，一天一个景点，主打一个随心所欲😀，不过很多都是提前需要预约的，需要提前规划好路线。  </p>
<table>
<thead>
<tr>
<th>景点</th>
<th>预约情况</th>
<th>价格</th>
</tr>
</thead>
<tbody><tr>
<td>奥林匹克公园</td>
<td>不需要预约</td>
<td>免费</td>
</tr>
<tr>
<td>故宫博物馆</td>
<td>需要预约，并且非常难抢，可以从美团、淘宝、咸鱼等方式购买旅游团中的个人票，多花钱</td>
<td>成人票80、学生票60</td>
</tr>
<tr>
<td>颐和园</td>
<td>需要预约，很好约</td>
<td>60元</td>
</tr>
<tr>
<td>天坛公园</td>
<td>需要预约，很好约，买联合票才能去祈年殿和回音壁</td>
<td>成人票34元、学生票17元</td>
</tr>
<tr>
<td>慕田峪长城</td>
<td>需要提前买票，可以买北京旅游集散的车票，直接从前门抵达旅游景点下方</td>
<td>车票+往返缆车票200元</td>
</tr>
<tr>
<td>天安门广场</td>
<td>需要提前预约，如果想要去天安门城楼和毛主席纪念堂需要提前买票，很难抢到票</td>
<td>免费</td>
</tr>
</tbody></table>
<h2 id="7-10刚来到酒店"><a href="#7-10刚来到酒店" class="headerlink" title="7.10刚来到酒店"></a>7.10刚来到酒店</h2><p>提前订好的酒店，在北京选酒店还是件挺难的事，考虑到交通、两个人住、住的时间长等问题，最后选在在北京四环附近的飘HOME酒店，双床房靠窗，448一晚，已经算比较实惠的了。交通上在14号线将台站附近，去所有景点大概都需要一个小时的通勤时间，只能折中处理了啊😜<br>[四季民福]<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%97%85%E6%B8%B8%E5%8D%9A%E5%AE%A2/%E5%8C%97%E4%BA%AC%EF%BC%88%E6%91%86%E7%83%82%E5%BC%8F%E6%97%85%E6%B8%B8%EF%BC%89/IMG_3376.jpg"></p>
<h2 id="7-11奥林匹克公园（鸟巢、水立方）"><a href="#7-11奥林匹克公园（鸟巢、水立方）" class="headerlink" title="7.11奥林匹克公园（鸟巢、水立方）"></a>7.11奥林匹克公园（鸟巢、水立方）</h2><p>为了拍夜景也是等了好久，大概八点多才开始亮灯，不过刚好后面几天是薛之谦在鸟巢开演唱会，晚上在彩排，也是听到最近很火的DJ版好像在哪里见过你（薛之谦彩排的时候可是唱了好几遍的😆）<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%97%85%E6%B8%B8%E5%8D%9A%E5%AE%A2/%E5%8C%97%E4%BA%AC%EF%BC%88%E6%91%86%E7%83%82%E5%BC%8F%E6%97%85%E6%B8%B8%EF%BC%89/IMG_3377.jpg"></p>
<h2 id="7-12故宫博物馆"><a href="#7-12故宫博物馆" class="headerlink" title="7.12故宫博物馆"></a>7.12故宫博物馆</h2><p>刚好遇见北京下大雨的天气，也真奇了怪，北京一年下不了几次雨还让我碰到了，虽然带了伞，但还是在去故宫博物馆的路上鞋子湿透了，不过刚好碰见下雨天气正好瞧见了故宫那强悍的排水系统，不得不佩服古代人在建筑上面的智慧了。可惜是阴雨天气，故宫建筑里面很多是进不去的，光线也不好，不能很好的看到皇帝坐的椅子，也发挥不了皇帝坐在殿堂上与大臣们开会的想象了🤔。不过逛了逛旁边太后们住的地方，感受下慈禧太后的花园，还是挺有历史气息的😋。<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%97%85%E6%B8%B8%E5%8D%9A%E5%AE%A2/%E5%8C%97%E4%BA%AC%EF%BC%88%E6%91%86%E7%83%82%E5%BC%8F%E6%97%85%E6%B8%B8%EF%BC%89/IMG_3378.jpg"></p>
<h2 id="7-13颐和园"><a href="#7-13颐和园" class="headerlink" title="7.13颐和园"></a>7.13颐和园</h2><p>颐和园公园还是挺大的，主要是还有一个昆明湖，转一圈下来很考验我的双腿🦵，坐了小船，爬了小山，感受一下皇帝们的避暑娱乐的场所，还是觉得古代皇帝才是最快乐的🤣。<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%97%85%E6%B8%B8%E5%8D%9A%E5%AE%A2/%E5%8C%97%E4%BA%AC%EF%BC%88%E6%91%86%E7%83%82%E5%BC%8F%E6%97%85%E6%B8%B8%EF%BC%89/IMG_3379.jpg"></p>
<h2 id="7-14天坛公园"><a href="#7-14天坛公园" class="headerlink" title="7.14天坛公园"></a>7.14天坛公园</h2><p>天坛公园有一个很大的特色，很多老人来这休闲娱乐，这里对于60岁以上老人是免费开放的，这也导致一个问题：这个公园我去参观的时候人很多啊🥵。到祈年殿那里人特别的多，根本没有很好的拍照点；回音壁那里如果人不多吼一嗓子是真的有回声的，但是人多了就没有了，难受😭。去天坛就是为了打卡这个高考数学题上出现了几次的地方🤣<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%97%85%E6%B8%B8%E5%8D%9A%E5%AE%A2/%E5%8C%97%E4%BA%AC%EF%BC%88%E6%91%86%E7%83%82%E5%BC%8F%E6%97%85%E6%B8%B8%EF%BC%89/IMG_3380.jpg"></p>
<h2 id="7-15慕田峪长城（city不city啊）"><a href="#7-15慕田峪长城（city不city啊）" class="headerlink" title="7.15慕田峪长城（city不city啊）"></a>7.15慕田峪长城（city不city啊）</h2><p>主要是北京有两处长城的旧址：八达岭长城和慕田峪长城。也是搜集了很多攻略，看了很多评价，主要是刚好去长城是暑假中的星期一，星期一其他旅游景点闭馆，这样导致了长城的游客特别多，尤其是八达岭长城（毕竟八达岭长城比慕田峪长城更有名气），八达岭长城拍照更壮观，慕田峪长城人会更少一点，看旅游所需，由于身边带了个老人出来旅游，只爬了一下段长城（好汉坡啥的都没去），主要是为了打卡“不到长城非好汉”😋<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%97%85%E6%B8%B8%E5%8D%9A%E5%AE%A2/%E5%8C%97%E4%BA%AC%EF%BC%88%E6%91%86%E7%83%82%E5%BC%8F%E6%97%85%E6%B8%B8%EF%BC%89/IMG_3381.jpg"></p>
<h2 id="7-17天安门广场"><a href="#7-17天安门广场" class="headerlink" title="7.17天安门广场"></a>7.17天安门广场</h2><p>天安门广场给人最大的印象就是国家阅兵那浩荡的气势，广场确实很宽广，旁边就是人民大会堂和国家博物馆，前面是人民英雄纪念碑和毛主席纪念堂，再加上武警的站岗给人一种很庄严、严肃的感觉，不愧是国家首都必打卡的地方。<br><img lazyload src="/images/loading.svg" data-src="/2024/08/11/%E6%97%85%E6%B8%B8%E5%8D%9A%E5%AE%A2/%E5%8C%97%E4%BA%AC%EF%BC%88%E6%91%86%E7%83%82%E5%BC%8F%E6%97%85%E6%B8%B8%EF%BC%89/IMG_3382.jpg"></p>
<h2 id="最后总结"><a href="#最后总结" class="headerlink" title="最后总结"></a>最后总结</h2><p>旅游的时间太久了，最后还是会给人一种疲劳，不过我们一天一个旅游景点，在旅游过程中还是很养精蓄锐的，每次去到这些景点还是活气十足，人生中怎么说都要来一次首都参观，感受中国最大的魅力。</p>
]]></content>
      <categories>
        <category>旅游博客</category>
      </categories>
  </entry>
  <entry>
    <title>第四章-指令系统</title>
    <url>/2024/09/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p>指令：指示计算机执行某种操作的命令，是计算机运行的最小功能单位。<br>指令是由<em>操作码</em>和若干个地址码组成<br>零地址指令：</p>
<ul>
<li>不需要操作数，如空操作、停机、关中断等指令</li>
<li>堆栈计算机，另个操作数隐含存放在栈顶和次栈顶，计算结果压回栈顶<br>一地址指令：</li>
<li>只需要单操作数，如加1、减1、取反、求补等</li>
<li>需要两个操作数，但其中一个操作数隐含在某个寄存器<br>二、三地址指令：</li>
<li>需要两个操作数的算术运算、逻辑运算相关指令，需要访存4次</li>
<li>常用于需要两个操作数的算数运算、逻辑运算相关指令<br>四地址指令：需要访存4次<br>定长指令字结构：指令系统中所有指令的长度都相等<br>变长指令字结构：指令系统中各种指令的长度不等<br>定长操作码：指令系统中所有指令的操作码长度都相同<br>可变长操作码：指令系统中个指令的操作码长度可变</li>
</ul>
<h1 id="寻址方式"><a href="#寻址方式" class="headerlink" title="寻址方式"></a>寻址方式</h1><h2 id="指令寻址"><a href="#指令寻址" class="headerlink" title="指令寻址"></a>指令寻址</h2><ul>
<li>顺序寻址：PC + “1”-&gt;PC</li>
<li>跳跃寻址：有转移指令指出</li>
</ul>
<h2 id="数据寻址"><a href="#数据寻址" class="headerlink" title="数据寻址"></a>数据寻址</h2><p>确定本条指令的地址码指明的真实地址  </p>
<ul>
<li>直接寻址：指令字中的形式地址A就是操作数的真实地址EA，即EA=A，需要访存两次<ul>
<li>优点：简单，指令执行阶段进访问一次主存，不需专门计算操作数的地址</li>
<li>缺点：A的位数决定了该指令操作数的寻址范围。操作数的地址不易修改</li>
</ul>
</li>
<li>间接寻址：指令的地址字段给出的形式地址不是操作数的真正地址，而是操作数有效地址所在的存储单元的地址，也就是操作数地址的地址，需要访存3次<ul>
<li>优点：可扩大寻址范围（有效地址EA的位数大于形式地址A的位数）；便于编制程序（用间接寻址可以方便地完成子程序返回）</li>
<li>缺点：指令在执行阶段要多次访存（一次间接寻址需要两次访存，多次寻址需根据存储字地最高位确定几次访存）</li>
</ul>
</li>
<li>寄存器寻址：在指令字中直接给出操作数所在的寄存器编号，即EA=R，其操作数在由R所指地寄存器内。需访存1次<ul>
<li>优点：指令在执行阶段不访问主存，只访问寄存器，指令字短且执行速度快，支持向量/矩阵运算</li>
<li>缺点：寄存器价格昂贵，计算机中寄存器个数有限</li>
</ul>
</li>
<li>寄存器间接寻址：寄存器R中给出的不是一个操作数，而是操作数所在主存单元的地址。需访存2次<ul>
<li>特点：与一般间接寻址相比速度更快，但指令的执行阶段需要访问主存</li>
</ul>
</li>
<li>隐含寻址：不是明显的给出操作数的地址，而是在指令中隐含着操作数的地址。<ul>
<li>优点：有利于缩短指令字长</li>
<li>缺点：需增加存储操作数或隐含地址地硬件</li>
</ul>
</li>
<li>立即寻址：形式地址A就是操作数本身，又称为立即数，一般采用补码形式。需访存1次<ul>
<li>优点：指令执行阶段不访问主存，指令执行时间最短</li>
<li>缺点：A的位数限制了立即数的范围</li>
</ul>
</li>
<li>基址寻址：将CPU中基址寄存器（BR）的内容加上指令格式中的形式地址A，而形成操作数的有效地址，即EA=（BR）+A。（面向操作系统的，其内容由操作系统或管理程序确定）<ul>
<li>便于程序“浮动”，方便实现多道程序并发执行，可扩大寻址范围</li>
</ul>
</li>
<li>变址寻址：有效地址EA等于指令字中的形式地址A与变址寄存器IX的内容相加之和，即EA=（IX）+A，其中IX可为变址寄存器（专用），也可用通用寄存器作为变址寄存器。（面向用户的，变址寄存器的内容可有用户改变）</li>
<li>相对寻址：把程序计数器PC的内容加上指令格式中的形式地址A而形成操作数的有效地址，即EA=（PC）+A，其中A是相对于PC所指地址（相对于下一条指令）的位移量，可正可负，==补码表示。==<ul>
<li>某一段代码在程序内浮动时不用更改跳转指令的地址码</li>
</ul>
</li>
<li>堆栈寻址：操作数存放在堆栈中，隐含使用堆栈指针（SP）座位操作数地址</li>
</ul>
<h1 id="CISC和RISC"><a href="#CISC和RISC" class="headerlink" title="CISC和RISC"></a>CISC和RISC</h1><p>CISC：一条指令完成一个复杂的基本功能（x86架构，主要用于笔记本、台式机等）80-20规律：典型程序中80%的语句仅仅使用处理机中的20%的指令<br>RISC：一条指令完成一个基本“动作”；多条指令组合完成一个复杂的基本功能（ARM架构，主要用于手机、平板等）<br><img lazyload src="/images/loading.svg" data-src="/2024/09/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/CISC&RISC.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
  </entry>
  <entry>
    <title>肖八大题总结</title>
    <url>/2024/11/25/%E8%80%83%E7%A0%94%E6%94%BF%E6%B2%BB/%E8%82%96%E5%85%AB%E5%A4%A7%E9%A2%98%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="第一套"><a href="#第一套" class="headerlink" title="第一套"></a>第一套</h1><p>34.结合材料回答问题：  </p>
<p>材料1    </p>
<pre><code> 2024年3月5日，习近平在参加他所在的十四届全国人大二次会议江苏代表团审议时强调，要牢牢把握高质量发展这个首要任务，因地制宜发展新质生产力。面对新一轮科技革命和产业变革，我们必须抢抓机遇，加大创新力度，培育壮大新兴产业，超前布局建设未来产业，完善现代化产业体系。发展新质生产力不是忽视、放弃传统产业。要防止一哄而上、泡沫化，也不要搞一种模式。各地要坚持从实际出发，先立后破、因地制宜、分类指导，根据本地的資源案赋、产业基础、科研条件等，有选择地推动新产业、新模式、新动能发展，用新技术改造提升传统产业，积极促进产业高端化、智能化、绿色化。    
</code></pre>
<p>摘编自《人民日报》（2024年3月6日）<br>材料2      </p>
<pre><code>实现新时代新征程的目标任务，要把全面深化改革作为推进中国式现代化的根本动力。党的二十届三中全会审议通过的《中共中央关于进一步全面深化改革 推进中国式现代化的决定》，更加注重突出重点，突出体制机制改革，突出战略性、全局性重大改革，突出经济体制改革率引作用，凸显改革引领作用，为进一步全面深化改革、推进中国式现代化明确了重点任务、指出了主攻方向。  
既抓重要领域、重要任务、重要试点，又抓关键主体、关键环节、关键节点，以重点带动全局，是新时代全面深化改革的一个重要方法。党的十八大以来，以习近平同志为核心的党中央紧紧围绕发展这个第一要务来部署各方面改革，发挥经济体制改革牵引作用，实现改革由局部探索、破冰突围到系统集成、全面深化的转变，各领域基础性制度框架基本建立，全面深化改革取得历史性伟大成就。实践充分证明，坚持重点突破，在整体推进的基础上抓主要矛盾和矛盾的主要方面，努力做到全局和局部相配套、治本和治标相结合、渐进和突破相衔接，实现整体推进和重点突破相统一，才能做到纲举目张。    
</code></pre>
<p>摘编自《人民日报》（2024年7月23日）<br><strong>（1） 为什么要“因地制宜发展新质生产力”？</strong><br>马克思主义认为，矛盾具有普遍性，即矛盾无处不在、无时不有。矛盾又具有特殊性，即各个具体事物的矛盾、每个矛盾的各个方面在发展的不同阶段上各有其特点。矛盾的特殊性决定了事物的不同性质。只有具体分析矛盾的特殊性，才能认清事物的本质和发展规律，并采取正确的方法和措施去结局矛盾，推动事物的发展。<br>任何事物都是共性和个性的统一，也就是矛盾普遍性和特殊性的统一。就发展新质生产力而言，既要遵循新质生产力的普遍规律和共同特征，又要充分考虑各地、各产业的实际情况和特殊性，做到因地制宜。<br><strong>（2）运用马克思主义矛盾学说，分析为什么要“坚持重点突破”</strong><br>马克思主义认为，事物是由多种矛盾构成的。主要矛盾是矛盾体系中处于支配地位、对事物发展起决定作用的矛盾。事物的性质是由主要矛盾的主要方面所决定的。把主要矛盾和次要矛盾的辩证关系运用到实际工作中，就是要支持“两点论”和“重点论”的统一。这就要求我们在面对矛盾、解决矛盾时，既要有全局观，又要紧紧围绕主要矛盾和中心任务，优先解决主要矛盾，以此带动其他矛盾的解决。  </p>
<hr>
<p>35.结合材料回答问题：  </p>
<pre><code>发展新质生产力是推动高质量发展的内在要求和重要着力点。  
我提出新质生产力这个概念和发展新质生产力这个重大任务，主要考虑是：生产力是人类社会发展的根本动力，也是一切社会变迁和政治变革的终极原因。高质量发展需要新的生产力理论来指导，而新质生产力已经在实践中形成并展示出对高质量发展的强劲推动力、支撑力，需要我们从理论上进行总结、概括，用以指导新的发展实践。  
新质生产力的显著特点是创新，既包括技术和业态模式层面的创新，也包括管理和制度层面的创新。必须继续做好创新这篇大文章，推动新质生产力加快发展。  
摘自 习近平《在二十届中央政治局第十一次集体学习时的讲话》（2024年1月31日）  
</code></pre>
<p><strong>（1）如何理解“发展新质生产力是推动高质量发展的内在要求和重要着力点”</strong><br>高质量发展就是能够很好满足人民日益增长的美好生活需要的发展，是体现新发展理念的发展。与传统发展理论重点关注经济总量增长相比，高质量发展拓展了发展的内容和层次，对发展的质量和水平提出了更高的要求。实现高质量发展，必须优化经济结构，培育新的增长动力。新质生产力的形成和发展恰与之相契合。  </p>
<ol>
<li>新质生产力是创新起主导作用的生产力，摆脱了传统经济增长方式和生产力发展路径，具有高科技、高效能、高质量等特征，能够催生新产业、新模式、新动能，因而更有助于持续推动经济实现质的有效提升和量的合理增长。  </li>
<li>新质生产力以劳动者、劳动资料、劳动对象及其优化组合的跃升为基本内涵，以全要素生产率大幅提升为核心标志，因而有助于以数字技术为代表的新兴技术的广泛应用，加快科技兴国、网络强国建设步伐，并促进民生建设和推动全体人民共同富裕取得新的实质性进展。  </li>
<li>新质生产力本身就是绿色生产力，具有绿色化、低碳化和智能化的特点，因而能够在做强绿色制造业、发展绿色服务业、壮大绿色能源产业、构建绿色低碳循环经济体系等方面发挥重要作用。</li>
</ol>
<p><strong>（2）如何“继续做好创新这篇大文章，推动新质生产力加快发展”</strong>  </p>
<ol>
<li>大力推进技术创新：新质生产力主要由技术革命性突破催生而成。科技创新发挥重要作用。能够催生新产业、新模式、新动能,是发展新质生产力的核心要素。这就要求我们加强科技创新特别是原创性、颠覆性科技创新,加快实现高水平科技自立自强。</li>
<li>以科技创新推动产业创新：科技成果转化为现实生产力,表现形式为催生新产业、推动产业深度转型升级。</li>
<li>着力推进发展式创新：绿色发展是高质量发展的底色,新质生产力本身就是绿色生产力。</li>
<li>扎实推进体制机制创新：生产关系必须与生产力发展要求相适应。发展新质生产力,必须进一步全面深化改革,形成与之相适应的新型生产关系。</li>
<li>深化人才工作机制</li>
</ol>
<hr>
<p>36.结合材料回答问题:    </p>
<pre><code>75 年前,中华人民共和国成立,标志着中国人民站起来了,开启了中华民族伟大复兴的历史新纪元。75年来,我们党团结带领全国各族人民不懈奋斗,创造了经济快速发展和社会长期稳定两大奇迹,中国发生沧海桑田的巨大变化,中华民族伟大复兴进入了不可逆转的历史进程。以中国式现代化全面推进强国建设、民族复兴,是新时代新征程党和国家的中心任务。今天,我们庆祝共和国华诞的最好行动,就是把这一前无古人的伟大事业不断推向前进，  
我们坚信,创造了五千多年辉煌文明的中华民族,必将在新时代新征程上创造出新的更大辉煌,必将为人类和平和发展的崇高事业作出新的更大贡献!  
</code></pre>
<p>摘自，习近平《在庆祝中华人民共和国成立75周年招待会上的讲话》<br><strong>(1)如何理解“中华人民共和国成立，标志着中国人民站起来了，开启了中华民族伟大复兴的历史新纪元”?</strong><br>中华人民共和国的成立,彻底结束了旧中国半殖民地半封建社会的历史地位。彻底结束了极少数剥削者统治广大劳动人民的历史,彻底结束了旧中国一盘散沙的局面,彻底废除了列强强加给中国的不平等条约和帝国主义在中国的一切特权,实现了中国从几千年封建专制政治向人民民主的伟大飞跃,实现了中国高度统一和各民族空前团结。中国人从此站立起来了,中华民族发展进步从此开启了新纪元。<br><strong>(2)怎样把中国式现代化“这一前无古人的伟大事业不断推向前进”?</strong>  </p>
<ol>
<li>推进中国式现代化,必须坚持中国共产党领导。我们要始终坚持党总揽全局协调各方的领导核心作用,坚决维护党中央权威和集中统一领导,持之以恒推进全面从严治党,努力以党的自我革命引领伟大社会革命。</li>
<li>推进中国式现代化,必须坚持中国特色社会主义道路。我们要始终坚定道不变、志不改的决心和意志,深入贯彻党的基本理论、基本路线、基本方略,进一步全面深化改革、扩大开放,着力推动高质量发展,努力把国家发展进步的命运牢牢掌握在中国人民手中。</li>
<li>推进中国式现代化,必须坚持以人民为中心。我们要始终牢记党的根本宗旨和国家性质,牢记人民至上,一切为了人民,一切依靠人民,努力让全体人民在共同奋斗中共享改革发展成果。</li>
<li>推进中国式现代化,必须坚持走和平发展道路。我们要始终坚定站在历史正确的一边、站在人类文明进步的一边,高举和平、发展、合作、共赢旗帜,努力促进世界和平安宁和人类共同进步。</li>
</ol>
<hr>
<p>37.结合材料回答问题:    </p>
<p>材料 1    </p>
<pre><code>习近平在接见第 33 届奥运会中国体育代表团时指出,中国体育代表团的优异成绩,将中华体育精神和奥林匹克精神发扬光大,让中华民族精神和时代精神交相辉映,生动诠释了新时代中国精神。赛场上,大家牢记党和人民重托,“国家荣誉永远超过个人”“我的这块金牌献给伟大的祖国”等誓言掷地有声,展现了祖国至上、为国争光的赤子情怀,展现了顽强拼搏、自强不息的必胜信念,展现了团结协作、并肩作战的宝贵品质,展现了中国青年一代自信乐观、热情友好的阳光气质。你们让全世界看到了中华优秀传统文化的深厚积淀,看到了中国开放包容、昂扬进取的时代风貌,看到了中国人民的志气、锐气和底气。祖国和人民为你们骄傲,为你们点赞。  
    摘编自《人民日报》(2024年8月21日)  
</code></pre>
<p>材料 2  </p>
<pre><code>前几天,南开大学校园,首任校长张伯苓 1935年提出的“爱国三问”再次响起。“你是中国人吗?”“是!”  
“你爱中国吗?”“爱!”  
“你愿意中国好吗?”“愿意!愿祖国繁荣富强!”问得深沉,答得坚定,铿锵之声,久久回荡,引发网友共鸣。从风雨如磐走到阳光灿烂,中国早已今非昔比。但历史深处的发问和呐喊,仍能穿越时空,在人们心中掀起巨大波澜。  
习近平总书记指出,“爱国,是人世间最深层、最持久的情感”。对于中国人来说,爱国不关身份、无需理由,与生俱来、历久弥新。  
“在这片辽阔、美丽、富饶的土地上,各族人民都有一个共同家园,就是中国;都有一个共同身份,就是中华民族:都有一个共同名字,就是中国人;都有一个共同梦想,就是实现中华民族伟大复兴!”把真挚的爱国情转化为勇毅前行的力量,就没有抵达不了的远方,就没有实现不了的梦想。
    摘编自《人民日报》(2024年9月30日)  
</code></pre>
<p>材料 3  </p>
<pre><code>“人民卫士”巴依卡·凯力迪别克湿润了眼眶，  
一家三代在帕米尔高原守卫祖国边境,30多年间,他在“生命禁区”为巡逻队指向带路,行程3 万多公里,是巡逻队眼中的“活地图”。  
“家是塔县,国是中国。”边境线上每一条河流、每一道山沟,都留下他的足迹。“我倒下了还有我的儿子,儿子倒下了还有儿子的儿子!”爱国情,报国志,子子孙孙无穷匮也。  
    摘编自《人民日报》(2024年10月1日)  
</code></pre>
<p><strong>(1)中国早已今非昔比,“爱国三问”为什么“仍能穿越时空，在人们心中掀起巨大波澜”?</strong><br>爱国主义体现了人们对自己祖国的深厚感情,揭示了个人对祖国的依存关系,是人们对自己家园以及民族和文化的归属感、认同感,尊严感与荣誉感的统一,是调节个人与祖国之间关系的道德要求、政治原则和法律规范。爱国是最深层、最持久的情感,是每个公民应当遵循的最基本的价值准则,也是中华民族的优良传统。爱国主义是我们民族精神的核心,是中华民族团结奋斗、自强不息的精神纽带,是中华民族的民族心、民族魂,是中华民族最重要的精神财富。一部中华民族的发展史,就是一部中华儿女的爱国奋斗史。热爱祖国是立身之本,成才之基。今天,爱国主义仍然激励着一代又一代中华儿女为祖国发展繁荣而自强不息、不懈奋斗。<br><strong>(2)如何“把真挚的爱国情转化为勇毅前行的力量”?</strong><br>爱国主义是具体的、现实的。中国特色社会主义进入新时代,实现中华民族伟大复兴的中国梦是新时代爱国主义的鲜明主题。做新时代的忠诚爱国者,必须坚持爱国爱党爱社会主义相统一、维护祖国统一和民族团结、尊重和传承中华民族历史文化、坚持立足中国又面向世界。爱国,不能停留在口号上,而是要把自己的理想同祖国的前途、民族的命运紧密联系在一起,以实际行动体现对祖国的热爱、对党的热爱、对社会主义的热爱,扎根人民,奉献国家,以一生的真情投入、一辈子的顽强奋斗来践行爱国主义。  </p>
<hr>
<p>38.结合材料回答问题:  </p>
<p>材料 1  </p>
<pre><code>中非友好穿越时空、跨越山海、薪火相传。2000年中非合作论坛成立,在中非关系史上具有重要里程碑意义。24年来特别是新时代以来,中国同非洲兄弟姐妹们本着真实亲诚理念,携手前行。我们在世界百年变局中肩并肩、手拉手,坚定捍卫彼此正当权益;我们在经济全球化大潮中强筋骨、壮体魄,累累硕果惠及中非亿万百姓:我们在大灾大疫面前同甘苦、共拼搏,书写了一个个中非友好的感人故事:我们始终相互理解、彼此支持,树立了新型国际关系的典范。  
经过近 70年的辛勤耕耘,中非关系正处于历史最好时期。面向未来,我提议,将中国同所有非洲建交国的双边关系提升到战略关系层面,将中非关系整体定位提升至新时代全天候中非命运共同体!  
    摘自 习近平《携手推进现代化,共筑命运共同体--在中非合作论坛北京峰会开幕式上的主旨讲话》(2024年9月5日)  
</code></pre>
<p>材料 2  </p>
<pre><code>习近平主席在中非合作论坛北京峰会开幕式上发表主旨讲话,提出中非要携手推进公正合理、开放共赢、人民至上、多元包容、生态友好、和平安全的现代化。中非携手推进现代化六大主张得到非洲领导人广泛认同,形成了中非双方的政治共识,标志着中非对走向现代化的规律认识不断深化,对掌握自身命运的历史自觉不断增强,对引领“全球南方”加快现代化、推动世界现代化必将产生重大和深远影响。  
现代化道路上一个都不能少,一国都不能掉队。中非在现代化征程上携手同行,推进公正合理、开放共赢、人民至上、多元包容、生态友好、和平安全的现代化,必将引领“全球南方”现代化事业蓬勃发展,为推进世界现代化作出更大贡献。  
    摘编自《人民日报》(2024年9月11日)  
</code></pre>
<p><strong>(1)为什么要提议确定中非关系新定位?</strong><br>确定中非关系新定位,将中非关系整体定位提升,是应对百年未有之大变局的时代要求,是新形势下加强中非合作的现实需求,也是中非领导人和中非人民的共同愿望。首先,将中国同所有非洲建交国的双边关系提升到战略关系层面,表明非洲在中国外交中的重要性进一步提升,其战略含义更加突出。其次,将中非关系整体定位提升至新时代全天候中非命运共同体,中非关系水平不断提升,定位更加清晰,内涵更加丰富,彰显了中非28亿多人民在百年变局中风雨同舟、携手同行的坚定意志,书写了构建人类命运共同体宏伟事业的全新篇章。最后,中非合作不仅是新型国际关系的典范,也是南南合作的重要组成部分。将中非关系整体定位提升,既是中非关系不断深化的必然趋势,也是加强“全球南方”合作的必然选择。深化中非合作,以中非现代化引领“全球南方”现代化,必将共同推动世界走向和平、安全、繁荣、进步的光明前景。<br><strong>(2)中非携手推进现代化六大主张，为什么“必将引领’全球南方’现代化事业蓬勃发展，为推进世界现代化作出更大贡献”?</strong><br>实现现代化是世界各国不可剥夺的权利。现代化道路上一个都不能少,一国都不能掉队。中国和非洲人口占世界总人口的1&#x2F;3,没有中非的现代化,就没有世界的现代化。习近平主席提出的现代化六大主张  </p>
<ol>
<li>揭示现代化发展规律,为中非携手推进现代化提供正确理念引领。</li>
<li>契合中非共同发展需求,为中非携手推进现代化打开广阔合作空间</li>
<li>反映“全球南方”共同追求,将引领中非为推进世界现代化贡献更大力量。</li>
</ol>
<p>当前,“全球南方”正更加独立自主地探索现代化道路。中国式现代化为全球提供了一种全新的现代化模式,为更多国家独立自主探索适合自己的现代化道路增添了信心。公正合理、开放共赢、人民至上、多元包容、生态友好、和平安全,这些理念不仅是中非共同的追求,也反映广大“全球南方”国家的普遍共识,是推动实现和平发展、互利合作、共同繁荣的世界现代化的必然要求。</p>
<hr>
<h1 id="第二套"><a href="#第二套" class="headerlink" title="第二套"></a>第二套</h1><p>34.结合材料回答问题<br>材料1</p>
<pre><code>习近平总书记指出:“改革是由问题倒逼而产生,又在不断解决问题中得以深化。”《中共中央关于进一步全面深化改革 推进中国式现代化的决定》(党的二十届三中全会《决定》)强调“突出问题导向”。进一步全面深化改革,就要坚持目标导向和问题导向相结合,奔着问题去、盯着问题改。  
问题是事物矛盾的表现形式,解决问题就是解决矛盾。增强问题意识、坚持问题导向,就是承认矛盾的普遍性、客观性。回顾改革开放以来 40多年的历程,我国的改革正是由问题倒逼而产生,又在不断解决问题中得以深化。党的十八大以来,中国特色社会主义进入新时代,国内外环境发生极为广泛而深刻的变化,我国发展面临一系列突出矛盾和挑战,这些突出矛盾和挑战以一个个具体问题呈现。《中共中央关于全面深化改革若干重大问题的决定》(党的十八届三中全会《决定》)正是以当时亟待解决的重大问题为提领谋篇布局。习近平总书记在《关于(中共中央关于全面深化改革若干重大问题的决定〉的说明》中深刻阐明了问题意识、问题导向,强调“要有强烈的问题意识,以重大问题为导向,抓住关键问题进一步研究思考,着力推动解决我国发展面临的一系列突出矛盾和问题”“我们中国共产党人干革命、搞建设、抓改革,从来都是为了解决中国的现实问题”。党的十八届三中全会《决定》提出的 336 项重大改革举措,针对的就是不同领域的重大问题和顽瘴痼疾。正是因为抓住重大问题,全面深化改革取得历史性伟大成就。  
每个时代都有属于自己的问题。马克思指出:“世界史本身,除了用新问题来回答和解决老问题之外,没有别的方法。”在认识世界和改造世界的过程中,旧的问题解决了,新的问题又会产生。这决定了改革只有进行时、没有完成时。改革开放已走过千山万水,但仍需跋山涉水,前进道路上的问题只能通过深化改革来解决。当前和今后一个时期是以中国式现代化全面推进强国建设、民族复兴伟业的关键时期,我们仍然面临一系列亟待解决的问题。习近平总书记指出:“进一步全面深化改革要直面问题。强化问题意识,突出问题导向,围绕发展所需,顺应民心所向,着力解决制约高质量发展的堵点问题、影响社会公平正义的热点问题、民生方面的难点问题、党的建设的突出问题、各领域的风险问题,增强改革的针对性、实效性。”没有问题意识、问题导向,改革就没有针对性、实效性。习近平总书记在《关于(中共中央关于进一步全面深化改革、推进中国式现代化的决定》的说明》中阐明了在决定稿起草过程中重点把握的几点,其中一点就是“紧紧围绕推进中国式现代化、落实党的二十大战略部署来谋划进一步全面深化改革,坚持问题导向”。党的二十届三中全会《决定》提出的300多项重要改革举措,都是奔着问题去的,体现了鲜明的问题导向。  
    摘编自《人民日报》(2024年8月26日)  
</code></pre>
<p>材料 2  </p>
<pre><code>依靠改革开放增强发展内生动为力，是符合马克思主义基本原理的科学结论。经济发展的主体是人,是千千万万具有开拓创新精神的企业家和各行各业勤奋工作的劳动者,只有把企业家和劳动者的积板性、主动性、创造性充分调动起来、激发出来,经济增长才有了绵绵不绝的持久动力。这就需要通过不断深化改革开效,打破束缚人们开拓创新的体制机制障碍,为他们发挥聪明才智、积极创新创造提供良好的市场和社会环境。改革开放是提高要素投入质量和效益的“倍增器”,一旦把全社会的动力和活力调动起来,就能对经济发展起到难以估量的推动作用。内生动力的作用是持久的、强动的、源源不断的,与增加要素投入的一次性作用不同,今年起作用,明年乃至更长时期都会起作用。有效调动全社会内生动力,是实现长期高质量发展的治本之策。  
    摘编自《人民日报》(2024年1月31日)    
</code></pre>
<p><strong>(1)为什么要“强化问题意识，突出问题导向”?</strong><br>坚持问题导向,是习近平新时代中国特色社会主义思想的重要方法,是辩证唯物主义矛盾观点和矛盾分析方法的时代表达和时代升华。马克思主义认为,矛盾是普遍存在的。<strong>问题是时代的声音,是矛盾的集中体现,发现了问题就等于抓住了事物的矛盾。持问题导向,在世界观和方法论上就是要承认矛盾的普遍性、客观性;在工作和实践中就是要把解决实际问题作为打开工作局面的突破口。</strong><br><strong>(2)运用矛盾学说相关原理，分析为什么“有效调动全社会内生动力，是实现长期高质量发展的治本之策”</strong><br>矛盾是反映事物内部或事物之间对立统一关系的哲学范畴。对立和统一分别体现了矛盾的两种基本属性。矛盾的对立属性又称斗争性,矛盾的统一属性又称同一性。<strong>矛盾的同一性和斗争性相结合,构成了事物的矛盾运动,推动着事物的变化发展。</strong><br>事物内部各要素之间的同一性与斗争性是内部矛盾,事物之间的同一性与斗争性则是外部矛盾。<strong>内部矛盾是事物发展的内因,外部矛盾是事物发展的外因。内因是事物变化的据,外因是事物变化的条件,外因通过内因起作用</strong>。同其他任何事物一样,经济发展同样离不开内因和外因的共同作用。尽管在特定时段、特定情况下外因能发挥很大作用,但从整体、全局和长时段来看,<strong>内因的作用始终是根本性、第一位的</strong>。因此,只有有效调动起全社会的内生动力,才是实现长期高质量发展的治本之策。</p>
<hr>
<p>35.结合材料回答问题  </p>
<pre><code>(中央经济工作)会议认为,近年来,在党中央坚强领导下,我们有效统筹国内国际两个大局、统筹疫情防控和经济社会发展、统筹发展和安全,深化了新时代做好经济工作的规律性认识。必须把坚持高质量发展作为新时代的硬道理,完整、准确、全面贯彻新发展理念,推动经济实现质的有效提升和量的合理增长。必须坚持深化供给侧结构性改革和着力扩大有效需求协同发力发挥超大规模市场和强大生产能力的优势,使国内大循环建立在内需主动力的基础上,提升国际循环质量和水平。必须坚持依靠改革开放增强发展内生动力,统筹推进深层次改革和高水平开放,不断解放和发展社会生产力、激发和增强社会活力。必须坚持高质量发展和高水平安全良性互动,以高质量发展促进高水平安全,以高水平安全保障高质量发展,发展和安全要动态平衡、相得益彰。必须把推进中国式现代化作为最大的政治,在党的统一领导下,团结最广大人民,聚焦经济建设这一中心工作和高质量发展这一首要任务,把中国式现代化宏伟蓝图一步步变成美好现实。
    摘编自《人民日报》(2023年12月13日)  
</code></pre>
<p><strong>(1)如何理解”必须把坚持高质量发展作为新时代的硬道理”?</strong>  </p>
<ol>
<li><strong>必须把坚持高质量发展作为新时代的硬道理,是我国进入新发展阶段后的内在要求(从发展规律看)。</strong> 经济发展是一个螺旋式上升、阶梯式递进的过程,既要注重量,更要注重质,当量积累到一定阶段,必须转向质的提升,这是经济发展的一般规律。只有把坚持高质量发展作为新时代的硬道理,推动经济实现质的有效提升和量的合理增长,我国经济才能持续健康发展,如期实现全面建成社会主义现代化强国的目标。</li>
<li><strong>必须把坚持高质量发展作为新时代的硬道理,是应对纷繁复杂国际环境的内在要求(从发展环境看)。</strong> 防范化解各类风险隐患,积极应对外部环境变化带来的冲击挑战,关键在于办好自己的事。只有把坚持高质量发展作为新时代的硬道理,贯彻新发展理念,构建新发展格局,提升我国发展独立性、自主性、安全性,才能实现高质量发展和高水平安全良性互动,确保我国能经受住风高浪急甚至惊涛骇浪的重大考验。</li>
<li>**必须把坚持高质量发展作为新时代的硬道理,是满足人民日益增长的美好生活需要的内在要求(从发展目的看)**，经过改革开放几十年持续发展,人们吃饱穿暖的物质“部”基本满足,在富起来之后更加追求高品质生活。高品质生活与高质量发展紧密联系,离不开高质量发展的支撑。从这个意义上说,要解决人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾这一新时代我国社会主要矛盾,关键在于推动高质量发展。<br><strong>(2)为什么“必须把推进中国式现代化作为最大的政治”?</strong><br>必须把推进中国式现代化作为最大的政治”,这是党中央深刻把握世界潮流、历史大势、民心民意,对世界之问、时代之问、人民之问作出的坚定回答,是一个百年大党对新时代新征程自身历史使命和政治责任的深刻把握,为全党工作提供了根本遵循。  </li>
<li><strong>实现现代化是近代以来中国人民的不懈追求。</strong> 这个追求,凝结为中国人民最大的民心、最大的共识。民心就是最大的政治。在当代中国,中国式现代化就是最大的民心,就是最大的政治。</li>
<li><strong>建设社会主义现代化国家是我们党一以贯之的奋斗目标。</strong> 把推进中国式现代化作为最大的政治,与我们党一以贯之的奋斗目标是内在统一、紧密联系的。</li>
<li><strong>中国式现代化是强国建设、民族复兴的康庄大道。</strong> 这决定了我们必须把推进中国式现代化作为最大的政治。我们要以“最大的政治”的清醒和坚定沿着中国式现代化道路笃定前行。</li>
<li><strong>中国式现代化体现了中国共产党人对国情民意的深刻把握,能够凝聚起当代中国最广泛的社会合力。</strong> 中国式现代化涵盖了最广泛的社会诉求、最多样的人群和思想动态,体现了海内外所有中华儿女的共同心愿,也就是最大的政治。只有紧紧围绕中国式现代化开展各方面工作,才能在党的领导下形成最大同心圆,团结最广大人民,调动一切积极因素,为强国建设、民族复兴伟业而共同奋斗。</li>
</ol>
<hr>
<p>36.结合材料回答问题:  </p>
<pre><code>人民代表大会制度是中国共产党领导中国人民艰辛探索长期奋斗的成果,是从中国土壤中生长起来的全新政治制度,是人类政治制度史上的伟大创造。从新民主主义革命时期探索并提出人民代表大会制度的基本构想,到社会主义革命和建设时期建立并实行人民代表大会制度,到改革开放和社会主义现代化建设新时期不断巩固和完善人民代表大会制度,到中国特色社会主义新时代推动人民代表大会制度更加成熟、更加定型,人民代表大会制度走过了不平凡的历程已经牢牢扎根中国大地,深深融入中国特色社会主义伟大实践。  
70年来,在党的领导下,人民代表大会制度有效保证了我国始终沿着社会主义道路前进,为创造经济快速发展和社会长期稳定两大奇迹提供了重要制度保障,展现出显著政治优势。  
实践证明,人民代表大会制度是符合我国国情和实际、体现社会主义国家性质、保证人民当家作主的好制度,是能够有效凝聚全体人民力量一道推进中国式现代化的好制度,具有强大生命力和显著优越性。  
党的二十大就发展全过程人民民主、保障人民当家作主作出全面部署,党的二十届三中全会就健全全过程人民民主制度体系作出具体安排。我们要围绕发展全过程人民民主,坚持好、完善好、运行好人民代表大会制度,为实现新时代新征程党和人民的奋斗目标提供坚实制度保障。  
    摘自 习近平《在庆祝全国人民代表大会成立70周年大会上的讲话》  
</code></pre>
<p><strong>(1)怎样理解人民代表大会制度是全新政治制度,”是人类政治制度史上的伟大创造”?</strong><br>70年来,在党的领导下,人民代表大会制度有效保证了我国始终沿着社会主义道路前进,展现出显著政治优势。<strong>第一,具有坚持中国共产党领导、保证党领导人民依法有效治理国家的显著优势</strong>,这有效克服了旧中国那种群龙无首、一盘散沙和党争纷沓、相互攻讦的现象;第二,<strong>具有践行全过程人民民主,保障人民当家作主的显著优势</strong>,这有效克服了一些国家那种人民形式上有权、实际上无权和选举时漫天许诺、选举后无人过问的现象;<strong>第三具有贯彻民主集中制</strong>,保证国家政治生活既充满活力又安定有序的显著优势,这有效克服了一些国家那种相互掣肘、内耗严重和议而不决、决而不行的现象;第四,<strong>具有保障全面依法治国,实现国家各方面工作法治化的显著优势</strong>,这有效克服了一些国家那种无法可依、有法不依和以权代法、以权压法的现象;<strong>第五,具有维护国家统一、保障国家长治久安的显著优势</strong>,这有效克服了一些国家那种各自为政、尾大不掉和民族隔阂、民族冲突的现象。人民代表大会制度是全新政治制度,是人类政治制度史上的伟大创造。<br><strong>(2)如何“坚持好、完善好、运行好人民代表大会制度，为实现新时代新征程党和人民的奋斗目标提供坚实制度保障”?</strong>  </p>
<ol>
<li>充分发挥人大保证全面有效实施宪法法律的重要作用。</li>
<li>充分发挥人大在立法工作中的主导作用。推进科学立法、民主立法、依法立法,必须坚持和完善党委领导、人大主导、政府依托、各方参与的立法工作格局。</li>
<li>充分发挥人大监督在党和国家监督体系中的重要作用。</li>
<li>充分发挥人大在密切同人民群众联系中的带头作用。</li>
</ol>
<hr>
<p>37.结合材料回答问题:<br>材料 1  </p>
<pre><code>天地英雄气,千秋尚凛然。今年是中华人民共和国成立 75 周年。9月30 日是国家设立的烈士纪念日。连日来,各地举行多种形式的纪念活动,寄托对英烈的深切缅怀和崇高敬意。  
习近平总书记指出:“我们一定要牢记革命先辈为中国革命事业付出的鲜血和生命,牢记新中国来之不易。”“一个有希望的民族不能没有英雄,一个有前途的国家不能没有先锋。”    
十年来,每年这一天,习近平总书记等党和国家领导人都会出席向人民英雄敬献花篮仪式全国 2000多个县级以上地方人民政府广泛举办烈士公祭仪式,无数人民群众到烈士纪念设施献花、缅怀英烈。  
每一位英雄烈士,都是一座精神丰碑;每一次对英烈的致敬,都是一次精神洗礼。  
如今,每逢烈士纪念日、中国人民抗日战争胜利纪念日、南京大屠杀死难者国家公祭日等节点,各地干部群众不约而同前往烈士纪念设施纪念英烈。人们在致敬英烈中传承红色基因,在抚今追昔中坚定前行意志。  
    摘编自《人民日报》(2024年9月30日)  
</code></pre>
<p>材料 2  </p>
<pre><code>《烈士类扬条例》专门用一章(第六章)五条(从第五十三条到第五十七条)的篇幅规定“烈士事迹和精神的宣传弘扬”，其中第五十三条的内容为:  
加强烈士事迹和精神的宣传、教育。各级人民政府应当把宣传、弘扬烈士事迹和精神作为社会主义精神文明的重要内容，加强爱国主义、集体主义、社会主义教育。  
机关、团体、企业事业单位和其他组织应当采取多种形式纪念烈士,学习、宣传烈士事迹和精神。  
第五十五条的内容为：
教育行政部门应当以青少年学生为重点,将烈士事迹和精神宣传教育纳入国民教育体制和精神。第五十五条的内容为:系。各级各类学校应当加强烈士事迹和精神教育,定期组织学生瞻仰烈士纪念设施。提倡青少年入队入团仪式、开学教育、主题团队日活动等在烈士纪念设施举行。  
文化、新闻出版、广播电视、电影、网信等部门应当鼓励和支持以烈士事迹为题材、弘扬烈士精神的优秀文学艺术作品、广播电视和网络视听节目以及出版物的创作生产和宣传推广。  
广播电台、电视台、报刊出版单位和网络视听平台以及其他互联网信息服务提供者应当通过播放或者刊登烈士题材作品、发布公益广告、开设专栏等方式,广泛宣传烈士事迹和精神。
    摘编自《人民日报》(2024年9月30日)  
</code></pre>
<p><strong>(I)为什么要缅怀英烈事迹、传承英烈精神?</strong><br>伟大时代呼唤英雄、造就英雄。英雄辈出,党和人民事业就会兴旺发达、长盛不衰。崇尚英雄才会产生英雄,争做英雄才能英雄辈出。国家强盛、民族复兴需要物质文明的积累,更需要精神文明的升华。缅怀英烈事迹、传承英烈精神,都是对世界观、人生观、价值观的洗礼,会转化成爱国情、强国志、报国行的内生动力。<strong>在烈士纪念日以多种形式追思先烈,致敬英雄,有助于进一步增强历史自信、激扬历史主动精神,让爱国主义和革命英雄主义成为引人向前,催人奋斗的强大精神动力。</strong> 当前,我国正处于以中国式现代化全面推进强国建设、民族复兴伟业的关键时期。全党全国各族人民要以英雄模范为榜样,团结奋进、砥砺前行,汇聚起共襄强国盛举的磅礴力量。<br><strong>(2)应当怎样以英雄模范为榜样，团结奋进、砥砺前行，汇聚起共襄强国盛举的磅礴力量</strong> </p>
<ol>
<li><strong>要胸怀强国之志。</strong> 以国家富强为念,以人民幸福为盼,忠心爱国,矢志报国,把个人小我融入国家大我,在为国尽责、为民服务中实现个人价值、展现人生风采。</li>
<li><strong>要锤炼强国之技。</strong> 顺应时代发展新要求,学习新知识、掌握新技能、练就真本领,干一行爱一行,钻一行专一行,做到敬业勤业精业,努力成为善于干事创业的岗位能手、行家里手。</li>
<li><strong>要勇建强国之功。</strong> 以只争朝夕的历史主动、主人翁的责任担当,锐意进取、迎难而上,追求卓越、精益求精,在平凡岗位上创造不平凡的业绩,在破解发展难题、攻克改革难关维护社会和谐稳定上不断有所作为。</li>
</ol>
<hr>
<p>38.结合材料回答问题:  </p>
<pre><code>70年前,和平共处五项原则正式发表,成为国际关系史上的伟大创举,具有划时代的重大意义。今天,我们在这里隆重集会,纪念和平共处五项原则发表70周年,就是要在新形势下弘扬和平共处五项原则,携手构建人类命运共同体,为人类文明进步提供强劲动力。和平共处五项原则的创立是时代的呼唤、历史的选择。  
和平共处五项原则诞生于亚洲,迅速走向世界。  
历经70年岁月洗礼,和平共处五项原则已经成为国际社会的共同财富,值得悉心珍视、继承、弘扬。  
历史的接力一棒接着一棒向前奔跑,人类进步事业在对时代之问的回答中一程接着一程向前迈进。70年前,面对热战的惨痛浩劫和冷战的分裂对峙,那一代人为了维护和平、捍卫主权给出了和平共处五项原则的历史答案。这个答案经受住了国际风云变幻的考验，不仅没有褪色过时,反而焕发出更加引人注目的光芒。70年后的今天,面对“建设一个什么样的世界、如何建设这个世界”的重大课题,中国又给出了构建人类命运共同体这个时代答案。现在,构建人类命运共同体已经从中国倡议扩大为国际共识,从美好愿景转化为丰富实践,有力推动世界走向和平、安全、繁荣、进步的光明前景。  
    摘自 习近平《在和平共处五项原则发表70周年纪念大会上的讲话》  
</code></pre>
<p><strong>(1)为什么说“和平共处五项原则已经成为国际社会的共同财富，值得悉心珍视、继承、弘扬”?</strong><br>70年来,和平共处五项原则跨越时空、超越隔阂,经久愈韧、历久弥新,成为开放包容、普遍适用的国际关系基本准则和国际法基本原则,为人类进步事业作出了不可磨灭的历史贡献。  </p>
<ol>
<li>和平共处五项原则为国际关系和国际法治树立了历史标杆。</li>
<li>和平共处五项原则为不同社会制度国家建立和发展关系提供了正确指导</li>
<li>和平共处五项原则为发展中国家团结合作、联合自强汇聚了强大合力。</li>
<li>和平共处五项原则为国际秩序改革和完善贡献了历史智慧。</li>
</ol>
<p><strong>(2)如何理解“构建人类命运共同体这个时代答案”是新形势下对和平共处五项原则最好的传承、弘扬、升华?</strong><br>构建人类命运共同体理念与和平共处五项原则一脉相承,都根植于亲仁善邻、讲信修睦、协和万邦的中华优秀传统文化,都彰显了中国外交自信自立、坚持正义、扶弱扬善的精神风骨,都体现了中国共产党人为人类作出新的更大贡献的世界情怀,都展现了中国坚持走和平发展道路的坚定决心。构建人类命运共同体理念是新形势下对和平共处五项原则最好的传承、弘扬、升华。这一理念<strong>树立了平等和共生的新典范;开辟了和平和进步的新境界;丰富了发展和安全的新实践。</strong></p>
<hr>
<h1 id="第三套"><a href="#第三套" class="headerlink" title="第三套"></a>第三套</h1><p>34.结合材料回答问题:<br>材料1：</p>
<pre><code>产业创新的澎湃动能,来自科技创新这个驱动引学。上世纪80年代,“星期天工程师”在浙江一些地区兴起,企业纷纷邀请上海的高技术人员传授先进技术,奠定了当地制造业的基础。同样是这个思路,江苏某市坚持产学研紧密合作,近年来与多所高校共建技术转移中心,大力促进科技成果转化,不但推动纺织、钢铁等传统产业推陈出新,也助力风电光伏、集成电路等新兴产业加快发展。  
可见,产业发展离不开“学”和“研”的基础支撑。如果把产业比作大树,科研探索就像根脉加快发展。根扎得越深,树长得越茁壮。反过来,“学”和“研”也离不开产业这个“应用场”。只有把科研成果从实验室“搬”到生产线,才能检验其应用价值,更好指导下一步科研实践,技术和产品也只有完成从“书架”到“货架”的转变,才能真正惠及千行百业,形成推动经济社会发展的动力。  
    摘编自《人民日报》(2024年1月17 日)  
</code></pre>
<p>材料2  </p>
<pre><code>涮完火锅、做完炸鸡剩下的餐饮废油,也就是俗称的地沟油,能有什么大用处?其中一个答案是:成为航空燃料。
前不久,国产大飞机加注我国自主研发的生物航煤试飞成功。中国石化自主研发的这一产品,将提炼后的餐饮废油以40%的比例与普通航空燃料调和,各项物性参数均与传统石油基燃料一致,符合国家标准及行业要求,对可持续航空燃料的推广应用具有示范意义。
科技兴则民族兴,科技强则国家强。我国科技事业发展取得了长足进步,但在勇攀世界科技高峰的征途中,在加快从跟跑向并跑领跑转变的过程中,许多难题没有现成的答案,必须发挥更大的想象力去创新。聚焦关键领域和重大需求,勇闯“无人区”,下好“先手棋”,全面提升科技创新能力,定能不断抢占科技竞争和未来发展制高点,为全面建设社会主义现代化国家提供有力支撑。
摘编自《人民日报》(2024年7月23日)  
</code></pre>
<p><strong>(1)分析“学”和“研”与产业发展的关系所体现的认识世界和改造世界的辩证关系。</strong><br>认识世界,就是主体能动地反映客体,获得关于事物的本质和发展规律的科学知识,探索和掌握真理;改造世界,就是人类按照有利于自己生存和发展的需要,改变事物的现存形式,创造自己的理想世界和生活方式。<strong>认识世界和改造世界是相互依赖、相互制约的辩证统一关系。</strong> 一方面,认识世界有助于改造世界,正确认识世界是有效改造世界的必要前提;另一方面,人们只有在改造世界的实践中才能不断地深化、拓展对世界的正确认识。认识世界和改造世界的统一,决定了理论与实践必须相结合。因此,产业发展必须与“学”和“研”密切结合起来,才能做到以科技创新推动产业创新。<br><strong>(2)”必须发挥更大的想象力去创新”对我们提高创新思维能力有何启示?</strong><br><strong>创新思维能力是对常规思维的突破,是破除迷信,超越陈规,善于因时制宜、知难而进、开拓创新的能力。创新思维能力意味着不墨守成规,在求新、求变中创造性地提出问题和解决问题。</strong> 当今世界,知识经济飞速发展,创新已经成为社会进步的主导力量与重要源泉,只有善于开发和运用创新思维能力,才能紧跟时代的步伐,更好地回应和解决时代发展所提出的问题。培养和提高创新思维能力,要求我们有敢为人先的锐气,打破迷信经验、迷信本本迷信权威的惯性思维,摒弃不合时宜的旧观念,以思想认识的新飞跃打开工作的新局面。</p>
<hr>
<p>35.结合材料回答问题:<br>材料1  </p>
<pre><code>习近平总书记 2024年4月22 日至24日在重庆考察时强调:“中国式现代化,民生为大。党和政府的一切工作,都是为了老百姓过上更加幸福的生活。希望各级党委和政府都能为解决民生问题投入更多的财力物力,每年办一些民生实事,不断增强人民群众的获得感幸福感安全感。
摘编自《人民日报》(2024年4月25日)
</code></pre>
<p>材料 2  </p>
<pre><code>进一步全面深化改革的原则。总结和运用改革开放以来特别是新时代全面深化改革的宝贵经验,贯彻以下原则:坚持党的全面领导,坚定维护党中央权威和集中统一领导,发挥党总揽全局、协调各方的领导核心作用,把党的领导贯穿改革各方面全过程,确保改革始终沿着正确政治方向前进:坚持以人民为中心,尊重人民主体地位和首创精神,人民有所呼、改革有所应,做到改革为了人民、改革依靠人民、改革成果由人民共享:坚持守正创新,坚持中国特色社会主义不动摇,紧跟时代步伐,顺应实践发展,突出问题导向,在新的起点上推进理论创新、实践创新、制度创新、文化创新以及其他各方面创新;坚持以制度建设为主线,加强顶层设计、总体谋划,破立并举先立后破,筑牢根本制度,完善基本制度,创新重要制度;坚持全面依法治国,在法治轨道上深化改革、推进中国式现代化,做到改革和法治相统一,重大改革于法有据、及时把改革成果上升为法律制度;坚持系统观念,处理好经济和社会、政府和市场、效率和公平、活力和秩序、发展和安全等重大关系,增强改革系统性、整体性、协同性。
摘自《中共中央关于进一步全面深化改革 推进中国式现代化的决定》
</code></pre>
<p><strong>(1)为什么说“中国式现代化，民生为大”?</strong>  </p>
<ol>
<li><strong>这是由马克思主义唯物史观决定的。</strong> 马克思主义唯物史观告诉我们,人民群众是社会物质财富和精神财富的创造者,也是社会变革的决定力量,在推动历史发展过程中起着决定性作用。民生为大,不仅体现了社会发展过程的“合规律性”,也体现了社会发展趋向的“合目的性”,确保社会发展既合乎客观规律又满足人民群众多方面的需要。</li>
<li>这是由我们党的性质察旨、初心使命决定的。党的根本宗旨是全心全意为人民服务、初心使命是为我国人民谋幸福、为中华民族谋复兴。党的性质宗旨、初心使命,决定人民对美好生活的向往就是我们的奋斗目标,<strong>增进民生福祉是我们坚持立党为公、执政为民本质要求。</strong> 民生为大,彰显了我们党以人民为中心的执政理念。</li>
<li><strong>这是由改革本身的目的决定的。</strong> 我们党推进全面深化改革的根本目的,就是要推进社会公平正义,让改革发展成果更多更公平惠及全体人民。进一步全面深化改革要以促进社会公平正义、增进人民福社为出发点和落脚点。这就决定了改革必须始终坚持以人民为中心、倾听人民呼声、回应人民期待。</li>
<li><strong>在发展中保障和改善民生是中国式现代化的重大任务。</strong> 增进民生福祉是发展的根本目的</li>
</ol>
<p><strong>(2)在进一步全面深化改革必须贯彻的原则中，为什么要把坚持党的全面领导摆在</strong><br><strong>首位?</strong>  </p>
<ol>
<li>这是改革开放以来特别是新时代全面深化改革经验的深刻总结。改革开放40多年伟大实践深刻揭示,正是因为始终坚持党的领导,我们才能实现伟大历史转折、开启改革开放新时期和中华民族伟大复兴新征程,才能成功应对一系列重大风险挑战、克服无数艰难险阻,才能确保全党全国在改革开放问题上统一思想、统一意志、统一行动。  </li>
<li>中国共产党领导是中国特色社会主义最本质的特征,是中国特色社会主义制度的最大优势,是中国式现代化的本质要求。坚持党的全面领导,是我国改革开放成功推进的根本保证。在当代中国,中国共产党是最高政治领导力量,处于国家治理体系的核心位置,在国家各项事业中发挥总揽全局、协调各方的领导核心作用。只有始终坚持党的领导,进一步全面深化改革才能保持正确方向、坚强定力、强大合力,才能行稳致远、取得成功。</li>
</ol>
<hr>
<p>36.结合材料回答问题:  </p>
<pre><code>1949年9月,在中国人民争取民族独主和人民解放运动取得历史性伟大胜利之际,中国人民政治协商会议第一届全体会议召开,开启了中国共产党领导各党派团体和各族各界人士协商建国、共创伟业的新纪元,标志着中国共产党领导的多党合作和政治协商制度正式确立。75 年来在中国共产党领导下,人民政协始终坚持团结和民主两大主题,服务党和国家中心任务,在各个历史时期都做了大量卓有成效的工作，发挥了重要作用。
75 年来的实践充分证明,人民政协是中国共产党把马克思列宁主义统一战线理论、政党理历史时期都做了大量卓有成效的工作,发挥了十分重要的作用。论民主政治理论同中国具体实际相结合、同中华优秀传统文化相结合的伟大成果,是中国共产党领导各民主党派、无党派人士、人民团体和各族各界人士在政治制度上进行的伟大创造,具有深厚的文化基础、理论基础、实践基础,具有鲜明中国特色和显著政治优势,是科学、有效、管用的制度安排,在人类政治制度发展史上具有独特政治价值。
协商民主是全过程人民民主的重要组成部分,是我国社会主义民主政治的特有形式和独特优势,是党的群众路线在政治领域的重要体现。新时代新征程,要按照中共二十大和二十届三中全会部署,不断推动协商民主广泛多层制度化发展。
摘自 习近平《在庆祝中国人民政治协商会议成立75周年大会上的讲话》
</code></pre>
<p><strong>(1)如何理解人民政协“在人类政治制度发展史上具有独特政治价值”?</strong>  </p>
<ol>
<li><strong>人民政协作为中国共产党领导的政治组织</strong>,由具有共同政治基础和奋斗目标的各党派团体和各族各界人士参加,开展政治协商、民主监督、参政议政,<strong>有利于完善人民当家作主的制度体系</strong>,更好保障最广大人民整体利益、根本利益、长远利益。</li>
<li><strong>人民政协作为最广泛的爱国统一战线组织</strong>,坚持大团结大联合,坚持正确处理一致性和多样性的关系,<strong>有利于最大限度把全体中华儿女的智慧和力量汇聚起来</strong>,形成心往一处想、劲往一处使的生动局面。</li>
<li><strong>人民政协作为社会主义协商民主的重要渠道和专门协商机构</strong>,秉持有事好商量,众人的事情由众人商量的理念,为各党派团体和各族各界人士有序政治参与和利益表达提供了制度化平台,<strong>有利于促进科学决策,有效施策,提升国家治理效能</strong>。人民政协已经并将不断展现出旺盛生命力,在人类政治制度发展史上具有独特政治价值。</li>
</ol>
<p><strong>(2)新时代新征程，如何“不断推动协商民主广泛多层制度化发展”?</strong>  </p>
<ol>
<li>始终坚持正确政治方向。要坚持党的全面领导,坚定不移走中国特色社会主义政治发展道路,全面贯彻发展全过程人民民主的要求。</li>
<li>统筹完善协商民主体系。</li>
<li>着力健全协商民主机制。</li>
<li>不断拓展协商方式和平台。这是提高协商民主质量的重要基础</li>
<li>积极营造良好氛围和条件</li>
</ol>
<hr>
<p>37.结合材料回答问题:  </p>
<pre><code>当前,我国正处于以中国式现代化全面推进强国建设、民族复兴伟业的关键时期。全党全国各族人民要以英雄模范为榜样,团结奋进、砥砺前行,汇聚起共襄强国盛举的磅礴力量。
要胸怀强国之志。以国家富强为念,以人民幸福为盼,忠心爱国、矢志报国,把个人小我融入国家大我,在为国尽责、为民服务中实现个人价值、展现人生风采。
摘自一习近平《在国家助章和国家荣誉称号颁授仪式上的讲话》(2024年9月29日
</code></pre>
<p><strong>(1)为什么要“把个人小我融入国家大我”?</strong><br>“把个人小我融人国家大我”,实质上就是坚持个人理想与社会理想的有机结合,坚持个人奋斗目标与国家,民族的奋斗目标相统一,把个人理想融入社会理想之中,在为实现社会理想而奋斗的过程中实现个人理想。  </p>
<ol>
<li><strong>个人理想以社会理想为指引</strong>。从根本上说,个人理想是由社会理想规定的。在整个理想体系中,社会理想是最根本、最重要的,个人理想则从属于社会理想。个人理想的确立要以社会理想为导向,个人理想的实现依赖于社会理想的指引。个人理想只有同国家的前途、民族的命运相结合,个人的向往和追求只有同社会的需要和人民的利益相一致,才可能变为现实。</li>
<li><strong>社会理想是个人理想的汇聚和升华。</strong> 社会理想归根到底要靠全体社会成员的共同努力来实现,并具体体现在每个社会成员为实现个人理想而进行的活生生的实践中。</li>
<li><strong>得其大者可以兼其小。</strong> 个人只有把人生理想融人国家和民族的事业中,才能最终成就一番事业。青年对自己未来生活的追求和向往,不能脱离当代中国的社会现实。当代青年要在实现社会理想的过程中努力实现个人理想。<br>(也可以从人生目的、自我价值与社会价值的角度作答)<br><strong>(2)当代青年应当如何“在为国尽资、为民服务中实现个人价值、展现人生风采”</strong><br>当代青年要立大志、明大德、成大才、担大任,努力成为堪当民族复兴重任的时代新人,把自己的小我融入祖国的大我、人民的大我之中,更好地实现人生价值、升华人生境界,成就出彩人生。  </li>
<li><strong>与历史同向</strong>。要正确认识世界和中国的发展大势,尊重并顺应历史的选择和人民的选择,增强历史自觉,坚定历史自信,与历史同步伐,与时代共命运。</li>
<li><strong>与祖国同行</strong>。青年只有自觉将人生目标同国家和民族的前途命运紧紧联系在一起,才能最大限度地实现人生价值。要正确认识国家和民族赋予的历史使命和时代责任,坚定信心,锐意进取,奋进新征程,建功新时代。</li>
<li><strong>与人民同在</strong>。人民群众是历史的创造者,是国家的主人。要在为人民群众服务、实现人民群众利益的过程中实现人生价值。只有走与人民群众相结合的道路,向人民群众学习,从人民群众中汲取营养,做中国最广大人民群众根本利益的维护者,才能使自己的人生大有作为。</li>
</ol>
<hr>
<p>38.结合材料回答问题:  </p>
<pre><code>中央外事工作会议指出,要针对当今世界面临的一系列重大问题,凝聚更广泛国际共识,提出更有效解决方案,增强构建人类命运共同体的实践性和指导性,有必要倡导平等有序的世界多极化。
目前国际社会多数成员,无论大国小国,都主张世界应多极化,都不赞同单边主义和强权政治,都认为不能重走阵营对抗、零和博弈的老路,更不能重蹈战争冲突的覆辙。但对于世界大变局之下多极化进程如何发展,各国如何参与和推动,尚未形成共识。在这一历史转折关头,中国的倡议为世界多极化指明了方向。
摘编自《人民日报》(2024年1月1日)
</code></pre>
<p><strong>(1)中国为什么要“倡导平等有序的世界多极化”?</strong>  </p>
<ol>
<li><strong>多极化是当今世界的基本趋势</strong>。百年未有之大变局加速演进,国际力量对比深刻调整,“全球南方”声势卓然壮大,深刻影响世界历史发展进程。冷战结束30多年来,世界加快走向多极化,各国各地区都希望通过自身发展,在国际格局中拥有一席之地。世界应多极化是目前国际社会多数成员的主张。</li>
<li><strong>多极化是历史发展的大势,也是历史进步的方向</strong>。相较于单极世界、两极世界,多极化世界更能反映国际社会对公道正义和合作共赢的共同追求,更契合维护世界和平发展的现实需要,更有助于全球治理体系的改革完善。</li>
</ol>
<p><strong>(2)中国的倡议如何为世界多极化指明了方向?</strong><br><strong>中国主张世界多极化应当是平等的</strong>,就是国家不分大小强弱都应在多极化进程中平等参与、享受权利、发挥作用,切实推进国际关系民主化,增强广大发展中国家的代表性和发言权,反对霸权主义和强权政治。<strong>中国主张世界多极化应当是有序的</strong>,就是坚定维护以联合国为核心的国际体系、以国际法为基础的国际秩序、以联合国宪章宗旨和原则为基础的国际关系基本准则,秉持真正的多边主义,反对阵营化、碎片化、无序化。<br>倡导平等有序的世界多极化,契合了大多数国家和各国民众的普遍诉求,为国际社会从变乱交织走向长治久安指明了方向,为推动构建公正合理的全球治理体系、推动构建人类命运共同体提供了重要路径。</p>
<hr>
<h1 id="第四套"><a href="#第四套" class="headerlink" title="第四套"></a>第四套</h1><p>34.结合材料回答问题:<br>材料1</p>
<pre><code>在妥善处理了一起长达15年的房屋买卖纠纷后,办案法官在札记中写道:“在送达的路上、在与当事人的促滕长谈中、在庄严的法庭上,无论是调解还是裁判,我们始终坚持实质性化解矛盾纠纷，以“如我在诉”的意识办好每一个案件
对于司法人员而言,“如我在诉”不仅仅是境界情怀,更是责任担当。通过设身处地站在当事人角度去看问题,将心比心、换位思考,更能做到法理情相融,更能推动实现“案结事了”。
“如我在诉”就要站稳群众立场、走好群众路线。司法连着民生,每个案件都关乎人民群众的切身利益。“全国模范法官”鲍卫忠每办一个案件就会多一个朋友,老百姓感慨他说话总是议到心窝子里;“双百政法荚模”王勇“从公诉席上走下来,站在被害人,甚至是被告人的立场去思考他们的诉求”,引导老百姓了解法律、了解司法……广大法官、检察官们坚持“如我在诉”,就是要牢固树立以人民为中心的发展思想,紧盯群众急难愁盼,用心用情化解每一起矛盾、办好每一个案件,不断提升人民群众的司法获得感和满意度。
“如我在诉”就要讲究方式方法,做到法、理、情相统一。办好每个案件、实质性化解矛盾纠纷,不能只靠冰冷的法条堆砌,更应兼具温暖良善的安抚。司法人员不仅仅是客观地判定事实准确地适用法律,还要将自己情景代入,走进当事人的内心,引导当事人敞开心扉,充分表达自身诉求,于细微处让群众感受到良法善治的温度,既解“法结”更解“心结”。在一些案件的办理中不妨尝试“败方思维”,于法有据、融情于理,做实做细判前释明、判后答疑、文书说理、信访接待让司法既有力度又有温度。
摘编自《人民日报》(2024年2月22日)
</code></pre>
<p>材料2  </p>
<pre><code>不少领导干部感慨,“坐办公室里都是问题,走进基层就都是办法”。这是因为人民群众身处实践最前沿,对实践变化感知最敏感、感受最深切,也最聪慧,只要来到基层、走到人民群众中去,很多百思不得其解的问题就能豁然开朗、找到答案。县域经济该如何发展?当年在福建工作期间,习近平同志“七下晋江”,总结概括出“六个始终坚持”和“正确处理好五大关系”为主要内容的“晋江经验”。闽东如何实现振兴?习近平同志三次到周宁县的黄振芳家庭林场了解情况称赞“为我们发展林业提供了一条思路”。我们各项工作实践要走好群众路线,广泛倾听人民群众的声音,决不能闭门造车、坐而论道、流于空想,更不能脱离群众的实际感受和诉求意愿,一厢情愿地任性蛮干。要自觉问计于民、问需于民,从人民群众的真知灼见中获取理论创新和实践创新灵感,从人民群众的急难愁盼中找到工作的着力点和突破口,从人民群众的喜怒哀乐中检视我们的工作。
群众的实践是最丰富最生动的实践,群众中蕴藏着巨大的智慧和力量。“领导要有水平,水平从哪里来?水平来自对客观规律的认识和掌握,而规律性的东西,正是蕴藏在广大群众的实践中“新时代的伟大实践中,瞄着“三明医改”,全国公主医院取消药品和耗材加成,推动优质医疗资源扩客下沉,让更多群众看病不再难;北京“党建引领接诉即办”、上海政务服务“一网通办”、江苏“不见面审批”、浙江“最多地一次”等一项项新鲜探索,不断改进和提升治理效能。推进中国式现代化是一个开创性事业,需要在实践中去大胆探索。要坚持人民主体地位,坚持加强党的领导和尊重人民首创精神相结合,坚持顶层设计和摸着石头过河相协调,注重从人民的创造性实践中总结新鲜经验、汲取创新智慧,更好把握发展规律、破解发展难题。
摘编自《人民日报》(2024年1月24日)
</code></pre>
<p><strong>(1)结合认识的本质，分析为什么要“设身处地站在当事人角度去看问题”，做到“如我</strong><br><strong>在诉”。</strong><br>辩证唯物主义认识论认为,<strong>认识的本质是主体在实践基础上对客体的能动反映</strong>。这种能动反映不但具有反映客体内容的反映性特征,而且具有实践所要求的主体能动的、创造性的特征。<strong>认识主体在立场、观点、方法等方面的差异会导致人们对于同一客体的认识结果有所不同,有时甚至截然相反</strong>。因此,只有换位思考,以“如我在诉”的意识办案,做到法、理、情相统一,才能更好地解决纠纷和问题。<br><strong>(2)从人民群众在历史发展中的作用角度，说明为什么“坐办公室里都是问题，走进基</strong><br><strong>层就都是办法”。</strong><br><strong>在社会历史发展过程中,人民群众起着决定性的作用。人民群众是社会历史实践的主体,在创造历史中起决定性的作用。</strong> 首先,人民群众是社会物质财富的创造者。其次,人民群众是社会精神财富的创造者。最后,人民群众是社会变革的决定力量。<strong>人民群众的总体意愿和行动代表了历史发展的方向,人民群众的社会实践最终决定历史发展的结局</strong>。唯物史关于人民群众是历史创造者的原理,要求我们坚持马克思主义群众观点,贯彻党的群众路线虚心向人民群众学习,一切为了群众,一切依靠群众,从群众中来,到群众中去。</p>
<hr>
<p>35.结合材料回答问题:<br>材料 1  </p>
<pre><code>坚持以制度建设为主线,加强顶层设计、总体谋划,破立并举、先立后破,筑牢根本制度,完善基本制度,创新重要制度。
摘自《中共中央关于进一步全面深化改革 推进中国式现代化的决定》
</code></pre>
<p>材料 2</p>
<pre><code>注重发挥经济体制改革牵引作用。深化经济体制改革仍是进一步全面深化改革的重点,主要任务是完善有利于推动高质量发展的体制机制,塑造发展新动能新优势,坚持和落实“两个毫不动摇”,构建全国统一大市场,完善市场经济基础制度。
摘自 习近平《关于(中共中央关于进一步全面深化改革、推进中国式现代化的决定〉的说明》
</code></pre>
<p><strong>(1)进一步全面深化改革为什么要坚持以制度建设为主线?</strong><br>制度是关系党和国家事业发展的<strong>根本性、全局性、稳定性、长期性</strong>问题。进一步全面深化改革要坚持以制度建设为主线。  </p>
<ol>
<li><strong>这是改革开放经验的深刻总结。制度稳则国家稳,制度强则国家强</strong>。重视和加强制度建设,是我们党治党治国的优良传统,也是改革开放以来基本经验和规律的深刻总结党的十一届三中全会尤其是党的十八届三中全会以来,我们在改革和全面深化改革实践中紧紧围绕制度建设的改革,为新时代党和国家事业取得历史性成就、发生历史性变革提供了有力制度保障。</li>
<li><strong>这是中国式现代化的现实需要。制度优势是一个政党、一个国家的最大优势。制度现代化是一个国家现代化的根本保障</strong>,也是一个国家现代化的重要标志。党的二十大明确了以中国式现代化全面推进强国建设、民族复兴伟业的中心任务,对推进中国式现代化作出战略部署。要把这些战略部署落到实处,把中国式现代化蓝图变为现实,根本在于进一步全面深化改革,不断完善各方面体制机制,为推进中国式现代化提供制度保障。</li>
<li><strong>这是进一步全面深化改革的内在要求</strong>。进一步全面深化改革的总目标是继续完善和发展中国特色社会主义制度、推进国家治理体系和治理能力现代化。加强制度建设,是改革进程本身向前拓展提出的客观要求,是新时代进一步全面深化改革的重大任务。坚持以制度建设为主线,筑牢根本制度、完善基本制度、创新重要制度,才能不断把我国制度优势更好转化为国家治理效能,使中国特色社会主义制度更加巩固、优越性充分展现。</li>
</ol>
<p><strong>(2)进一步全面深化改革为什么要注重发挥经济体制改革的牵引作用?</strong><br>党的二十届三中全会把“更加注重突出重点”列入进一步全面深化改革的指导思想突出经济体制改革牵引作用,是更加注重突出重点的内在要求。<br><strong>首先,</strong> 改革开放以来的实践充分证明,经济体制改革对其他方面改革具有重要影响和传导作用,重大经济体制改革的进度决定着其他方面很多体制改革的进度,具有牵一发而动全身的作用。<br><strong>其次,</strong> 我国仍处于并将长期处于社会主义初级阶段,推进中国式现代化必须聚焦经济建设这一中心工作和高质量发展这一首要任务,推动经济实现质的有效提升和量的合理增长,这就决定了深化经济体制改革仍是进一步全面深化改革的重点.<br><strong>最后,</strong> 当前制约高质量发展的体制机制障碍仍然集中在经济领域,牵住经济体制改革这个“牛鼻子”,就能更好促进其他领域深层次矛盾的化解。在进一步全面深化改革中,抓住经济体制改革这个有力抓手,带动其他方面改革相应推进,就能形成强大改革合力。  </p>
<hr>
<p>36.结合材料回答问题:<br>材料 1</p>
<pre><code>七十五载风雨最程,七十五我品砺春进,从“路在何方&quot;到“路在脚下”,我们踏平坎坷成道,走出了极具特色的中国式现代化道路,写就了富有魅力的解决人类问题的中国方案。
摘编自《人民日报》(2024年9月25日)
</code></pre>
<p>材料 2  </p>
<pre><code>实现中华民族伟大复兴的康庄大道就在脚下,我们迈出的每一步,都是新的开拓。坚持道不变、志不改,我们一定能抵达梦想的彼岸。
在中国这样一个大国,建设现代化国家,道路问题是最根本的问题。
摘编自《人民日报》(2024年9月24日)
</code></pre>
<p>材料 3</p>
<pre><code>站在新中国成立 75周年的节点回望,中华大地发生的历史巨变令我们无比自豪:社会主义没有辜负中国,中国没有辜负社会主义!
摘编自《人民日报》(2024年9月26日
</code></pre>
<p><strong>(1)为什么说“在中国这样一个大国，建设现代化国家，道路问题是最根本的问题”?</strong><br><strong>道路决定命运,道路改变命运。</strong> 近代以来,在发展道路的选择上,有的国家封闭僵化,结果陷人困境,举步维艰;有的国家照搬西方模式,结果水土不服,“南橘北枳”。人类历史上,没有一个民族,没有一个国家可以通过依赖外部力量、照搬外国模式、跟在他人后面亦步亦趋实现强大和振兴。<strong>独特的文化传统、独特的历史命运、独特的国情</strong>,<strong>注定了中国必然走适合自己特点的发展道路。75年来,中国发生了翻天覆地的变化,其根本原因在于我们找到了一条符合中国国情、顺应时代潮流,得到人民群众拥护支持的正确道路,这就是中国特色社会主义</strong>。中国在遵循现代化一般规律的基础上,自主探索具有本国特色的现代化之路。中国式现代化道路,扎根中国大地,反映人民意愿,不断适应中国和时代发展进步要求,是强国建设、民族复兴的唯一正确道路。<br><strong>(2)如何理解“社会主义没有辜负中国，中国没有辜负社会主义”?</strong>  </p>
<ol>
<li><strong>所谓社会主义没有辜负中国,就是指社会主义救了中国,发展了中国</strong>。在中华民族近代以来的艰难求索中,马克思主义使中国人民的思想从被动转为主动。中国共产党诞生后,中国共产党人把马克思主义基本原理同中国具体实际相结合、同中华优秀传统文化相结合,团结带领人民,实现了民族独立、人民解放,迎来了从站起来、富起来到强起来的伟大飞跃,实现中华民族伟大复兴进入了不可逆转的历史进程。马克思主义为中国革命、建设、改革提供了强大思想武器,使中国这个古老的东方大国创造了人类历史上前所未有的发展奇迹。</li>
<li><strong>所谓中国没有辜负社会主义</strong>,指的是75年来中国发生的翻天覆地的变化、取得的举世瞩目的成就,深刻影响了世界历史进程,展示了马克思主义的强大生命力。马克思主义中国化时代化不断取得成功,使马克思主义以崭新形象展现在世界上,使世界范围内社会主义和资本主义两种意识形态、两种社会制度的历史演进及其较量发生了有利于社会主义的重大转变。</li>
</ol>
<hr>
<p>37.结合材料回答问题:<br>材料1  </p>
<pre><code>“各行各业的人们都在挥洒汗水,每一个平凡的人都作出了不平凡的贡献!”习近平总书记深情点赞人民。
伟大出自平凡。
新时代是奋斗者的时代。“只要有坚定的理想信念、不懈的奋斗精神,脚踏实地把每件平凡的事做好,一切平凡的人都可以获得不平凡的人生,一切平凡的工作都可以创造不平凡的成就。”今年全国两会,江苏代表团审议现场,电焊工孙景南代表就弘扬工匠精神发言。总书记赞叹:“大国工匠是我们中华民族大厦的基石、栋梁。”
“下团组”同来自一线的工匠面对面,传递的是总书记对高水平技能人才的肯定和期望.
关心每一个辛勤付出的劳动者,勉励每一个拼搏奋斗的普通人。在田间地头,总书记同农民朋友亲切交谈。在清洁站,总书记赞扬环卫工人:“没有你们的辛勤劳动,就没有城市环境的清洁美丽,就没有市民生活的安逸舒适。”给西藏隆子县玉麦乡牧民卓嘎、央宗姐妹回信,总书记肯定她们父女两代接力为国守边的行为,勉励广大农牧民扎根边陲,守护好国土,建设好家乡,2022年北京冬奥会开幕式上,一面鲜艳的五星红旗在各行各业、先进模范人物、56 个民族的代表手中传递。那一刻,无数人热泪盈眶。
“我们这些年一步一个脚印,真正在添砖加瓦建设中国特色社会主义现代化强国大厦的人他们都是值得我们尊敬的。”
摘编自《人民日报》(2024年10月5日)
</code></pre>
<p>材料 2  </p>
<pre><code>最是奋斗动人心。广袤的祖国大地上,升腾着昂扬进取的活力,涌动着踔厉奋发的干劲。9月29日,习近平总书记在国家勋章和国家荣誉称号颁授仪式上深情勉励:“在为国尽责、为民服务中实现个人价值、展现人生风采”“努力成为善于干事创业的岗位能手、行家里手”“在平凡岗位上创造不平凡的业绩”。
国庆假期,许多人坚守岗位、奋战一线,用拼搏诠释责任担当,用行动守护万家灯火。每个人的铿锵足音,交汇成国家和民族凯歌而行的奋进乐章。
推进重大项目 加紧生产建设
天南地北,城市乡村,崇山峻岭,浩荡沙海,重大工程的建设者们一步一个脚印,共同造就神州大地的日新月异。
采取扎实举措 确保出行安全
流动的中国,生机勃勃。国庆假期,出游需求集中释放,文旅市场持续升温,10月4日,全社会跨区域人员流动量超2.8亿人次。相关部门以更有力的举措、更务实的行动、更贴心的服务，守护千家万户出行安全。
保障民生需求 守护万家灯火
田间地头,用心服务;工厂车间,挥洒汗水;门诊病房,奔波忙碌:城市乡村,履职为民……许多人的坚守,为更多人的国庆假期增添便利。
摘编自《人民日报》(2024年10月6日)
</code></pre>
<p><strong>(1)如何理解“伟大出自平凡”?</strong><br>无论时代如何变化,平凡与伟大的辩证关系始终不变:把每一项平凡工作做好,就是不平凡;把每一件小事做好,就是大事业。世上没有从天而降的英雄,只有挺身而出的凡人。坚守平凡,终成不凡。评价人生价值的根本尺度,是看一个人的实践活动是否符合社会发展的客观规律,是否促进了历史的进步。<strong>在今天,衡量人生价值的标准,最重要的就是看一个人是否用自己的劳动和聪明才智为国家和社会真诚奉献,为人民群众尽心尽力服务。</strong> 人们的岗位或许不同、职业或许有异,但只要有坚定的理想信念、不懈的奋斗精神,脚踏实地把每件平凡的事做好,一切平凡的人都可以获得不平凡的人生,一切平凡的工作都可以创造不平凡的成就。<br><strong>(2)怎样“在平凡岗位上创造不平凡的业绩”?</strong>  </p>
<ol>
<li>要以只争朝夕的历史主动、主人翁的责任担当,锐意进取、迎难而上,追求卓越精益求精。</li>
<li>要顺应时代发展新要求,学习新知识、掌握新技能、练就真本领,干一行爱一行,钻一行专一行,做到敬业勤业精业,努力成为善于干事创业的岗位能手、行家里手。</li>
<li>要恪守职业道德,做到爱岗敬业、诚实守信、办事公道、热情服务和奉献社会。</li>
</ol>
<hr>
<p>38.结合材料回答问题:  </p>
<pre><code>近年来,由于一些国家保护主义上升、全球供应链产业链堵点增多、国际贸易疲弱等因素,国际上有关经济全球化的悲观论调时有出现,一些人甚至宣称世界已经告别经济全球化的“黄金阶段”
面对世界经济出现的多重问题,担忧可以理解,悲观大可不必。经济全球化是时代潮流,尽管出现了很多逆流、险滩,但经济全球化方向从未改变、也不会改变。面对挑战,各国需要共同科学回答:如何理解经济全球化的影响和发展趋势?如何看待经济全球化近年来出现的曲折?如何引领经济全球化走出当前逆风逆水期?在这些问题上拨开迷雾、形成共识,不仅关乎世界经济复苏前景,也关乎国际格局稳定和人类社会发展方向。
着眼于引领经济全球化行稳致远、更好造福世界各国人民,国际社会应携手倡导普惠包容的经济全球化。
摘编自《人民日报》(2024年2月7日)
</code></pre>
<p><strong>(1)为什么说“经济全球化方向从未改变、也不会改变”?</strong><br>经济全球化<strong>是生产力发展的客观要求、科技进步的必然结果,也是人类社会前进的必由之路、不可逆转的时代潮流</strong>。冷战结束以来,经济全球化促进了贸易繁荣、投资便利、人员流动、技术发展,推动了世界经济快速发展,尤其是带动了新兴市场国家群体性崛起。近年来经济全球化出现曲折,主要是<strong>因为一些西方国家政策转向</strong>。这些国家曾经是经济全球化的主要推手,但如今却密集推出形形色色的保护主义政策。<strong>这种转变既有经济动因也有政治操弄的影响</strong>。当今世界是经济全球化塑造的世界,保护主义改变不了经济全球化大势。展望未来,经济全球化始终是人类社会前进的必由之路、不可逆转的时代潮流。<br><strong>(2)倡导普惠包容的经济全球化有何重要意义?</strong><br>经济全球化既带来发展机遇,也面临复杂挑战,弥补公平赤字是各方需要面对的重要命题。<strong>中国主张经济全球化应当是普惠的</strong>,就是做大并分好经济发展的蛋糕,妥善解决国家间和各国内部发展失衡问题,促进国际宏观经济政策协调,实现互利共赢和共同繁荣。中国主张经济全球化应当是包容的,就是支持各国走符合自身国情的发展道路,维护以世界贸易组织为核心的多边贸易体制,积极参与全球经济治理体系改革和国际金融治理,反对各种形式的单边主义、保护主义,抵制歧视性排他性的标准、规则,维护全球产业链供应链稳定畅通,保持全球经济增长活力与动力。<br><strong>普惠包容的经济全球化是人心所向、人间正道</strong>。中国提出倡导普惠包容的经济全球化重要主张,有着现实针对性和战略指导性,将引领经济全球化正确方向,为解决当今世界面临的一系列重大问题和挑战贡献中国智慧,为构建人类命运共同体提供坚实依托,具有重要深远意义。</p>
<hr>
<h1 id="第五套"><a href="#第五套" class="headerlink" title="第五套"></a>第五套</h1><p>34.结合材料回答问题:<br>材料1  </p>
<pre><code>习近平在主持召开企业和专家座谈会时强调,改革有破有立,得其法则事半功倍,不得法则事倍功半甚至产生负作用。要坚持守正创新,改革无论怎么改,坚持党的全面领导、坚持马克思主义、坚持中国特色社会主义道路、坚持人民民主专政等根本的东西绝对不能动摇,同时要敢于创新,把该改的、能改的改好、改到位,看准了就坚定不移抓。
摘编自《人民日报》(2024年5月24 日)
</code></pre>
<p>材料 2  </p>
<pre><code>习近平总书记强调:“要在全社会积极营造鼓励大胆创新、勇于创新、包容创新的良好氛围既要重视成功,更要宽容失败”。科技创新具有不确定性,许多时候都会面临失败的风险。因此，在鼓励探索、鼓励创新的同时,必须宽容失败。很多失败的经历十分宝贵,为今后的探索奠定了基础,可以避免再走弯路。许多重大科技创新,都是在经历一次次失败后最终取得成功。如果整个社会只愿为成功喝彩,对失败难以接受,就会压制科技工作者创新的勇气和热情。大力培育创新文化,就要在全社会营造尊重劳动、尊重知识、尊重人才、尊重创造的良好环境,营造鼓励探索、宽容失败的良好环境。要营造激励创新、宽容失败的良好科研生态,支持科研人员脚踏实地、久久为功,创造更多“从0到1”的原创成果。同时,要加强科研诚信和作风学风建设,营造宽容开放、严谨求实的研究氛围,让创新活力竞相迸发。
摘编自《人民日报》(2024年9月24日)
</code></pre>
<p><strong>(1)为什么必须“坚持守正创新”?</strong><br>所谓守正,就是坚持实事求是,坚持真理性认识,坚持正确政治方向。所谓创新,就是坚持解放思想,破除与客观事物进程不相符合的旧观念、旧模式、旧做法,发现和运用事物的新联系、新属性、新规律,更有效地认识世界和改造世界。<br>守正创新就是坚持守正与创新的辩证统一。<strong>守正与创新是相辅相成的,守正是创新的前提和基础,创新是守正的目的和路径。只有守正,才能按照事物的本质要求和客观规律想问题、办事情,才能恪守正道、固本强基;只有创新,才能充分发挥人的主观能动性,促进认识和实践的发展</strong>。守正创新深刻揭示了“变”与“不变”继承与发展的辩证统一。<br><strong>(2)从真理与谬误、成功与失败的辩证关系角度，分析为什么“既要重视成功，更要宽容失败”</strong><br><strong>真理与谬误、成功与失败在一定条件下能够相互转化</strong>。在认识探索的过程中,“错误往往是正确的先导”失败常常是成功之母,总结失败的教训是获得真理、消除谬误的重要途径和方法。<strong>由于认识的复杂性和曲折性以及各种条件的限制,任何人都有可能犯错误,但吃一堑、,长一智,勇于正视错误、反省错误、修正错误,终能取得对客观事物及其规律的正确认识,从而让错误转化为正确,谬误转化为真理</strong>。此外,在批判谬误中发展真理,是谬误向真理转化的另一种形式。谬误可以起到“反面教员”的作用,警示人们要更加深刻、更加正确地认识世界。</p>
<hr>
<p>35.结合材料回答问题:<br>材料 1  </p>
<pre><code>现在距离实现建成科技强国目标只有11年时间了。我们要以“十年磨一剑”的坚定决心和谋划,加快实现高水平科技自立自强。顽强意志,只争朝夕、埋头苦干,一步一个脚印把这一战略目标变为现实。把我国建设成为科技强国,是近代以来中华民族孜孜以求的梦想,一代又一代中华儿女为之殚精竭虑、不懈奋斗。现在,历史的接力棒已经交到了我们这一代人手中。我们要树立雄心壮志,鼓足干劲、发愤图强、团结奋斗,朝着建成科技强国的宏伟目标奋勇前进!
摘自 习近平《在全国科技大会、国家科学技术奖励大会、两院院士大会上的讲话(2024年6月24日)
</code></pre>
<p>材料2</p>
<pre><code>习近平在安徽考察时指出,推进中国式现代化,科学技术要打头阵,科技创新是必由之路高新技术是讨不来、要不来的,必须加快实现高水平科技自立自强。科研工作者是推进中国式现代化的骨干,要拿出“人生能有几回搏”的劲头,放开手脚创新创造,为建设科技强国奉献才智写下精彩篇章。
摘编自《人民日报》(2024年10月19日)
</code></pre>
<p><strong>(1)为什么要“加快实现高水平科技自立自强”?</strong>    </p>
<ol>
<li><strong>科技自立自强是完整、准确、全面贯彻新发展理念,构建新发展格局推动高质量发展的本质要求</strong>。只有实现高水平科技自立自强,才能为完整、准确、全面贯彻新发展理念、构建新发展格局、推动高质量发展提供新的成长空间、关键着力点和主要支撑体系,促进经济实现创新驱动的内涵型增长,增进民生福祉,以中国式现代化全面推进强国建设、民族复兴伟业。中国式现代化要靠科技现代化作支撑,实现高质量发展要靠科技创新培育新动能。</li>
<li><strong>科技自立自强是应对风险挑战、维护国家安全的现实之需</strong>。科技创新对我国来说不仅是发展问题,更是生存问题。科技自立自强是国家强盛之基、安全之要。必须加快实现高水平科技自立自强,解决“卡脖子”问题,把发展的主动权牢牢掌握在自己手中,以高水平科技自立自强有力支撑国家发展和安全,确保我国的现代化进程不会被迟滞、被打断。</li>
<li>科技自立自强是抢抓新一轮科技革命和产业变革重大机遇的必然选择。当前,全球科技创新进人空前密集活跃期,各国竞相布局新领域新赛道,围绕未来科技制高点的竞争空前激烈。新一轮科技革命和产业变革为我国科技创新提供了难得的赶超战略机遇,我们必须增强“不进则退、慢进亦退”的紧迫感,加快推进科技自立自强,在全球科技竞争中抢先-步,赢得国家发展和安全的主动。</li>
</ol>
<p><strong>(2)如何“朝着建成科技强国的宏伟目标奋勇前进”?</strong>  </p>
<ol>
<li>充分发挥新型举国体制优势,加快推进高水平科技自立自强</li>
<li>扎实推动科技创新和产业创新深度融合,助力发展新质生产力</li>
<li>全面深化科技体制机制改革,充分激发创新创造活力</li>
<li>一体推进教育科技人才事业发展,构筑人才竞争优势</li>
<li>深入践行构建人类命运共同体理念,推动科技开放合作。科技进步是世界性、时代性课题,唯有开放合作才是正道。</li>
</ol>
<hr>
<p>36.结合材料回答问题:<br>材料1  </p>
<pre><code>7月15日至18日,中国共产党第二十届中央委员会第三次全体会议胜利举行。在推进中国式现代化的新征程上,中国改革开放矗立起新的里程碑。
这次全会,是在以中国式现代化全面推进强国建设、民族复兴伟业的关键时期举行的一次十分重要的会议。
摘编自《人民日报》(2024年7月19日)
</code></pre>
<p>材料 2  </p>
<pre><code>改革开放是党和人民事业大踏步赶上时代的重要法宝。党的十一届三中全会是划时代的开启了政革开放和社会主义现代化建设新时期。党的十八届三中全会也是划时代的,开启了如时代全面深化改革、系统整体设计推进改革新征程,开创了我国改革开放全新局面.
以习近平同志为核心的党中央团结带领全党全军全国各族人民,以伟大的历史主动、巨大的政治勇气、强烈的责任担当,冲破思想观念束缚,突破利益固化落篱,敢于突进深水区,敢于喷硬骨头,敢于涉险滩,坚决破除各方面体制机制弊端,实现改革由局部探索、被冰突围到系统集成全面深化的转变,各领域基础性制度框架基本建立,许多领域实现历史性变革、系统性重塑、整体性重构,总体完成党的十八届三中全会确定的改革任务,实现到党成立一百周年时各方面制度更加成熟更加定型取得明显成效的目标,为全面建成小康社会、实现党的第一个百年奋斗目标提供有力制度保障,推动我国迈上全面建设社会主义现代化国家新征程.
当前和今后一个时期是以中国式现代化全面推进强国建设、民族复兴伟业的关键时期。中国式现代化是在改革开放中不断推进的,也必将在改革开放中开辟广阔前景。
摘自《中共中央关于进一步全面深化改革 推进中国式现代化的决定》
</code></pre>
<p><strong>(1)为什么说党的二十届三中全会“是在以中国式现代化全面推进强国建设、民族复兴伟业的关键时期举行的一次十分重要的会议”?</strong><br>党的二十届三中全会的举行,彰显了以习近平同志为核心的党中央将改革进行到底的<strong>坚强决心和强烈使命担当,</strong> 是对新时代新征程<strong>举什么旗、走什么路</strong>的再宣示,对以中国式现代化全面推进强国建设、民族复兴伟业具有重大而深远的意义。全会通过的《中共中央关于进一步全面深化改革推进中国式现代化的决定》,紧紧围绕推进中国式现代化这个主题擘画进一步全面深化改革战略举措,是指导新征程上进一步全面深化改革的<strong>纲领性文件</strong>,充分体现了以习近平同志为核心的党中央完善和发展中国特色社会主义制度、推进国家治理体系和治理能力现代化的<strong>历史主动</strong>,是新时代新征程上推动全面深化改革向广度和深度进军的<strong>总动员、总部署</strong>,必将为中国式现代化提供<strong>强大动力和制度保障</strong>。在推进中国式现代化的新征程上,<strong>中国改革开放矗立起新的里程碑</strong>。<br><strong>(2)如何理解“中国式现代化是在改革开放中不断推进的，也必将在改革开放中开辟广阔前景”?</strong>  </p>
<ol>
<li><strong>推进中国式现代化必须进一步全面深化改革</strong>。中国式现代化是一项前无古人的开创性事业,艰巨性和复杂性前所未有,前进道路上必然会遇到各种不确定、难预料的风险挑战。当前,世界百年变局加速演进,新一轮科技革命和产业变革深入发展,世界进入新的动荡变革期。我国发展战略机遇和风险挑战并存,发展不平衡不充分问题仍然突出,不少深层次矛盾躲不开、绕不过。解决、回应这些矛盾问题,必须靠进一步全面深化改革。</li>
<li><strong>进一步全面深化改革必须聚焦中国式现代化</strong>。围绕党的中心任务谋划和部署改革,是党领导改革开放的成功经验。以中国式现代化全面推进强国建设、民族复兴伟业是新时代新征程党的中心任务,进一步全面深化改革必须紧紧围绕推进中国式现代化来谋划和展开,确保目标明确、有的放矢。</li>
<li><strong>进一步全面深化改革与推进中国式现代化,紧密联系、内在统一</strong>。要把党的二十大对推进中国式现代化所作的战略部署落到实处,把中国式现代化蓝图变为现实,根本在于进步全面深化改革,不断完善各方面体制机制,扫除各种障碍,源源不断为中国式现代化激发活力、增添动力。新时代新征程上,要开创中国式现代化建设新局面,仍然要靠改革开放</li>
</ol>
<hr>
<p>37.结合材料回答问题:<br>材料 1  </p>
<pre><code>习近平强调,今年是新中国成立75 周年,是五四运动 105 周年。广大青年要继承和发扬五四精神,坚定不移听党话、跟党走,争做有理想、敢担当、能吃苦、肯奋斗的新时代好青年,在推进强国建设、民族复兴伟业中展现青春作为、彰显青春风采、贡献青春力量,奋力书写为中国式现代化挺膺担当的青春篇章。
摘编自《人民日报》(2024年5月4日)
</code></pre>
<p>材料2  </p>
<pre><code>好儿女志在四方,有志者奋斗无悔。
在工厂车间一线,青年工人苦练本领、精益求精,拧好每个螺丝、焊好每个接头,争当“青年岗位能手”,让“中国制造”走向世界;
在大漠深处,青年治沙人用科学技术为治沙造林增效,续写“风沙变风景,黄沙变黄金”的绿色传奇;
在城市的大街小巷,快递小哥、外卖骑手风里来、雨里去,为千家万户传递幸福与温暖;
......
到基层和人民中去建功立业,让青春之花绽放在祖国最需要的地方,在实现中国梦的伟大实践中书写别样精彩的人生。”深情的寄语,饱含着总书记至浓至真的情怀。
奋斗是青春最亮丽的底色,行动是青年最有效的磨砺。”在实现中国式现代化的壮阔进程中,广大青年牢记总书记嘱托,必将以永不懈怠的精神状态、永不停滞的前进姿态,让中华民族伟大复兴在奋斗中梦想成真。摘编自《人民日报》(2024年5月3日)
</code></pre>
<p><strong>(1)新时代中国青年应如何“奋力书写为中国式现代化挺膺担当的青春篇章”?</strong>  </p>
<ol>
<li>新时代中国青年要矢志创新创造,有敢为人先的锐气,有上下求索的执着,努力在改革开放中闯新路、创新业,在科技创新中挑大梁、当主角,让青春在创新创造中闪光。</li>
<li>新时代中国青年要勇于砥砺奋斗,做走在时代前列的奋进者、开拓者、奉献者,让青春在实现民族复兴的赛道上奋勇争先。</li>
<li>新时代中国青年要坚持知行合一,注重在实践中学真知、悟真谛,在经风雨、见世面中长才干、壮筋骨,练就担当作为的硬脊梁、铁肩膀、真本事,让青春在党和人民最需要的地方绽放绚丽之花.</li>
</ol>
<p><strong>(2)怎样理解“奋斗是青春故亮丽的底色”?</strong><br>全面建成社会主义现代化强国、实现中华民族伟大复兴,是一场接力跑。征途漫漫惟有奋斗。<strong>新时代是奋斗者的时代,人生理想的风帆要靠奋斗来扬起,民族复兴的使命要靠奋斗来实现。青春总是同梦想相伴,而梦想需要与奋斗同行</strong>。只有进行了激情奋斗的青春只有进行了顽强拼搏的青春,只有为人民作出了奉献的青春,才会留下充实、温暖、持久、无悔的青春回忆。<strong>新时代中国青年要勇做走在时代前列的奋进者、开拓者、奉献者</strong>,毫不畏惧面对一切艰难险阻,在劈波斩浪中开拓前进,在披荆斩棘中开辟天地,在攻坚克难中创造业绩,用青春的能动力和创造力激荡起民族复兴的澎湃春潮,书写无愧于时代、无愧于历史的华彩篇章。</p>
<hr>
<p>38.结合材料回答问题:<br>材料1  </p>
<pre><code>习近平在会见美国工商界和战略学术界代表时指出,中国经济是健康、可持续的。2023年中国经济增速在世界主要经济体中名列前茅,对世界经济增长贡献率继续超过30%,这是中国人民干出来的,也离不开国际合作。中国的发展历经各种困难挑战才走到今天,过去没有因为“中国崩溃论”而崩溃,现在也不会因为“中国见顶论”而见顶。我们将持续推动高质量发展,持续推进中国式现代化,既让中国人民不断过上更好生活,也为世界可持续发展作出更大贡献。中国发展前景是光明的,我们有这个底气和信心。  
摘编自《人民日报》(2024年3月28日)
</code></pre>
<p>材料 2</p>
<pre><code>近一段时间以来,在缺乏事实依据的情况下,美国极力渲染所谓中国新能源“产能过剩”论调,引发一些国家跟风炒作。这么做的真正目的,可以说是众目昭彰。
摘编自《炒作中国新能源“产能过剩”用意何在》,《人民日报》(2024年5月12日)
无论是从市场经济原则和价值规律来看,还是结合全球分工和国际市场情况来分析,所谓中国新能源“产能过剩”都是伪命题。
摘编自《所谓中国新能源“产能过剩”纯属伪命题》,《人民日报》(2024年5月16 日)
</code></pre>
<p><strong>(1)如何理解“中国的发展历经各种困难挑战才走到今天，过去没有因为’中国崩溃论’而崩溃，现在也不会因为’中国见顶论’而见顶”?</strong>  </p>
<ol>
<li>中国经济是健康、可持续的。中国具有社会主义市场经济的体制优势、超大规模市场的需求优势、产业体系配套完整的供给优势、大量高素质劳动者和企业家的人才优势,中国经济韧性强、潜力大、活力足,长期向好的基本面不会改变,中国经济大船将乘风破浪持续前行</li>
<li>中国进一步全面深化改革,为中国式现代化提供强大动力和制度保障。</li>
<li>中国持续推动高质量发展,完善高水平对外开放体制机制,将有力保障中国经济健康、可持续发展。</li>
</ol>
<p><strong>(2)为什么说所谓中国新能源“产能过剩”纯属伪命题?</strong><br>中国新能源产业在开放竞争中练就了真本事,代表的是先进产能,不仅丰富了全球供给,缓解了全球通胀压力,也为全球应对气候变化和绿色转型作出巨大贡献。<strong>不论是从比较优势还是全球市场需求角度看,都不存在所谓中国新能源“产能过剩”问题</strong>。<br>炒作中国新能源“产能过剩”,最大企图是遏制打压中国优势产业,重要意图是扶持美国本土产业发展。炒作中国新能源“产能过剩”是经济逆全球化和保护主义、单边主义的新托辞,也是为了服务美国国内政治需要。  </p>
<hr>
<h1 id="第六套"><a href="#第六套" class="headerlink" title="第六套"></a>第六套</h1><p>34.结合材料回答问题:<br>材料1  </p>
<pre><code>科学理论是对客观事物的本质及其规律性的深刻认识,是经过严密逻辑论证和实践反复检验的真理。习近平总书记指出:“在人类思想史上,就科学性、真理性、影响力、传播面而言,没有种思想理论能达到马克思主义的高度,也没有一种学说能像马克思主义那样对世界产生了如此巨大的影响。”马克思主义深刻揭示了自然界、人类社会、人类思维发展的普遍规律,反映了人类对理想社会的美好憧憬,为人类社会发展进步指明了方向,为人民指明了实现自由和解放的道路,具有强大的真理力量。
推进马克思主义中国化时代化,是一个追求真理、揭示真理、笃行真理的过程。习近平新时代中国特色社会主义思想的创立,实现了马克思主义中国化时代化新的飞跃。习近平新时代中国特色社会主义思想是当代中国马克思主义、二十一世纪马克思主义,以其科学体系、核心要义实践要求,以其科学的世界观、方法论和贯穿其中的立场观点方法,凸显科学理论的时代品格,彰显科学理论的真理魅力。这一重要思想深刻把握马克思主义创新发展的内在规律,坚持把马克思主义基本原理同中国具体实际相结合、同中华优秀传统文化相结合,坚持运用辩证唯物主义和历史唯物主义,正确回答时代和实践提出的重大问题,在新时代展现出强大真理力量。奋进新征程,进一步用党的创新理论将党员干部武装起来、凝聚起来,就要深刻领悟习近平新时代中国特色社会主义思想的真理力量,切实增强学习宣传贯彻的政治自觉、思想自觉和行动自觉,不断夯实推进和拓展中国式现代化的思想基础。
摘编自《人民日报》(2024年4月2日)
</code></pre>
<p>材料 2</p>
<pre><code>真理本身是客观存在的,不受主观意识和社会历史的影响而存在,同时真理又依赖于人类社会和历史条件而存在,因为人类的认知是不断发展的。我们贯彻党的实事求是思想路线,必须从马克思主义发展观出发,始终坚持守正创新,既要坚持马克思主义基本原理不动摇,又要破除实际工作中的教条主义、本本主义、经验主义,以满腔热忱对待一切新生事物,不断拓展认识的广度和深度,敢于说前人没有说过的新话,敢于干前人没有干过的事情,以新的理论指导新的实践。摘编自《光明日报》(2024年2月28日)
</code></pre>
<p><strong>(1)运用真理的绝对性和相对性原理，分析“推进马克思主义中国化时代化，是一个追求真理、揭示真理、笃行真理的过程”。</strong><br>真理既具有绝对性,又具有相对性,它们是同一客观真理的两种属性。<strong>住何真理都是绝对性和相对性的统一,二者相互联系、不可分割。从真理的发展上看,人类的认识是一个不断深化的过程,永远处在由真理的相对性走向绝对性、接近绝对性的转化和发展过程中。马克思主义作为客观真理,也是绝对性和相对性的统一</strong>。马克思主义正确反映了人类社会的发展规律,因而具有绝对性。但是,马克思主义并没有穷尽对一切事物及其规律的认识,仍需要随着社会实践的发展而发展,因而又具有相对性。马克思主义真理的绝对性要求我们必须坚持以马克思主义为指导思想,马克思主义真理的相对性又要求我们必须在实践中丰富和发展马克思主义。<br><strong>(2)从事物的变化发展规律角度，说明为什么要“以满腔热忱对待一切新生事物”。</strong><br><strong>物质世界的发展,特别是人类社会的发展,其实质是新事物的产生和旧事物的灭亡中丰富和发展马克思主义。新事物是指合乎历史前进方向、具有远大前途的东西</strong>,旧事物是指丧失历史必然性、日趋灭亡的东西。在新陈代谢的发展过程中,新事物是不可战胜的。<strong>在社会历史领域,新事物是社会上先进的、富有创造力的人们创造性活动的产物,它从根本上符合人民群众的利益和要求,能够得到人民群众的拥护,因而必然战胜旧事物</strong>。以满腔热忱对待一切新生事物,对我们推动中国式现代化不断取得新进展新突破具有重要意义。</p>
<hr>
<p>35结合材料回答问题：<br>材料1  </p>
<pre><code>完善高水平对外开放体制机制
开放是中国式现代化的鲜明特征。必须坚持对外开放基本国策，坚持以开放促改革，依托我国超大规模市场优势，在扩大国际合作中提升开放能力，建设更高水平开放型经济新体制。
</code></pre>
<p>材料2  </p>
<pre><code>坚持系统观念，处理好经济和社会、市场和政府、效率和公平、活力和秩序、发展和安全等重大关系，增强改革系统性、整体性、协同性。
材料1、2摘自《中共中央加强进一步全面深化改革 推进中国式现代化的决定》
</code></pre>
<p><strong>(1)为什么要“完善高水平对处开放体制机制”?</strong><br><strong>高水平对外开放</strong>,是对接国际高标准的制度型开放;是更加积极的自主开放和单边开放;是把握数字化绿色化机遇的开放;是满足人民美好生活需要的开放;是合作共赢的开放:是统筹发展和安全的开放。<br><strong>完善高水平对外开放体制机制</strong>,是推进中国式现代化的内在要求;是推动高质量发展的强大动力;是推动经济全球化的大国担当;是构建人类命运共同体的重要举措。<br><strong>(2)进一步全面深化改革，为什么要处理好发展和安全的关系?</strong>  </p>
<ol>
<li>发展和安全是两件大事。发展解决的是动力问题,是推动国家和民族赓续绵延的根本支撑;安全解决的是保障问题,是确保国家和民族行稳致远的坚强柱石。</li>
<li>发展具有基础性、根本性,是解决安全问题的总钥匙,发展就是最大的安全。安全是发展的条件和保障,没有国家安全,发展取得的成果也可能毁于一旦。国家安全是中国式现代化行稳致远的重要基础。</li>
<li>发展和安全是一体之两翼、驱动之双轮,必须同步推进,以发展促安全、以安全保发展,实现高质量发展和高水平安全良性互动,切实保障国家长治久安,确保中华民族伟大复兴进程不被迟滞甚至中断,胜利实现全面建成社会主义现代化强国目标。</li>
</ol>
<hr>
<p>36.结合材料回答问题:<br>材料1  </p>
<pre><code>75 年来,我们党团结带领全国各族人民进行的一切奋斗、一切牺牲、一切创造,归结起来就是一个主题:实现中华民族伟大复兴。75年来,为了实现中华民族伟大复兴,我们党团结带领全国各族人民,自力更生、发愤图强,创造了社会主义革命和建设的伟大成就;解放思想、锐意进取创造了改革开放和社会主义现代化建设的伟大成就;自信自强、守正创新,创造了新时代中国特色社会主义的伟大成就。实现中华民族伟大复兴进入了不可逆转的历史进程。
历史是最好的教科书,也是最好的清醒剂。习近平总书记指出:“回顾历史不是为了从成功中寻求慰藉,更不是为了躺在功劳薄上、为回避今天面临的困难和问题寻找借口,而是为了总结历史经验、把握历史规律,增强开拓前进的勇气和力量。”新中国75年的历史是党和人民弥足珍贵的精神财富,为我们在新征程上以中国式现代化全面推进强国建设、民族复兴伟业提供了深刻历史启迪。
摘编自《人民日报》(2024年9月30日)
</code></pre>
<p>材料2</p>
<pre><code>75 年前,中国大地满是战争的疮痍,“一辆汽车、一架飞机、一辆坦克、一辆拖拉机都不能造”。彼时,中国经济总量的全球占比不足5%,人均预期寿命仅为35岁,文盲率超过80%……时任美国国务卿艾奇逊断言,历代政府都没有解决中国人的吃饭问题,中国共产党也解决不了。
75年后的今天,中国经济总量跃居世界第二,成为全球制造业第一大国、货物贸易第一大国和第二大消费市场。与此同时,中国对全球减贫贡献率超过70%、“中国制造”极大提升全球福社、天宫空间站朝着国际空间合作平台的方向迈进……一个又一个发展成就,见证了中国人民改写命运的非凡历程。
中国对世界的影响,从未像今天这样全面、深刻、长远;世界对中国的关注,从未像今天这样广泛、深切、聚焦。美国哥伦比亚大学新闻学教授霍华德·弗伦奇说,改革开放开启的中国经济腾飞是“对全人类具有重要意义的事件”。英国著名学者马丁,雅克认为,中国经济实力未来将变得更加强大,中国的发展改变的将不仅是世界经济格局,还将对人们的思维和生活方式产生深远影响。
摘编自 新华网(2024年9月30日)
</code></pre>
<p><strong>(1)如何理解实现中华民族伟大复兴是新中国75年的鲜明主题?</strong><br><strong>1949年10月,新中国成立,彻底改变了近代以后100 多年中国积贫积弱受人欺凌的悲惨命运,中华民族走上了实现伟大复兴的壮阔道路。在社会主义革命和建设的时期</strong>,我国社会主义改造完成,确立了社会主义基本制度,并开始大规模进行社会主义建设,建立起独立的、比较完整的工业体系和国民经济体系,<strong>为实现中华民族伟大复兴奠定了根本政治前提和制度基础</strong>。<br><strong>改革开放和社会主义现代化建设新时期</strong>,经过全国人民的努力奋斗,党和人民事业大踏步赶上时代,社会主义现代化建设取得举世瞩目的巨大成就。我国经济得到快速发展,社会保持长期稳定,<strong>为实现中华民族伟大复兴提供了充满新的活力的体制保证和快速发展的物质条件</strong>。我国实现了从生产力相对落后的状况到经济总量跃居世界第二的历史性突破,实现了人民生活从温饱不足到总体小康、奔向全面小康的历史性跨越,推进了中华民族从站起来到富起来的伟大飞跃。<br><strong>党的十八大以来</strong>,在新中国成立特别是改革开放以来长期探索和实践基础上,采取一系列战略性举措,推进一系列变革性实践,实现一系列突破性进展,取得一系列标志性成果,战胜一系列重大风险挑战,成功推进和拓展了中国式现代化,<strong>为实现中华民族伟大复兴提供了更为完善的制度保证、更为坚实的物质基础,更为主动的精神力量</strong>。中华民族迎来了从站起来、富起来到强起来的伟大飞跃。<br><strong>(2)新中国75年中国人民改写命运的非凡历程，为我们在新征程上以中国式现代化全面推进强国建设、民族复兴伟业提供了哪些深刻历史启迪?</strong>  </p>
<ol>
<li><strong>必须坚持中国共产党的全面领导</strong>。中国人民和中华民族之所以能够取得今天这样的伟大成就,最根本的是有中国共产党的坚强领导。</li>
<li><strong>人民群众是决定党和国家前途命运的根本力量</strong>。75年来,我们党正是紧紧依靠人民交出了一份又一份载入史册的优异答卷。</li>
<li><strong>马克思主义是我们立党立国的根本指导思想</strong>。新中国75年的历史启迪我们,中国共产党为什么能,中国特色社会主义为什么好,归根到底是马克思主义行,是中国化时代化的马克思主义行。</li>
<li><strong>中国特色社会主义是实现中华民族伟大复兴的必由之路</strong>。新中国75年的历史启迪我们,只有社会主义才能救中国,只有中国特色社会主义才能发展中国。</li>
<li><strong>改革开放是当代中国大踏步赶上时代的重要法宝</strong>。新中国75年的历史启迪我们,改革开放是坚持和发展中国特色社会主义的必由之路。</li>
</ol>
<hr>
<p>37.结合材料回答问题:<br>材料 1  </p>
<pre><code>“日日行,不怕千万里”。无论是在基层一线、广袤田畴,还是在生产车间、流水线上,无论是在市场大潮中奋力打拼,还是在实验室里创新攻关,每个人都可以在国家发展中找到自己的舞台和机会,都享有人生出彩、梦想成真的机会。这正是春节的期许,个人奋斗与国家发展双向奔赴国家发展为每个人追求自己的梦想打开更大空间,而每一个人向着梦想努力奔跑,就会跑出中国式现代化的加速度。
摘编自《人民日报》(2024年2月9日)
</code></pre>
<p>材料 2  </p>
<pre><code>要完善重点群体就业支持政策。坚持把高校毕业生等青年群体就业作为重中之重,开发更多有利于发挥所学所长的就业岗位,鼓励青年投身重点领域、重点行业、城乡基层和中小微企业就业创业，拓宽市场化社会化就业渠道。
摘自 习近平《在二十届中央政治局第十四次集体学习时的讲话》(2024年5月27日)
</code></pre>
<p><strong>(1)如何理解“个人奋斗与国家发展双向奔赴，国家发展为每个人追求自己的梦想打开更大空间，而每一个人向着梦想努力奔跑，就会跑出中国式现代化的加速度”?</strong><br>人生价值内在地包含了人生的自我价值和社会价值两个方面。人生的自我价值,是个体的人生活动对自己的生存和发展所具有的价值,主要表现为对自身物质和精神需要的满足程度。人生的社会价值,是个体的实践活动对社会、他人所具有的价值。<strong>人生的自我价值和社会价值,既相互区别,又密切联系、相互依存</strong>。一<strong>方面,人生的自我价值是个体生存和发展的必要条件,人生的自我价值的实现是个体为社会创造更大价值的前提</strong>。个体通过努力提高自我价值的过程,也是其创造社会价值的过程。<strong>另一方面,人生的社会价值是社会存在和发展的重要条件,人生社会价值的实现是个体自我完善、全面发展的保障</strong>。个人奋斗与国家发展双向奔赴,正是个人价值与社会价值相互作用的体现。<br><strong>(2)当代青年应当如何选择职业和工作岗位?</strong><br><strong>首先,要树立崇高的职业理想</strong>。职业活动不仅是人们谋生的手段,也是人们奉献社会、完善自身的必要条件。<br><strong>其次,要服从社会发展的需要</strong>。要怀着一颗平实之心,客观看待、综合考虑个人条件和社会需求,把自己对职业的期望与社会的需要、现实的可能结合起来,从实际出发选择职业和工作岗位,防止高不成、低不就。要积极响应国家号召,投身重点领域、重点行业、城乡基层和中小微企业就业创业,为经济社会发展贡献智慧和力量。<br><strong>最后,要牢固树立幸福生活是靠劳动创造的观念</strong>。热爱劳动、勤勉工作,无论从事什么劳动,都要干一行、爱一行、钻一行,脚踏实地,在实践中一步步成长起来。  </p>
<hr>
<p>38.结合材料回答问题:  </p>
<pre><code>新时代以来,构建人类命运共同体从中国倡议扩大为国际共识,从美好愿景转化为丰富实践,从理念主张发展为科学体系,成为引领时代前进的光辉旗帜。概括地讲,构建人类命运共同体,是以建设持久和平、普遍安全、共同繁荣、开放包容、清洁美丽的世界为努力目标,以推动共商共建共享的全球治理为实现路径,以践行全人类共同价值为普遍遵循,以推动构建新型国际关系为基本支撑,以落实全球发展倡议、全球安全倡议、全球文明倡议为战略引领,以高质量共建“一带一路”为实践平台,推动各国携手应对挑战、实现共同繁荣,推动世界走向和平、安全、繁荣、进步的光明前景。
摘编自《人民日报》(2023年12月29 日)
</code></pre>
<p><strong>(1)如何理解构建人类命运共同体“成为引领时代前进的光辉旗帜”?</strong><br>构建人类命运共同体是习近平外交思想的核心理念,是我们不断深化对人类社会发展规律认识,<strong>对建设一个什么样的世界,怎样建设这个世界给出的中国方案</strong>,体现了中国共产党人的世界观、秩序观、价值观,顺应了各国人民的普遍愿望,指明了世界文明进步的方向,是新时代中国特色大国外交追求的崇高目标。构建人类命运共同体从中国倡议扩大为国际共识,成为引领时代前进的光辉旗帜。<br><strong>(2)构建人类命运共同体为什么要“以践行全人类共同价值为普遍遵循”?</strong><br>和平、发展、公平、正义、民主、自由的全人类共同价值,蕴含着不同文明对价值内涵和价值实现的共通点,是当今世界不同制度、不同文明、不同国家间的最大价值公约数,是构建人类命运共同体的价值基础,是各国人民的共同追求。<br>第一,和平发展是共同事业。要解决好各种全球性挑战,根本出路在于谋求和平、实现<br>发展。<br>第二,公平正义是共同理想。任何国家都不能在世界上我行我素,搞霸权霸道霸凌。<br>第三,民主自由是共同追求。不存在定于一尊的民主,更不存在高人一等的民主。<br>第四,全人类共同价值既是人类文明的共同财富,也是破解当今时代难题的钥匙。践行全人类共同价值,才能凝聚最广泛的国际共识,实现最广泛的国际团结,超越所谓“普世价值”的狭隘历史局限,为构建人类命运共同体凝聚价值共识,为建设持久和平、普遍安全、共同繁荣、开放包容、清洁美丽的世界提供精神动力。</p>
<hr>
<h1 id="第七套"><a href="#第七套" class="headerlink" title="第七套"></a>第七套</h1><p>34.结合材料回答问题:  </p>
<pre><code>滇池是昆明人的母亲湖。近年来,控源截污、精准防控、科学补水、生态增绿等一系列措施形成合力,扭转了滇池水质长期处于劣V类的态势。
治湖先治水,治水先治河,治河先治污。改善滇池水质,尤其需要系统治理的智慧。滇池缺乏稳定补水水源、自我净化能力较弱,治理必须岸上岸下多头并进、上游下游齐抓共管。从线上看,多数入滇河道依靠水质净化厂处理的再生水补给水源,中上游可腾出精力搞生态修复年期必须兜住污水处理底线,确保清水入湖。从面上看,主城区要不断畅通排水管网“毛细血管”，降低汛期雨污合流的溢流污染风险;环湖区域需要持续打通污水处理“神经末精”,实现流域。行政村生活污水处理设施全覆盖。实践证明,湖泊治理不能就湖论湖,而要推动”一湖之治&quot;向“流域之治”“全域联治”转变。
以系统观念治理生态环境,需要部门、区域的协同推选,也离不开相关产业、配套工作的统筹协调。滇池北岸的宝丰湿地,芦苇蒌荽、飞鸟翩翩,春节假期前来的游客络绎不绝。如今,星海海东、王官等数十个沿岸湿地串珠成链,成为改善滇池水质的“过滤器”、市民假期出游的热门地,生态保护与文旅发展相得益彰。永久基本农田推广生态种植,控制农业面源污染;规划建设绿道,设定物理区隔、打造休闲长廊;乡村以生态保护为底线,发展摄影、徒步、非遗展示等业态……滇池沿岸的治理实践表明,将生态保护与产业转型、文旅融合、美丽乡村建设等更好结合起来,可以为生态治理注入更强动能。
摘编自《人民日报》(2024年2月29日)
</code></pre>
<p><strong>(1)湖泊治理不能“就湖论湖”体现了怎样的辩证思维?</strong><br><strong>联系的观点是唯物辩证法的总观点之一。联系是指事物内部各要素之间和事物之间相互影响、相互制约、相互作用的关系</strong>。世界上的万事万物既作为个体事物存在又作为联系中的事物存在。<strong>联系具有普遍性。任何事物都不能孤立存在,都同其他事物处于一定的联系之中。整个世界是相互联系的统一整体</strong>。“就湖论湖”只把治湖当作一件孤立的事情而没有考虑与之相联系的其他因素,只有把治湖与治水、治河、治污等当作一个相互联系的系统看待,才能有效地治理生态环境问题。<br><strong>(2)为什么要“以系统观念治理生态环境”?</strong><br>唯物辩证法认为,事物是普遍联系的,事物及事物各要素之间相互影响、相互制约,每一事物都是世界普遍联系中的一环。<strong>由相互联系、相互作用的若干要素组成的具有稳定结构和特定功能的有机整体,就是系统。</strong> 系统的存在及其特征体现了物质世界普遍联系的具体性。<strong>要想科学把握事物的系统,就需要坚持系统观念,用系统思维分析事物的本质和内在联系,从整体上把握事物发展规律</strong>。坚持系统观念,就是要把事物放在普遍联系的系统中来把握,在系统与要素、要素与要素、结构与层次、系统与环境之间相互联系和作用的动态过程中<br>把握事物,力求获得问题的最优解。</p>
<hr>
<p>35.结合材料回答问题:  </p>
<p>材料 1  </p>
<pre><code>习近平在二十届中央纪委三次全会上发表重要讲话强调,我们党作为世界上最大的马克思主义执政党,如何成功跳出治乱兴衰历史周期率、确保党永远不变质不变色不变味?这是摆在全党同志面前的一个战略性问题。党的十八大以来,在推进全面从严治党的伟大实践中,我们不断进行实践探索和理论思考,在毛泽东同志当年给出“让人民来监督政府”的第一个答案基础上给出了第二个答案,那就是不断推进党的自我革命。在新时代十年全面从严治党的实践和理论探索中,我们不断深化对党的自我革命的认识,积累了丰富实践经验,形成了一系列重要理论成果,系统回答了我们党为什么要自我革命、为什么能自我革命、怎样推进自我革命等重大问题。
习近平指出,在深入推进党的自我革命实践中需要把握好九个问题,即:以坚持党中央集中统一领导为根本保证,以引领伟大社会革命为根本目的,以习近平新时代中国特色社会主义思想为根本遵循,以跳出历史周期率为战略目标,以解决大党独有难题为主攻方向,以健全全面从严治党体系为有效途径,以锻造坚强组织、建设过硬队伍为重要着力点,以正风肃纪反腐为重要抓手,以自我监督和人民监督相结合为强大动力。要坚持解放思想、实事求是、与时俱进、守正创新,不断进行实践探索和理论创新,不断深化对党的自我革命的规律性认识,把党的自我革命的思路举措搞得更加严密,把每条战线、每个环节的自我革命抓具体、抓深入。
摘编自《人民日报》(2024年1月9日)
</code></pre>
<p>材料 2</p>
<pre><code>我们党是在马克思主义建党学说指导下、按照民主集中制原则建立起来的世界最大政党,在2025 考研政治冲刺8套卷&gt;&gt;&gt;试题分册世界上人口最多的国家长期执政,历史久、人教多、规模大,既有办大事、建伟业的巨大优势,也面临治党治国的特殊难题。我看,至少有以下几大难题需要进一步研究解决。
-如何始终不忘初心、牢记使命。
-如何始终统一思想、统一意志、统一行动。
-如何始终具备强大的执政能力和领导水平。
-如何始终保持干事创业精神状态。
-如何始终能够及时发现和解决自身存在的问题。
解决好上述难题,是实现新时代新征程党的使命任务必须迈过的一道坎,是全面从严治党适应新形势新要求必须啃下的硬骨头。
如何始终保持风清气正的政治生态。
摘自 习近平《时刻保持解决大党独有难题的清醒和坚定,把党的伟大自我革命进行到底》《求是》杂志(2024年第6期)
</code></pre>
<p><strong>(1)中国共产党为什么能自我革命?</strong><br>勇于自我革命,是中国共产党区别于其他政党的显著标志,也是我们党最大的优势、最鲜明的品格。  </p>
<ol>
<li>我们党除了国家、民族、人民的利益,没有任何自己的特殊利益,这是我们党自我革命的勇气之源、底气所在。</li>
<li>我们党有高度的自信,从不讳疾忌医敢于直面问题,勇于坚持真理、修正错误。</li>
<li>我们党立志于中华民族千秋伟业,始终坚守初心使命,需要在革命性锻造中永葆青春活力,给党和人民事业发展注入源源不断的强大能量。</li>
</ol>
<p><strong>(2)中国共产党的自我革命为什么要“以解决大党独有难题为主攻方向”?</strong>  </p>
<ol>
<li><strong>以重大问题为导向深入破题解题,是百年大党中国共产党推进党的自我革命的重要经验</strong>。自我革命从来都是奔着问题去的。在不同历史时期,我们党总是针对当时党内存在的突出问题,确定自我革命的主要方向和重点任务,集中力量和资源解决主要问题,以此带动解决其他问题,推动自我革命不断走向深人。</li>
<li><strong>以解决大党独有难题为主攻方向,明确了新时代推进自我革命要解决的主要问题和重点任务</strong>。解决6个“如何始终”的大党独有难题,是实现新时代新征程党的使命任务必须迈过的一道坎,是全面从严治党适应新形势新要求必须啃下的硬骨头。</li>
<li><strong>以解决大党独有难题为主攻方向,彰显了新时代中国共产党人的深沉忧患意识和开拓创新勇气,体现了新时代中国共产党人的战略眼光和宏大气魄</strong>。方面饱含着对世界上其他大党老党兴衰成败历史经验的深刻警醒,另一方面展示了中国其产党立志于中华民族千秋伟业、跳出历史周期率、开创马克思主义政党长期执政历史的雄心壮志。<strong>时刻保持解决大党独有难题的清醒和坚定,展现了我们党历经百年沧桑依然风华正茂的精神状态</strong></li>
</ol>
<hr>
<p>36.结合材料回答问题:  </p>
<pre><code>进一步全面深化改革,必须紧紧围绕推进中国式现代化这个主题来展开。要锚定继续完善和发展中国特色社会主义制度、推进国家治理体系和治理能力现代化的总目标,更加注重系统集成,更加注重突出重点,更加注重改革实效,精准发力、协同发力、持续发力,坚决破除各种体制机制障碍,进一步解放和发展社会生产力、激发和增强社会活力,有效防范化解前进道路上的重大风险挑战,为中国式现代化提供强大动力和制度保障。
摘自，习近平《在党的二十届三中全会第二次全体会议上的讲话》
</code></pre>
<p><strong>(1)进一步全面深化改革，为什么“必须紧紫围绕推进中国式现代化这个主题来展开”</strong><br><strong>围绕党的中心任务谋划和部署改革,是党领导改革开放的成功经验。</strong> 回顾改革开放和社会主义现代化建设的历程可以看到,我们党总是在党的历次全国代表大会报告中把握历史的阶段性特征,确立发展目标和中心任务,用以统一意志、心聚力:然后再在三中全会上重点研究改革议题,把服务中心任务和战略目标作为改革的主题,通过改革为完成中心任务、实现战略目标增添动力。党的二十大确立了以中国式现代化全面推进强国建设民族复兴伟业的中心任务。<strong>推进中国式现代化,是新时代新征程上凝聚全党全国人民智慧和力量的旗帜,也必然是进一步全面深化改革的主题</strong>。<br><strong>(2)如何理解进一步全面深化改革“婴铺定维续完善和发展中国特色社会主义制度、推进国家治理体系和治理能力现代化的总目标”?</strong>  </p>
<ol>
<li><strong>明确目标是我们党成立100多年来的一条重要经验</strong>。目标就是方向,目标就是引领,目标就是动力。我们党成立100多年来,之所以能够战胜无数艰难险阻、不断从胜利走向胜利,一条重要经验就是始终坚持实现共产主义的最高理想和最终目标,科学谋划确定革命、建设、改革各个历史时期的奋斗目标,以此指引全党全国人民的前进方向,凝聚起万众一心、团结奋进的强大力量,引领党和国家事业阔步前进。</li>
<li><strong>改革开放40多年来,我们党逐步确立了全面深化改革的总目标,引领改革不断取得新的重大成就</strong>。党的十八届三中全会确立的全面深化改革总目标,不仅实现了改革由局部探索、破冰突围到系统集成、全面深化的转变,而且为此后的改革指明了方向、提供了依据,为实现党的第一个百年奋斗目标,开启第二个百年奋斗目标新征程,注入了强大动力和活力。</li>
<li>党的二十届三中全会提出了进一步全面深化改革的总目标,它与党的十八届三中全会提出的总目标既一脉相承,又有新的丰富和发展,体现了改革实践发展的连续性和阶段性,体现了党对改革认识的深化和系统化。深刻理解这个总目标,才能坚定自觉紧扣中国式现代化这个主题;才能引领改革始终沿着正确的方向前进;才能不断增强改革的系统性、整体性、协同性。</li>
</ol>
<hr>
<p>37,结合材料回答问题:<br>材料1  </p>
<pre><code>“无论什么时候,我们都要坚守在中国大地上形成和发展起来的社会主义核心价值观,在时代大潮中建功立业,成就自己的宝贵人生。”
殷殷嘱托,声声寄语。习近平总书记的重要讲话深刻阐述了社会主义核心价值观的重大意义、丰富内涵和实践要求,深刻回答了当代青年践行社会主义核心价值观的时代责任和努力方向。
摘编自《人民日报》(2024年5月3日)
</code></pre>
<p>材料2</p>
<pre><code>穿衣服扣扣子,如果第一粒扣子扣错了,剩余的扣子都会扣错
一个朴素的常识,也是一个深刻的道理。
“人生的扣子从一开始就要扣好。”习近平总书记用这个比喻强调,青年处在价值观形成和确立的时期，“抓好这一时期的价值观养成十分重要”。
2014年5月,习近平总书记来到北京大学考察,指出广大青年要从现在做起、从自己做起,使社会主义核心价值观成为自己的基本遵循,并身体力行大力将其推广到全社会去。
摘编自《人民日报》(2023年5月3日)
</code></pre>
<p><strong>(1)为什么说“无论什么时候，我们都要坚守在中国大地上形成和发展起来的社会主义核心价值观”?</strong><br>社会主义核心价值观体现了社会主义意识形态的本质要求,体现了社会主义制度在思想精神层面的质的规定性,<strong>以其先进性、人民性、真实性站在人类道义制高点上</strong>，彰显出独特而强大的价值观优势。作为当代中国发展进步的精神指引,社会主义核心价值观是坚持和发展中国特色社会主义的价值遵循;是提高国家文化软实力的迫切要求;是推进社会团结奋进的“最大公约数”。培育和践行社会主义核心价值观,是有效整合我国社会意识凝聚社会价值共识、防范和化解社会矛盾、聚合磅礴之力的重大举措,是保证我国经济社会沿着正确的方向发展、实现中华民族伟大复兴的价值支撑,意义重大而深远。<br><strong>(2)如何理解“人生的扣子从一开始就要扣好”?</strong><br>“人生的扣子从一开始就要扣好”是用比喻来强调青年时期价值观的养成十分重要。<strong>青年的价值取向决定了未来整个社会的价值取向</strong>,而青年又处在价值观形成和确立的时期，抓好这一时期的价值观养成,就像穿衣服扣扣子一样,如果第一粒扣子扣错了,剩余的扣子都会扣错。人生的扣子从一开始就要扣好。广大青年是否崇德向善,不仅关乎人生道路能否走得正、走得远,更关乎整个社会是否风清气正、朝气蓬勃。面对世界范围内各种思想文化交流交融交锋的新形势,面对整个社会思想观念呈现多元多样、复杂多变的新特点,青年的健康成长成才更加需要核心价值观的引领。青年要做社会主义核心价值观的坚定信仰者、积极传播者、模范践行者,争做堪当民族复兴重任的时代新人。</p>
<hr>
<p>38.结合材料回答问题:<br>材料 1  </p>
<pre><code>10月2日,国家主席习近平同俄罗斯总统普京互致贺电,热烈庆祝两国建交75 周年。习近平指出,中俄互为最大邻国,同为世界大国和主要新兴市场国家。建交 75 年来,双方从两国和两国人民的根本利益出发,在深刻总结历史经验的基础上,推动中俄关系不断提质升级永久睦邻友好、全面战略协作、互利合作共赢成为两国关系最本质的特征。特别是新时代以来在习近平主席同普京总统共同战略引领下,面对百年未有之大变局,双方政治互信持续加深,务实合作成果显著,世代友好深入人心,为增进两国人民福祉,推动平等有序的世界多极化和普惠包容的经济全球化作出重要贡献。
习近平主席高度重视中俄关系发展,愿同普京总统一道努力,以两国建交 75 周年为契机,牢牢把握双边关系前进的方向,不断拓展中俄全方位务实合作,共同促进两国高质量发展和现代化建设,为维护世界和平稳定、推动构建人类命运共同体作出新的贡献。
普京表示,四分之三个世纪前,我国在世界上第一个承认中华人民共和国并迅速同新中国建立起密切的协作关系。俄中紧密、互利的关系成功经受住了时间的考验。当前,俄中关系处于历史最高水平。双方在政治、经贸、科技等各领域积极开展合作,在国际和地区事务中高效协作,共同致力于构建公正的多极世界格局。双方将全面落实普京总统同习近平主席会晤达成的一系列共识,进一步巩固俄中新时代全面战略协作伙伴关系,促进欧亚大陆及全球安全稳定。
摘编自《人民日报》(2024年10月3日)
</code></pre>
<p>材料 2  </p>
<pre><code>2024 年是中华人民共和国成立75周年,也是中国和俄罗斯建交75 周年。10月2日,习近平主席同普京总统互致贺电,热烈庆祝这一具有重要历史意义的建交纪念日。四分之三个世纪以来,中俄关系历经风雨,踏平坎坷,愈加成熟稳定、坚韧不拔。
75 年弹指一挥,在两国元首引领下,承载厚重历史和战略内涵的新时代中俄关系持续焕发勃勃生机。
当前,世界之变、时代之变、历史之变正以前所未有的方式展开。国际形势风云激荡,变乱交织的一面更加突出,各种不确定难预料的因素相互叠加。但我们始终坚信,在中俄两国元首的战略引领下,历久弥坚的中俄关系经得起任何国际风云变幻的考验。
摘编自《人民日报》(2024年10月3日)
</code></pre>
<p><strong>(1)为什么说”历久弥坚的中俄关系经得起任何国际风云变幻的考验”?</strong><br><strong>中俄关系最本质的特征是永久睦邻友好,全面战略协作、互利合作共赢,内核是不结盟、不对抗、不针对第三方,底色是相互尊重、平等相待,合作共赢</strong>。国际形势再怎么变,这些都不会变,历久弥坚的中俄关系经得起任何国际风云变幻的考验。<br><strong>(2)中俄两国的正确相处之道，为21世纪新型国际关系和相邻大国关系指出了怎样的努力方向</strong><br>中俄关系75年发展历史得出的最重要结论,就是两个相邻的大国之间,必须始终引扬和平共处五项原则,相互尊重、平等互信、照顾彼此关切,真正为双方的发展振兴相互提供助力。这既是中俄两国正确相处之道,也是21世纪新型国际关系和相邻大国关系应该努力的方向。</p>
<hr>
<h1 id="第八套"><a href="#第八套" class="headerlink" title="第八套"></a>第八套</h1><p>34.结合材料回答问题:<br>材料1  </p>
<pre><code>作为湿地生态系统之一,红树林在维持海岸带生物多样性等方面具有举足轻重的作用。近年来,我国商度重视红树林保护工作,湿地保护法中专门设置了红树林条蔽,组织实施《红树林保#修复专项行动计划(2020-2025 年)》。经过努力,我国红树林面积已达43.8万亩,比本世纪初增加7200多公顷,成为世界上少数几个红树林面积净增加的国家之一。
近年来,为大力提升红树林生态系统功能,深圳因地制宜开展了一批红树林湿地生态修复工程,通过人工种植红树林、营造鸟类栖息滩涂等措施,自2020年以来已完成红树林营造修复任务25.72 公顷。
长期以来,一个平衡难题摆在工作人员面前:经过监测发现,深圳湾的外来红树植物正在大量扩张,滩涂面积相应减少。“红树林保护并不是红树植被面积越大越好,有时候留白也是一种生态保护。”有专家表示,红树植被的持续扩张可能导致候鸟无处落脚和觅食,最终对候鸟种类和数量产生严重影响。最终,红树林保护相关工作人员决定坚持鸟类优先原则:在深圳河口,以3:1的红树与滩涂面积比为标准,近15 公顷的红树植被清除完毕。大面积清除外来红树植物为鸟类腾出栖息空间的修复举措,成为全国首例。
大自然是一个精妙而复杂的系统,往往牵一发而动全身。如何在环环相扣的生态链条中适
当进行人工干预,是红树林科学保护的关键。环境改善,鸟儿们的感受最直接:以往冬季,在内伶仃福田国家级自然保护区基围鱼塘里过夜的黑脸琵鹭,一般只有三四十只,2022年却观测到了超过 150只,创近几年新高。2023 年6月十几对黑翅长脚鹬在保护区鱼塘筑巢孵卵,成为近20 年来首例。通过科学管理、智慧修复,保护区为鸟类创造了食物充足的安全繁殖环境,候鸟的增多就是最直接的认可。
摘编自《人民日报》(2024年2月21日)
</code></pre>
<p>材料 2   </p>
<pre><code>高大的输电铁塔是不少鸟类喜爱的筑巢地点,但鸟儿在输电铁塔上筑巢,容易引发线路跳闸,也威胁其自身安全。怎样解决这一难题?电网工作人员不断探索,化“堵”为“疏”,在线路杆塔非带电区段搭建人工鸟巢,还采取了对杆塔进行局部绝缘化处理等有效举措。如今,这样的做法在多个省份广泛推行。输电铁塔上,鸟儿们在一个个爱心筑成的鸟巢里“安家落户”,成为人与自然和谐共生的一道道美丽风景。
近年来,随着生态文明理念日益深入人心,人们对自然的态度发生深刻转变。人与自然是一种共生关系,对自然的伤害最终会伤及人类自身,对自然的尊重、顺应和保护则会让人类受益无穷。电网工作人员由防鸟驱鸟变为筑巢引鸟、护线爱鸟,正是这种转变的一个生动缩影。
建设人与自然和谐共生的中国式现代化,对自然生态的尊重与敬畏之心不可或缺。以往,一些地区的人们盲目“向沙漠进军”,围湖造田,填海造地………结果不但没有征服自然界,反而破坏了生态环境,导致生态系统失衡。如今,人们高度重视自然生态保护,像保护眼睛一样保护生态环境,像对待生命一样对待生态环境,而且在保护修复生态环境时,注重遵循自然规律,注重利朋2025 考研政治冲刺8套卷&gt;&gt;&gt;试题分册大自然自身的力量,综合运用自然恢复和人工修复两种手段,因地因时制宜、分区分类施策。)不负青山,青山定不负人,尊重自然、顺应自然、保护自然,生态系统日益恢复生机活力。摘编自《人民日报》(2024年1月3日）
</code></pre>
<p><strong>(1)运用主观能动性与客观规律性相统一的原理，说明为什么“有时候留白也是一种生态保护”。</strong><br>保护和修复生态环境既要尊重客观规律,也要充分发挥主观能动性。<strong>一方面,尊重客观规律是正确发挥主观能动性的前提</strong>。规律是事物变化发展过程中本身所固有的内在的、本质的、必然的联系。人们只有在认识和掌握客观规律的基础上,才能正确地认识世界,有效地改造世界。另一方面,<strong>只有充分发挥主观能动性,才能正确认识和利用客观规律</strong>。承认规律的客观性,并不是说人在规律面前无能为力、无所作为。人能够通过自觉活动去认识规律,并按照客观规律去改造世界,以满足自身的需要。<br>自然生态系统是一个有机生命躯体,有其自身发展演化的客观规律,要充分尊重自然和顺应自然。通过人工种植红树林、营造鸟类栖息滩涂等措施主动修复红树林湿地生态,是人们发挥主观能动性的表现;清除红树植被、为红树林“留白”则是尊重客观规律的体现。<br><strong>(2)“由防乌驱鸟变为筑集引鸟、护线爱鸟”对我们处理人与自然的关系有何启示?</strong><br><strong>自然地理环境是人类社会生存和发展永恒的、必要的条件,是人们生活和生产的自然基础</strong>。自然生态平衡对社会生活起着重要作用。合理地利用自然资源,保护生态平衡,是社会得以正常发展的必要条件。<strong>人类在实践活动中按照自己的意愿改造世界的同时必须遵循自然规律,否则将会导致人与自然关系的失衡</strong>。马克思认为,应当合理地调节人与自然之间的物质变换,在最无愧于和最适合人类本性的条件下进行这种物质变换。坚持人与自然和谐共生,建设生态文明,是中华民族永续发展的千年大计。“由防鸟驱鸟变为筑巢引鸟、护线爱鸟”正是人们尊重自然、顺应自然、保护自然的体现。</p>
<hr>
<p>35.结合材料回答问题:<br>材料 1  </p>
<pre><code>坚持和落实“两个毫不动摇”。毫不动摇巩固和发展公有制经济,毫不动摇鼓励、支持、引导非公有制经济发展,保证各种所有制经济依法平等使用生产要素、公平参与市场竞争、同等受到法律保护,促进各种所有制经济优势互补、共同发展。
摘自《中共中央关于进一步全面深化改革推进中国式现代化的决定》
</code></pre>
<p>材料 2  </p>
<pre><code>10月10日,《中华人民共和国民营经济促进法(草案征求意见稿)》(以下简称“草案”)向社会公开征求意见。草案将坚持“两个毫不动摇”明确为法律制度,以立法形式向社会表明这是国家长期坚持的大政方针,进一步释放促进民营经济发展壮大的鲜明信号。制定民营经济促进法是党的二十届三中全会作出的重要部署。国家为促进民营经济发展专门启动立法,传递出党和国家支持民营经济发展的坚定决心,将更好发挥法治固根本、稳预期、利长远的保障作用。
摘编自《人民日报》(2024年10月 11 日)
</code></pre>
<p><strong>(1)为什么要“坚持和落实’两个毫不动摇’”?</strong>  </p>
<ol>
<li><strong>公有制为主体,多种所有制经济共同发展等基本经济制度,是中国特色社会主义制度的重要支柱</strong>。坚持“两个毫不动摇”是坚持和完善社会主义基本经济制度的根本方针。坚持公有制为主体,就是坚持社会主义方向;励支持、引导非公有制经济发展是因为民营经济是我国经济制度的内在要素,民营企业和民营企业家是我们自己人。</li>
<li><strong>公有制经济和非公有制经济都是社会主义市场经济的重要组成部分,都是我国经济社会发展的重要基础</strong>。社会主义制度和市场经济有机结合、公有制经济和非公有制经济共同发展,是我们党推动解放和发展社会生产力的伟大创举。我国经济发展取得巨大成功的一个关键因素,就是我们既发挥了市场经济的长处,又发挥了社会主义制度的优越性。坚持“两个毫不动摇”是构建高水平社会主义市场经济体制的根本要求。</li>
<li><strong>党的二十届三中全会在坚持“两个毫不动摇”的基础上,进一步提出“落实”,在实践层面提出了要求</strong>。大会提出保证各种所有制经济依法平等使用生产要素、公平参与市场竞争、同等受到法律保护,以及制定民营经济促进法等,将进一步激发全社会内生动力和创新活力。<br><strong>(2)如何理解“国家为促进民营经济发展专门启动立法”?</strong><br>民营经济是推进中国式现代化的生力军,是高质量发展的<strong>重要基础</strong>,是推动我国全面建成社会主义现代化强国、实现第二个百年奋斗目标的<strong>重要力量</strong>。促进民营经济持续、健康、高质量发展,是党和国家一以贯之并将长期坚持的大政方针。党的十八大以来,党中央高度重视发展民营经济,采取一系列重大举措,民营经济在我国国民经济发展中的作用持续提升。随着民营经济持续发展壮大,为优化民营经济发展环境提供法治保障的重要意义日益凸显。为进一步优化民营经济发展环境,促进民营经济持续、健康、高质量发展,制定民营经济促进法已经成为进一步全面深化改革、推进中国式现代化的重要工作。法治是最好的营商环境。制定民营经济促进法,是落实党中央、国务院促进民营经济发展决策部署的<strong>重要举措</strong>,是以法治方式推动民营经济高质量发展的<strong>必然要求</strong>。这将让广大民营企业和企业家吃下“定心丸”,激发民营经济内生动力和创新活力。</li>
</ol>
<hr>
<p>36.结合材料回答问题:  </p>
<pre><code>“文化大革命”结束后,邓小平同志作为党的第二代中央领导集体的核心,带领党和人民成功开创了我国改革开放和社会主义现代化建设新时期,开创中国特色社会主义。-邓小平同志领导了伟大历史转折。
--邓小平同志推动实现了马克思主义中国化新的飞跃。
--邓小平同志带领党和人民开辟了社会主义现代化建设新局面。
--邓小平同志确立了实现祖国完全统一的正确路径。
--邓小平同志坚定捍卫了光辉的社会主义旗帜。对邓小平同志最好的纪念,就是把他开创的中国特色社会主义事业继续推向前进。我们要紧紧围绕以中国式现代化全面推进强国建设、民族复兴伟业这个中心任务,继往开来,奋发进取。摘自习近平《在纪念邓小平同志诞辰120周年座谈会上的讲话》
</code></pre>
<p><strong>(1)邓小平同志如何领导了伟大历史转折?</strong><br>在党和国家面临向何处去的重大历史关头,邓小平同志强调实事求是、群众路线、独立自主是毛泽东思想的精髓,旗帜鲜明反对“两个凡是”的错误观点,领导和支持开展真理标准问题的讨论,推动各方面的拨乱反正,号召全党全国人民团结一致向前看。在他指导下,党的十一届三中全会重新确立解放思想、实事求是的思想路线,停止使用“以阶级斗争为纲”的错误提法,作出把党和国家工作中心转移到经济建设上来、实行改革开放的历史性决策,实现了党的历史上具有深远意义的伟大转折。<br><strong>(2)怎样把中国特色社会主义事业继续推向前进?</strong>  </p>
<ol>
<li>要坚持守正创新,进一步全面深化改革</li>
<li>要紧紧抓住高质量发展这个首要任务,全面推进中国式现代化</li>
<li>要坚持人民至上,扎实推进共同富裕</li>
<li>要推进高水平对外开放,维护国家主权、安全、发展利益</li>
<li>要坚定不移推进全面从严治党,锻造更加坚强有力的马克思主义执政党。</li>
</ol>
<hr>
<p>37.结合材料回答问题:<br>材料 1  </p>
<pre><code>为进一步规范互联网新闻信息服务活动,提升主流新闻舆论影响力,营造清朗网络空间,中央网信办近日印发通知,部署开展为期3个月的“清朗·整治违规开展互联网新闻信息服务”专项行动。
据悉,本次专项行动针对违法违规开展互联网新闻信息服务行为,集中整治五类突出问题。
一是编发虚假不实新闻信息,使用与新闻信息内容严重不符的夸张标题,或者恶意篡改、断章取义、拼凑剪辑、合成伪造新闻信息,误导社会公众。二是借舆论监督名义,通过采编、发布、转载、删除新闻信息,干预新闻信息呈现或搜索结果等手段,威胁、要挟他人提供财物、开展商业合作,谋取不正当利益。三是仿冒、假冒新闻网站、报刊社、广播电视机构、通讯社等新闻单位,或者擅自使用“新闻”“报道”等具有新闻属性的名称、标识开设网站平台、注册账号、发布信息。四是未经许可或超越许可范围开展互联网新闻信息采编发布服务、转载服务、传播平台服务。未取得互联网新闻信息采编发布服务资质,违规开展新闻采访、发布新闻信息。五是伪造、倒卖、出租出借、转让互联网新闻信息服务许可资质。出售、出租或以其他形式委托第三方主体运营互联网新闻信息服务频道等。通过不正当手段、虚假材料等取得互联网新闻信息服务许可。
摘编自《人民日报》(2024年10月4日)
</code></pre>
<p>材料 2</p>
<pre><code>当前,信息技术革命日新月异,互联网为人民群众生产生活、交流交往、创新创造提供了新平台、新空间,也为推动文明继承和发展、促进文化弘扬与繁荣提供了新载体、新机遇。
党的十九届五中全会作出了“加强网络文明建设,发展积极健康的网络文化”的重要部署为“十四五”时期网络文明建设搭建制度框架。2021年,中共中央办公厅、国务院办公厅印发《关于加强网络文明建设的意见》,为新时代网络文明建设提供有力指导。
党的二十届三中全会审议通过的《中共中央关于进一步全面深化改革 推进中国式现代化的决定》,对健全网络综合治理体系作出系统部署。
近年来,我国积极推进网络文明建设,壮大网上主流舆论阵地,加强网络空间文化培育,深化网络生态治理,网络空间正能量更加充沛、主旋律更加高昂,全社会共建共享网上美好精神家园的氛围日渐浓厚。
摘编自《人民日报》(2024年8月28日)
</code></pre>
<p><strong>(1)为什么要持续开展“清朗”系列专项行动，营造清朗的网络空间?</strong><br>网络空间是虚拟的,但运用网络空间的主体是现实的。网络空间是亿万民众共同的精神家园。因此,网络空间也是公共领域,需要公共秩序。<strong>有序的公共生活是社会生产活动的重要基础,是提高社会成员生活质量的基本保障,是社会文明的重要标志</strong>。网络空间乌烟瘴气、生态恶化,不符合人民利益。网络空间不是法外之地。依法治理网络空间,是维护社会和谐稳定、维护公民合法权益、促进网络空间健康有序发展的必然之举和迫切需要。<br><strong>(2)如何让网络生态日渐清朗，共建网上美好精神家园?</strong><br>要让网络生态日渐清朗,既要靠法治,也要靠德治。<strong>法治和德治,是治国理政不可或缺的两种方式</strong>,忽视其中任何一个,都将难以实现国家的长治久安。只有让法治和德治共同发挥作用,才能使法律与道德相辅相成,法治与德治相得益彰,做到法安天下,德润人心。<strong>思想道德和法律都是调节人们思想行为、协调人际关系、维护社会秩序的重要手段</strong>。网络空间的治理既要重视发挥道德的教化作用,提高全社会文明程度,为网络空间的治理创造良好环境;又要把道德要求贯彻到法治建设中,以法治承载道德理念,坚持依法治网和以德润网相结合,以时代新风塑造和净化网络空间,共建网上美好精神家园  </p>
<hr>
<p>38.结合材料回答问题:  </p>
<pre><code>国家主席习近平在同美国总统拜登通电话时指出,2023年11月,我和总统先生在旧金山会晤,开启了面向未来的“旧金山愿景”。这几个月,双方团队认真落实我们达成的共识,中美关系出现企稳态势,受到两国各界和国际社会欢迎。另一方面,两国关系中的消极因素也有所增加需要引起双方重视。
习近平强调,战略认知问题始终是中美关系必须扣好的“第一粒纽扣”。中美这样两个大国,不能不来往、不打交道,更不能冲突对抗,应该相互尊重、和平共处、合作共赢,继续沿着稳定健康、可持续的道路向前走,而不应该走回头路。
习近平强调,美国针对中国的经贸科技打压措施层出不穷,制裁中国企业的单子越拉越长这不是“去风险”,而是制造风险。如果美方愿意开展互利合作,共享中国发展的红利,中方的大门始终是敞开的;如果美方执意打压中国的高科技发展,剥夺中国的正当发展权利,我们也不会坐视不管。
摘编自《人民日报》(2024年4月3日)
</code></pre>
<p><strong>(1)为什么说“战略认知问题始终是中美关系必须护好的’第一粒纽扣’”</strong><br>所谓战略认知问题,就是如何看待对方的发展问题,也就是首先要回答好中美到底是对手还是伙伴这个管总的问题。中国多次强调,地球足够大,容得下中美两国共同发展、各自繁荣。中国乐见一个自信开放、繁荣发展的美国。希望美国也能积极正面看待中国的发展。这个根本问题解决了,“第一粒纽扣”扣好了,中美关系才会真正稳下来、好起来、向前走。<br><strong>(2)建交45年来中美关系历经的风风雨雨给了我们怎样的重要启示?</strong><br>中美两国应该做伙伴,而不是当对手;应该彼此成就,而不是互相伤害;应该求同存异,而不是恶性竞争;应该言必信、行必果,而不是说一套、做一套。中国提出相互尊重、和平共处、合作共赢三条大原则,既是过去经验的总结,也是走向未来的指引。  </p>
]]></content>
      <categories>
        <category>考研政治</category>
      </categories>
  </entry>
  <entry>
    <title>肖四大题总结</title>
    <url>/2024/12/12/%E8%80%83%E7%A0%94%E6%94%BF%E6%B2%BB/%E8%82%96%E5%9B%9B%E5%A4%A7%E9%A2%98%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="34题总结"><a href="#34题总结" class="headerlink" title="34题总结"></a>34题总结</h1><h2 id="第一套"><a href="#第一套" class="headerlink" title="第一套"></a>第一套</h2><h3 id="为什么要坚持守正创新"><a href="#为什么要坚持守正创新" class="headerlink" title="为什么要坚持守正创新"></a>为什么要坚持守正创新</h3><ol>
<li>守正才能不迷失方向，不犯颠覆性错误；创新才能把握时代，引领时代。守正创新提供了科学的立场、观点、方法。</li>
<li>坚持守正不动摇：守正就是坚持实事求是，坚持真理性认识，坚持政治正确</li>
<li>坚持创新不停步：创新就是坚持解放思想，破除旧观念、旧模式、旧思维，发展并运用新联系、新属性、新规律</li>
<li>守正创新是辩证统一的：二者相辅相成，守正是创新的前提与基础，创新是守正的目的与路径。守正创新体现了“变”与“不变”，继承与发展的辩证统一关系。</li>
</ol>
<h3 id="如何理解“破”与“立”的辩证统一关系"><a href="#如何理解“破”与“立”的辩证统一关系" class="headerlink" title="如何理解“破”与“立”的辩证统一关系"></a>如何理解“破”与“立”的辩证统一关系</h3><ul>
<li>事物的发展是通过其内在矛盾运动以自我否定的方式发展的，这就要求我们掌握“破”与“立”的辩证统一关系，“破”与“立”深刻体现了联系与发展，守正与创新，肯定与否定的辩证思维。</li>
<li>“破”与“立”是对立统一的：“破”就是突破陈旧，拥有辩证的否定精神，敢于破除已经被实践证明的东西是错误的；“立”就是紧跟时代步伐，秉承创新精神，大力推进各方面创新。“破”与“立”作为矛盾的对立面相互依存，相互贯通，在事物的发展中都具有重要作用。有破无立、只立不破都会出现问题。只有立得住，才能破的好；只有破得彻底，才能为更好立创造条件。</li>
</ul>
<h2 id="第二套"><a href="#第二套" class="headerlink" title="第二套"></a>第二套</h2><h3 id="如何理解生产力与生产关系的相互关系"><a href="#如何理解生产力与生产关系的相互关系" class="headerlink" title="如何理解生产力与生产关系的相互关系"></a>如何理解生产力与生产关系的相互关系</h3><ul>
<li>唯物史观认为，生产力与生产关系是相对统一的有机体。生产力决定生产关系，生产关系反作用于生产力。生产关系对生产力能动的反作用主要表现在两种情形：当生产关系适合生产力发展的客观要求时，对生产力发展起促进作用；当生产关系不适合于生产力发展的客观要求时，就会阻碍生产力发展。</li>
<li>生产关系一定要是和生产力状况是社会形态变化的普遍规律，当生产关系不能适应生产力发展的要求时，人们需要变革旧的生产关系，建立新的生产关系，以适应生产力的发展。</li>
</ul>
<h3 id="如何理解矛盾的普遍性和特殊性"><a href="#如何理解矛盾的普遍性和特殊性" class="headerlink" title="如何理解矛盾的普遍性和特殊性"></a>如何理解矛盾的普遍性和特殊性</h3><ul>
<li>矛盾具有普遍性和特殊性。矛盾的特殊性即各个具体事物之间的矛盾，每一个矛盾的不同方面在发展的不同阶段各有其特点。矛盾的特殊性决定事物的不同性质，只有具体分析矛盾的特殊性，才能认清事物的本质和发展规律。</li>
<li>运用唯物辩证法的矛盾分析方法研究问题和解决问题，这就要求我们善于分析矛盾的特殊性，坚持具体问题具体分析。任何事物都是共性与个性的统一，也就是矛盾的普遍性和特殊性的统一。因此，必须从实际出发，因地制宜。</li>
</ul>
<h3 id="如何理解理论创新和实践创新的良性互动"><a href="#如何理解理论创新和实践创新的良性互动" class="headerlink" title="如何理解理论创新和实践创新的良性互动"></a>如何理解理论创新和实践创新的良性互动</h3><ul>
<li>人们的创新活动主要包括理论创新和实践创新。实践创新为理论创新提供不竭的动力源泉，理论创新为实践创新提供科学的行动指南。我们要努力实现理论创新与实践创新的良性互动。</li>
<li>理论必须同实践相统一，理论创新不仅要以实践创新为基础，还要以科学的指导作用“反哺”实践</li>
</ul>
<h2 id="第三套"><a href="#第三套" class="headerlink" title="第三套"></a>第三套</h2><h3 id="如何用发展的眼光看待发展中的问题"><a href="#如何用发展的眼光看待发展中的问题" class="headerlink" title="如何用发展的眼光看待发展中的问题"></a>如何用发展的眼光看待发展中的问题</h3><ol>
<li>发展的观点是唯物辩证法的总观点之一。唯物辩证法认为，世间上的万事万物都是普遍联系和变化发展的。物质世界都处于永恒的运动之中，而物质世界的运动内在地包含着事物的联系和发展的。</li>
<li>发展是前进向上的运动，事物的发展包含着新事物的产生和旧事物的灭亡，我们应该联系地而不是孤立地、发展地而不是静止地、全面地而不是片面地、系统地而不是零碎地看待问题。</li>
<li>事物的发展是前进性与曲折性相统一的过程。我们要用发展的眼光看待发展中的问题，在应对挑战和解决矛盾中推进社会发展。</li>
</ol>
<h3 id="科学技术的作用，真理尺度和价值尺度相统一"><a href="#科学技术的作用，真理尺度和价值尺度相统一" class="headerlink" title="科学技术的作用，真理尺度和价值尺度相统一"></a>科学技术的作用，真理尺度和价值尺度相统一</h3><ul>
<li>科学技术是先进生产力的重要标志，是推进社会文明进步的重要力量。但是科学技术是一把“双刃剑”，在造福社会的同时，也会产生一些消极作用和影响。科学技术的作用不仅受到一些客观条件如制度作用、利益关系等的影响，也会受到一些主观条件如人们的观念和认识水平的影响。</li>
<li>人们的实践活动受到真理尺度和价值尺度的制约，任何成功的实践是真理尺度和价值尺度的统一，也就是合规律性的和合目的性的统一。在实践中努力达到真理尺度和价值尺度相统一。</li>
</ul>
<h2 id="第四套"><a href="#第四套" class="headerlink" title="第四套"></a>第四套</h2><h3 id="如何坚持问题导向"><a href="#如何坚持问题导向" class="headerlink" title="如何坚持问题导向"></a>如何坚持问题导向</h3><ol>
<li>坚持问题导向，是习近平新时代中国特色社会主义的重要方法，是辩证唯物主义的矛盾观点和矛盾分析方法的时代表达和时代升华</li>
<li>问题是事物矛盾的表现形式，发现了问题等同于抓住事物的矛盾。坚持问题导向，从理论上要承认矛盾的普遍性和客观性；从实际上把解决实际问题为突破口。</li>
<li>要善于发现问题，正视问题，灵活运用科学思维方法解决问题</li>
</ol>
<h3 id="战略思维能力、系统思维能力、现实与可能的转化"><a href="#战略思维能力、系统思维能力、现实与可能的转化" class="headerlink" title="战略思维能力、系统思维能力、现实与可能的转化"></a>战略思维能力、系统思维能力、现实与可能的转化</h3><ul>
<li>战略思维能力强调整体性、全局性、长期性，是高瞻远瞩、统揽全局、善于把握问题发展的总体趋势和方向的能力。提高战略思维能力，要站在战略和全局的高度观察和处理问题，透过现象把握事物的本质与发展规律，做到抓住重点又统筹兼顾，立足当前又放眼长远</li>
<li>坚持系统观念，提高系统思维能力，要把握好全局与局部、当前与长远、主要矛盾与次要矛盾、特殊与一般的同一关系；把近期、中期、远期目标统筹起来规划；加强前瞻性思考、全局性谋划和战略性布局。</li>
<li>现实蕴含着未来的发展方向，会不断产生新的可能。可能包含着发展成现实的因素和根据。一旦主客观因素成熟，可能就会转化为现实。</li>
</ul>
<h1 id="35题总结"><a href="#35题总结" class="headerlink" title="35题总结"></a>35题总结</h1><h2 id="第一套-1"><a href="#第一套-1" class="headerlink" title="第一套"></a>第一套</h2><h3 id="推动新质生产力加快发展既是发展命题，也是改革命题"><a href="#推动新质生产力加快发展既是发展命题，也是改革命题" class="headerlink" title="推动新质生产力加快发展既是发展命题，也是改革命题"></a>推动新质生产力加快发展既是发展命题，也是改革命题</h3><ol>
<li>是发展命题，坚持高质量发展是新时代的硬道理，推动新质生产力发展是高质量发展的内在要求和重要着力点.<br>新时代下高质量发展取得显著成效，同时制约因素还大量存在。新质生产力是创新起主导作用、符合新发展理念的先进生产力质态.只有坚持新质生产力的发展，才能实现质的有效提升和量的合理增长，更好满足人民需求.</li>
<li>是改革命题，生产关系必须与生产力要求相适应.<br> 新质生产力的特点是创新，关键在于质优，本质是先进生产力。尤其需要与之匹配的科学机制，与之适应的发展环境，尤其需要以改革创新为持久动能。坚持以进一步全面深化改革为动力，着力打通堵点卡点，形成与之更好适应的生产关系.</li>
</ol>
<h3 id="加快实现高水平科技自立自强"><a href="#加快实现高水平科技自立自强" class="headerlink" title="加快实现高水平科技自立自强"></a>加快实现高水平科技自立自强</h3><ul>
<li>科技自立自强是全面、准确、完整贯彻新时代发展理念，构建新发展格局和推动高质量发展的本质要求。</li>
<li>科技自立自强是应对风险挑战、维护国家安全的现实之需。必须加快推进高水平科技自立自强，解决“卡脖子”问题，把发展的主动权牢牢掌握在自己手中。</li>
<li>科技自立自强是抓住新一轮科技革命和产业变革重大机遇的必然选择。如今，世界科技创新进入空前密集活跃期。我们必须加快推进科技自立自强，在全球科技竞争中抢先一步，赢得国家发展和安全的主动。</li>
</ul>
<h2 id="第二套-1"><a href="#第二套-1" class="headerlink" title="第二套"></a>第二套</h2><h3 id="构建高水平社会主义市场经济体制是中国式现代化的重要保障"><a href="#构建高水平社会主义市场经济体制是中国式现代化的重要保障" class="headerlink" title="构建高水平社会主义市场经济体制是中国式现代化的重要保障"></a>构建高水平社会主义市场经济体制是中国式现代化的重要保障</h3><p>全面建设中国特色社会主义现代化强国，需要高水平社会主义市场经济体制持续提供制度保障和动力保障。<br>构建高水平社会主义市场经济体制是—  </p>
<ul>
<li>高质量发展的需要。高质量发展面临的突出问题依然是发展不平衡不充分，政府和市场的关系尚需进一步理顺。构建高水平社会主义市场经济体制的核心是处理好政府和市场的关系，是有效市场和有为政府相结合，使资源配置效率最优化和效益最大化，既“放的活”，又“管的住”</li>
<li>是高品质生活的需要。充分发挥市场在资源配置中的决定性作用，是提升供给质量的重要基础和根本途径。</li>
<li>是百年变局加快演进赢得战略主动的需要。进一步完善社会主义市场经济体制，以制度的稳定性对冲外部环境的不确定性。</li>
<li>是完善和发展中国特色社会主义制度，推进国家治理体系和治理能力现代化的需要。</li>
</ul>
<h3 id="坚持改革和开放相统一"><a href="#坚持改革和开放相统一" class="headerlink" title="坚持改革和开放相统一"></a>坚持改革和开放相统一</h3><p>坚持改革和开放相统一，这是进一步深化改革的必然选择.  </p>
<ul>
<li>改革和开放相辅相成，相互深入。改革越深入，对开放的要求越高；开放水平越高，对改革的促进作用越大。进一步全面深化改革，必须坚持从改革中要动力，从开放中要活力。</li>
<li>开放是中国式现代化的鲜明标志，以开放促改革、促发展是我国发展不断取得显著成效的宝贵经验。进一步全面深化改革，必须加快构建更高水平开放型经济新体制。以高水平开放促进深层次改革和高质量发展。</li>
</ul>
<h2 id="第三套-1"><a href="#第三套-1" class="headerlink" title="第三套"></a>第三套</h2><h3 id="坚持和落实“两个毫不动摇”"><a href="#坚持和落实“两个毫不动摇”" class="headerlink" title="坚持和落实“两个毫不动摇”"></a>坚持和落实“两个毫不动摇”</h3><ul>
<li>以公有制为主体，多种所有制经济共同发展等基本经济制度，是中国特色社会主义制度的重要支柱。</li>
<li>公有制经济和非公有制经济是我国社会主义市场经济制度的重要组成部分，是我国经济发展的重要基础。公有制主体地位不动摇，是我国各族人民共享发展成果的制度性保障，也是巩固党的领导地位，坚持中国社会主义制度的重要保障。民营经济是非公有制经济的重要组织形式，是推进中国式现代化的生力军，是高质量发展的重要基础，只能壮大，不能弱化。</li>
<li>党的二十届三中全会在坚持“两个毫不动摇”的基础上，进一步提出了“落实”，在实践层面上提出了新要求，将进一步激发全社会内在动力和创新活力。</li>
</ul>
<h3 id="实现高质量发展和高水平安全良性互动"><a href="#实现高质量发展和高水平安全良性互动" class="headerlink" title="实现高质量发展和高水平安全良性互动"></a>实现高质量发展和高水平安全良性互动</h3><ul>
<li>实现高质量发展和高水平安全良性互动，为进一步正确认识和处理好发展和安全的关系指明了方向。以高质量发展夯实高水平安全，以高水平安全保障高质量发展</li>
<li>发展解决的是动力问题，是推行国家和民族赓续绵延的根本保证；安全解决的是保障问题，是确保国家和民族行稳致远的坚强柱石</li>
<li>发展具有基础性、根本性，是解决安全问题的总钥匙；安全是发展的前提和保障，国家安全是中国式现代化行稳致远的重要基础</li>
<li>发展和安全是一体之两翼，驱动之双轮。以发展促安全，以安全保发展，实现高质量发展和高水平安全良性互动</li>
</ul>
<h2 id="第四套-1"><a href="#第四套-1" class="headerlink" title="第四套"></a>第四套</h2><h3 id="以人民为中心推进改革"><a href="#以人民为中心推进改革" class="headerlink" title="以人民为中心推进改革"></a>以人民为中心推进改革</h3><ul>
<li>改革是为了人民。人民立场是中国共产党的政治立场，也是我们党区别于其他政党的显著标志。为中国人民谋幸福，为中华民族谋复兴，是我们中国共产党人的初心和使命，也是改革的初心和使命。改革的根本目的，就是要促进社会更加公平正义，让改革发展的成果更多更公平惠及全体人民。</li>
<li>改革依靠人民。人民是历史的创造者，是决定党和国家前途命运的根本力量，是改革的主力军。正是因为仅仅依靠人民推行改革，我们才能在奋斗中续写“两个奇迹”的新篇章。</li>
</ul>
<h3 id="社会治理现代化和加强城乡社区治理能力"><a href="#社会治理现代化和加强城乡社区治理能力" class="headerlink" title="社会治理现代化和加强城乡社区治理能力"></a>社会治理现代化和加强城乡社区治理能力</h3><ul>
<li>社会治理现代化是推动国家治理体系和治理能力现代化的重要内容。坚持系统治理、依法治理、综合治理、源头治理，探索一条符合中国实际发展的中国特色社会主义社会治理之路。</li>
<li>基层治理是国家治理的基石，是党和政府联系、服务全体居民的“最后一公里”。社会治理的重心必须向基层下移，落实到城乡社区。尤其要努力用调节的办法解决人民内部矛盾，及时把矛盾纠纷化解在基层、化解在萌芽状态。</li>
<li>对中华优秀传统文化坚持创新性转化、创新型发展，打牢社会发展的文化根基。</li>
</ul>
<h1 id="36题总结"><a href="#36题总结" class="headerlink" title="36题总结"></a>36题总结</h1><h2 id="第一套-2"><a href="#第一套-2" class="headerlink" title="第一套"></a>第一套</h2><h3 id="从“发展才是硬道理”到“把高质量发展作为新时代的硬道理”"><a href="#从“发展才是硬道理”到“把高质量发展作为新时代的硬道理”" class="headerlink" title="从“发展才是硬道理”到“把高质量发展作为新时代的硬道理”"></a>从“发展才是硬道理”到“把高质量发展作为新时代的硬道理”</h3><ul>
<li>改革初期，生产力发展水平较低，改革的核心任务是解放和发展生产力。促进经济快速发展。尽快提高人民生活需要水平和增强国家经济实力，首先需要解决“有没有”问题。</li>
<li>进入新时代，社会主要矛盾发生变化，发展的矛盾和问题集中体现在发展质量上，发展的问题从“有没有”转向“好不好”。把高质量发展作为新时代的硬道理，是我国进入新阶段，应对纷繁复杂的国际环境，满足人民日益增长的美好生活需要的内在要求</li>
</ul>
<h3 id="中国式现代化在改革开放中不断推进并开辟广阔前景"><a href="#中国式现代化在改革开放中不断推进并开辟广阔前景" class="headerlink" title="中国式现代化在改革开放中不断推进并开辟广阔前景"></a>中国式现代化在改革开放中不断推进并开辟广阔前景</h3><p>改革开放是党带领人民大跨步赶上时代的重要法宝，是决定国家前途命运的关键一招。改革开放只有进行时，没有完成时。  </p>
<ul>
<li>中国式现代化在改革开放中不断推进。党的十一届三中全会是划时代的，做出实行改革开放的历史性决策，开启了改革开放和社会主义建设的新时期。党带领人民推进改革开放，为中国式现代化提供了充满新的活力的制度保障和快速发展的物质条件。党的十八届三中全会也是划时代的，实现了局部探索、破冰突围到系统集成、全面深化的转化，开启了我国改革开放的新局面。党和国家取得历史性成就，不断推进历史性发展，为中国式现代化提供了更加完善的制度保障，更加坚实的物质基础，更加主动的精神力量。</li>
<li>中国式现代化在改革开放中不断开辟广阔前景。进入新时期新阶段，根本力量依然是改革开放，要用足用好改革开放这关键一招。在以推进中国式现代化强国建军、民族复兴伟业的关键时期，我们党召开了二十届三中全会。党中央围绕中国式现代化作出进一步全面深化改革的总体部署。进一步全面深化改革，将推动生产关系和生产力、上层建筑和经济基础、国家治理和社会发展相适应，为中国式现代化提供强大动力和制度保障。</li>
</ul>
<h2 id="第二套-2"><a href="#第二套-2" class="headerlink" title="第二套"></a>第二套</h2><h3 id="进一步全面深化改革既是中国式现代化的实践篇章，又是时代篇章"><a href="#进一步全面深化改革既是中国式现代化的实践篇章，又是时代篇章" class="headerlink" title="进一步全面深化改革既是中国式现代化的实践篇章，又是时代篇章"></a>进一步全面深化改革既是中国式现代化的实践篇章，又是时代篇章</h3><ul>
<li>实践篇章：党的二十届三中全会提出进一步全面深化改革的总目标和总方向是继续坚持和完善中国特色社会主义制度，推进国家治理体系和治理能力现代化。这个总目标与党的十八届三中全会所提出的全面深化改革的总目标一脉相承，又与党的二十大所做出的战略部署相衔接。从“全面深化改革”到“进一步全面深化改革”，既一脉相承又与时俱进。</li>
<li>时代篇章：中国式现代化是在改革开放中不断推进，也是在改革开放中不断开辟广阔前景。党的二十届三中全会紧紧围绕中国式现代化，必须着力抓住推进中国式现代化的重大体制机制问题谋划改革，为中国式现代化提供强大动力和制度保障。</li>
</ul>
<h3 id="进一步全面深化改革要坚持以制度建设为主线"><a href="#进一步全面深化改革要坚持以制度建设为主线" class="headerlink" title="进一步全面深化改革要坚持以制度建设为主线"></a>进一步全面深化改革要坚持以制度建设为主线</h3><ul>
<li>制度是关乎党和国家事业发展的根本性、全局性、稳定性、长期性问题</li>
<li>这是改革开放经验的深刻总结。加强和完善制度建设，是我们党治党治国的优良传统，也是改革开放以来基本经验和规律的深刻总结。</li>
<li>这是中国式现代化的现实需要。制度优势是一个党、一个国家的最大优势。制度现代化是国家现代化的根本保障，也是一个国家现代化的重要标志。</li>
<li>是进一步全面深化改革的内在需求。进一步全面深化改革的总目标是继续坚持和完善中国特色社会主义制度，推进国家治理体系和治理能力现代化。</li>
</ul>
<h2 id="第三套-2"><a href="#第三套-2" class="headerlink" title="第三套"></a>第三套</h2><h3 id="人民代表大会制度的历史渊源和显著优势"><a href="#人民代表大会制度的历史渊源和显著优势" class="headerlink" title="人民代表大会制度的历史渊源和显著优势"></a>人民代表大会制度的历史渊源和显著优势</h3><ol>
<li>近代以来，中国尝试了多种制度模式，但都以失败告终。新民主主义革命时期党提出了人民代表大会制度构想，新中国成立之后，确立了人民民主专政的国体和人民代表大会制度的政体。改革开放以来特别是党的十八大三中全会以来，人民代表大会制度不断完善、不断定型，逐渐成为中国特色社会主义伟大实践.</li>
<li>人民代表大会制度是坚持党的领导，人民当家做主和全面依法治国相统一的根本政治制度安排，是我国实现全过程人民民主的重要制度保障。人民代表大会制度具有以下优势：坚持中国共产党的领导，确保党带领人民依法有效治理国家的显著优势；践行全过程人民民主，保障人民当家做主的显著优势；贯彻民主集中制，确保国家政治生活既充满活力又安定有序的显著优势；保障全面依法治国，实现国家各方面工作法治化的显著优势；维护国家统一，确保国家长治久安的显著优势。</li>
<li>70年来，人民代表大会制度已经展现了强大的先进性和巨大制度优势，为创造我国经济迅速发展新奇迹和社会长期稳定新奇迹提供了制度保障。</li>
</ol>
<h3 id="人民政协在各个历史时期的作用"><a href="#人民政协在各个历史时期的作用" class="headerlink" title="人民政协在各个历史时期的作用"></a>人民政协在各个历史时期的作用</h3><ol>
<li>完成新中国成立的任务，是由人民政治协商会议第一次全体会议共同承担的（代行人民代表大会职权，为新中国诞生做了全面准备）人民政协会议的召开，标志着中国共产党领导的多党合作和政治协商制度的成立。</li>
<li>1954年，全国人民代表大会召开，人民政协作为多党合作和政治协商的重要政协机构，作为统一战线组织继续发挥重要作用</li>
<li>新时期以来，人民政协作为中国共产党领导的重要政治组织，有利于保障人民当家做主的权利，更好保障最广大人民的整体利益、根本利益、长期利益；作为最广泛的爱国统一战线组织，有利于最大程度把全体中华儿女的智慧和力量汇聚起来；作为社会主义协商民主的重要渠道和专门协商机构，有利于科学决策，有效施策，提升国家治理效能。</li>
</ol>
<h3 id="全过程人民民主"><a href="#全过程人民民主" class="headerlink" title="全过程人民民主"></a>全过程人民民主</h3><ul>
<li>我国全过程人民民主，实现了过程民主和结果民主，程序民主和实质民主，直接民主和间接民主，人民民主和国家意志相统一，是全链条、全方位、全覆盖的民主，是最广泛、最真实、最管用的社会主义民主。</li>
<li>协商民主是我国社会主义民主政治的特有形式和独特优势，是实践全过程人民民主的重要形式。协商民主和选举民主相互互补、相得益彰，共同构成了社会主义民主政治的制度优势和保障。</li>
</ul>
<h2 id="第四套-2"><a href="#第四套-2" class="headerlink" title="第四套"></a>第四套</h2><h3 id="党的自我革命"><a href="#党的自我革命" class="headerlink" title="党的自我革命"></a>党的自我革命</h3><ul>
<li>毛泽东提出“两个务必”，是因为中国共产党即将成为执政党，面临了一个严峻问题：能否迎接好全国执政的新考验，建设什么样的长期执政的马克思主义执政党，怎样建设长期执政的马克思主义执政党，是我们党必须回答好的重大时代命题。</li>
<li>勇于自我革命，是我们党区别于其他政党的显著标志，是我们党的最大优势，最鲜明的品格。我们党没有任何自我的特殊利益，这是我们当自我革命的勇气之源，底气所在；我们党拥有高度自信，勇于直面困难，勇于坚持真理性认识，勇于修正错误；我们党立志于中华民族伟大复兴秋业，在革命性锻炼中永葆青春活力。</li>
</ul>
<h3 id="跳出历史周期律"><a href="#跳出历史周期律" class="headerlink" title="跳出历史周期律"></a>跳出历史周期律</h3><ul>
<li>跳出历史周期律是关系我们党千秋伟业的重大问题，关系党的生死存亡，关系国家社会主义的兴盛衰败。毛泽东给出了第一个答案，就是“让人民监督政府”；百年之后，党给出了另一个答案，就是自我革命。全面从严治党是我们党自我革命的伟大实践，开启了百年大党自我革命的新局面。党成立以来，向外依靠人民民主，接受人民的监督，向内依靠全面从严治党，推进自我革命，保证党长盛不衰、不断发展壮大。</li>
<li>“以跳出历史周期律为战略目标”彰显了党的自我革新、自我净化、自我完善、自我提高的高度自觉，体现了对严峻挑战的清醒认识，对初心使命的执着坚守。</li>
</ul>
<h1 id="37题总结"><a href="#37题总结" class="headerlink" title="37题总结"></a>37题总结</h1><h2 id="第一套-3"><a href="#第一套-3" class="headerlink" title="第一套"></a>第一套</h2><h3 id="中华优秀传统文化"><a href="#中华优秀传统文化" class="headerlink" title="中华优秀传统文化"></a>中华优秀传统文化</h3><ul>
<li>中华优秀传统文化已经深入全民族的思维方式、价值观念、行为方式和风俗习惯之中，具有重要的当代价值</li>
<li>中华优秀传统美德是中华文化的精髓，蕴含着丰富的思想道德资源</li>
<li>要加强对中华优秀传统文化的挖掘和阐发，努力实现对中华优秀传统文化的创新性转化、创新性发展，用中华优秀传统文化滋养社会主义大的建设</li>
</ul>
<h3 id="人生追求"><a href="#人生追求" class="headerlink" title="人生追求"></a>人生追求</h3><ul>
<li>该材料体现了“服务人民，奉献社会”的高尚人生追求</li>
<li>服务人民、奉献社会的思想以科学而高尚的品质，代表了最先进的人生追求，指明了应该确立的人生目标和方向</li>
<li>青少年应该向英雄模范学习，把为国家和人民事业无私奉献作为人生的最高追求。</li>
</ul>
<h2 id="第二套-3"><a href="#第二套-3" class="headerlink" title="第二套"></a>第二套</h2><h3 id="个人理想与社会理想"><a href="#个人理想与社会理想" class="headerlink" title="个人理想与社会理想"></a>个人理想与社会理想</h3><ol>
<li>要坚持个人理想和社会理想相结合，把个人理想融入于社会理想之中，在为社会理想奋斗的过程中努力实现个人理想。</li>
<li>个人理想要以社会理想为指引，个人理想从属于社会理想，个人理想只有同国家前途、民族命运相结合才可能实现。社会理想是个人理想的汇聚和升华，得其大者可以兼其小，青少年要在实现社会理想的过程中努力实现个人理想<br>另一角度：<br>人的自我价值和社会价值既相互区别，又密切联系、相互依存。人的自我价值是个人生存和发展的必要条件，是为社会创造更大价值的前提。社会价值是社会生存和发展的重要条件，是个体自我完善、全面发展的保障</li>
</ol>
<h3 id="树立正确的就业观"><a href="#树立正确的就业观" class="headerlink" title="树立正确的就业观"></a>树立正确的就业观</h3><ol>
<li>要树立崇高的职业理想，要服务于社会发展的需要，把个人对理想的期望与社会的需要、现实的可能相结合。要积极响应国家号召。牢固树立美好生活是靠劳动创造出来的理念。</li>
<li>要把实现理想的道路建立在脚踏实地的奋斗中，要立鸿鹄之志，做奋斗者；要心怀国之大者，敢于担当；要自觉躬身实践，知行合一</li>
</ol>
<h2 id="第三套-3"><a href="#第三套-3" class="headerlink" title="第三套"></a>第三套</h2><h3 id="新时代中国精神"><a href="#新时代中国精神" class="headerlink" title="新时代中国精神"></a>新时代中国精神</h3><ol>
<li>以伟大创造精神、伟大奋斗精神、伟大团结精神、伟大梦想精神为核心的新时代中国精神。</li>
<li>中国精神是兴国强国之魂，是凝聚中国力量的精神纽带、激发创新创造的精神动力、推进民族复兴伟业的精神支柱。要大力弘扬以爱国主义为核心的民族精神和以改革创新为核心的时代精神，振奋起中华民族精气神<br>爱国主义体现了人们对祖国的深厚感情，是调节个人和国家关系的道德要求、政治原则和法律规范，激发中华儿女为祖国繁荣发展不懈奋斗。<br>要弘扬以改革创新为核心的时代精神，要树立突破陈规、大胆探索、敢于创造的思想观念，要培养不甘落后、奋勇争先、追求进步的责任感和使命感，要保持坚韧不拔、自强不息，锐意进取的精神状态。</li>
<li>青少年要肩负历史使命，坚定前进自信，立大志、明大德、成大才、担大任，努力成为堪当民族伟业复兴的时代新人</li>
</ol>
<h3 id="缅怀英烈事迹，传承英烈精神"><a href="#缅怀英烈事迹，传承英烈精神" class="headerlink" title="缅怀英烈事迹，传承英烈精神"></a>缅怀英烈事迹，传承英烈精神</h3><ol>
<li>新时代呼唤英雄，造就英雄。英雄辈出，党和国家才能兴旺发达，长盛不衰。</li>
<li>缅怀英烈事迹，传承英烈精神，会转化为爱国情，强国志，报国行的内生动力，让爱国主义和革命英雄主义成为引人前进，催人奋斗的强大精神动力。</li>
</ol>
<h3 id="英雄模范作用-人生价值"><a href="#英雄模范作用-人生价值" class="headerlink" title="英雄模范作用 人生价值"></a>英雄模范作用 人生价值</h3><ol>
<li>评价人生价值的根本尺度，在于看一个人的实践活动是否符合社会发展的客观规律，是否促进历史进步。在今天，衡量人生价值的标准，重要的是看一个人是否用自己的劳动和聪明才智为国家和社会真诚奉献，为人民群众尽心尽力服务。</li>
<li>社会实践是实现人生价值的必由之路，要胸怀强国之志，锤炼强国之技，勇建强国之功</li>
</ol>
<h2 id="第四套-3"><a href="#第四套-3" class="headerlink" title="第四套"></a>第四套</h2><h3 id="改革与法治相结合"><a href="#改革与法治相结合" class="headerlink" title="改革与法治相结合"></a>改革与法治相结合</h3><ul>
<li>改革与法治如鸟之两翼，车之双轮相互依存，缺一不可，必须一体考虑、协同推进、不可偏废</li>
<li>法律的完善离不开改革的推进，而改革的深化必须依靠法律的保障。以改革治理完善法制，进一步深化法制领域改革，维护社会公平正义，护航经济社会发展；要依靠法制排除改革阻力，巩固改革发成果的积极作用，持续释放改革发展红利。在改革中完善法制，就是要将改革成果及时上升为法律制度；在法制中推行改革，必须要善于运用法律思维和法律方法推进改革，做到重大改革于法有据。</li>
<li>改革是发展的不竭动力，法治是治国理政的重要方法。坚持改革和法治相统一，努力实现二者相得益彰、良性互动，才能不断开创改革开放发展新局面。</li>
</ul>
<h3 id="网络空间-诚信经营"><a href="#网络空间-诚信经营" class="headerlink" title="网络空间 诚信经营"></a>网络空间 诚信经营</h3><ul>
<li>网络空间也是公共领域，需要安定的社会公共秩序。有序的公共生活是社会发展活动的重要基础，是提升社会成员生活质量的基本保障，是社会文明的重要标志，网络空间不是法外之地</li>
<li>诚信是个人立身处世的重要价值规范，是社会存续发展的基本价值基石，现实社会是诚信社会，市场经济应是信用经济；同时，诚信也是职业生活中的道德规范，要求从业者诚信劳动、合法经营、信守承诺、讲究信用。</li>
</ul>
<h1 id="38题总结"><a href="#38题总结" class="headerlink" title="38题总结"></a>38题总结</h1><h2 id="第一套-4"><a href="#第一套-4" class="headerlink" title="第一套"></a>第一套</h2><h3 id="文明互鉴、文明交流对于构建人类命运共同体的意义"><a href="#文明互鉴、文明交流对于构建人类命运共同体的意义" class="headerlink" title="文明互鉴、文明交流对于构建人类命运共同体的意义"></a>文明互鉴、文明交流对于构建人类命运共同体的意义</h3><ol>
<li>构建人类命运共同体，就是要携手全世界各国人民共同建设持续和平、普遍安全、共同繁荣、开放包容、清洁美丽的世界。要建设开放包容的世界，就是要坚持交流互鉴，促进和而不同、兼收并蓄的文明交流，为人类文明进步实现创造性转化。</li>
<li>文明交流是文明发展的本质要求，是推动人类社会文明进步和促进世界和平与发展的重要动力。践行全球文明倡议，坚持平等、互鉴、对话、包容的文明观，以文明交流超越文明隔阂，以文明互鉴超越文明冲突，推动世界朝着人类命运共同体发展。</li>
</ol>
<h3 id="中国力量每增长一分，世界和平希望就增多一分"><a href="#中国力量每增长一分，世界和平希望就增多一分" class="headerlink" title="中国力量每增长一分，世界和平希望就增多一分"></a>中国力量每增长一分，世界和平希望就增多一分</h3><ul>
<li>中国始终走和平发展道路，始终是维护世界和平的重要力量。中国始终秉持公道正义，不断壮大世界和平的力量</li>
<li>中华民族是爱好和平的民族，中国文化具有突出的和平性，中国式现代化是走和平发展道路的现代化。</li>
<li>中国提出人类命运共同体，着眼解决当前世界发展的现实问题、实现人类社会和平永续发展，秉持合作发展的理念，开辟出和平发展、共建共享的发展新道路，为人类发展提供了新的选择。</li>
<li>中国提出全球安全倡议，倡导走出一条对话而不对抗、结伴而不结盟、共赢而非零和的新型安全之路。</li>
<li>中国坚定站在历史正确的一方，坚定站在人类进步的一方，是世界和平的建设者，全球发展的贡献者、国际秩序的维护者</li>
</ul>
<h2 id="第二套-4"><a href="#第二套-4" class="headerlink" title="第二套"></a>第二套</h2><h3 id="中国为什么能先后提出历史答案和时代答案"><a href="#中国为什么能先后提出历史答案和时代答案" class="headerlink" title="中国为什么能先后提出历史答案和时代答案"></a>中国为什么能先后提出历史答案和时代答案</h3><ul>
<li>70年前，中国共产党人提出了和平共处五项原则这一历史答案；70年后的今天，中国共产党又提出了构建人类命运共同体这一时代答案。</li>
<li>和平共处五项原则为国际秩序和国际法治树立了历史标杆，为世界上不同社会制度国家的建立和发展关系提供了正确指导，为发展中国家团结合作，联合自强汇聚了强大合力，为国际秩序完善和改革提供了历史智慧。</li>
<li>构建人类命运共同体与和平共处五项原则一脉相承，是新时代和平共处五项原则最好的传承、弘扬、升华。这一理念立足于国与国命运交织、休戚与共的客观现实，树立了平等和共生的新典范；顺应了和平、发展、合作、共赢的时代潮流，开辟了和平与进步的新境界；着眼世界多极化和经济全球化的历史大势，丰富了发展和安全的新实践</li>
<li>中国先后提出“历史答案”和“时代答案”，是因为：中华文化具有突出的和平性，从根本上决定了中国始终是世界和平的建设者、全球发展的贡献者、国际秩序的维护者。坚持走和平发展道路，是中国外交的基本原则；中国共产党始终致力于为人类谋进步、为世界谋大同。</li>
</ul>
<h3 id="新形势下弘扬和平共处五项原则精神内涵的时代价值"><a href="#新形势下弘扬和平共处五项原则精神内涵的时代价值" class="headerlink" title="新形势下弘扬和平共处五项原则精神内涵的时代价值"></a>新形势下弘扬和平共处五项原则精神内涵的时代价值</h3><ul>
<li>当前，世界百年未有之大变局加速演进，世界进入了新的变革动荡期，我们比以往更需要弘扬“主权平等、相互尊重、和平安全、共同繁荣、公道正义、开放包容”的和平共处五项原则将神内涵</li>
<li>这是顺应世界多极化、国际关系民主化的必然要求；这是团结世界一切进步力量，共同应对风险挑战的现实需要；这是推动构建新兴国际关系的重要基石；这是捍卫联合国宪章权威和地位的重要途径。</li>
<li>中国推动高质量发展“一带一路”，提出并努力落实“三大倡议”，坚持真正的多边主义，倡导有序的世界多极化，普惠包容的经济全球化</li>
</ul>
<h2 id="第三套-4"><a href="#第三套-4" class="headerlink" title="第三套"></a>第三套</h2><h3 id="中非携手现代化六大主张的重大意义"><a href="#中非携手现代化六大主张的重大意义" class="headerlink" title="中非携手现代化六大主张的重大意义"></a>中非携手现代化六大主张的重大意义</h3><ul>
<li>现代化是世界各国不能剥夺的权力，中国和非洲共占世界总人口的三分之一，没有中非现代化，就没有世界现代化。</li>
<li>当前，全球南方正更加独立自主地探索现代化道路，中国式现代化打破了“现代化&#x3D;西方化”地迷思，为全球提供了新的现代化模式。习近平总书记提出了现代化六大主张，与中国式现代化五大基本特征和本质要求一脉相承，不仅是中非的追求，也是广大“全球南方”国家的普遍共识。现代化道路一个都不能少，一个国家都不能掉队。</li>
</ul>
<h3 id="中国始终是全球南方的一员，以“大金砖合作”引领全球南方"><a href="#中国始终是全球南方的一员，以“大金砖合作”引领全球南方" class="headerlink" title="中国始终是全球南方的一员，以“大金砖合作”引领全球南方"></a>中国始终是全球南方的一员，以“大金砖合作”引领全球南方</h3><ul>
<li>全球南方并非单纯的地理概念或经济概念，是世界新兴市场发展国家和发展中国家的集合体。中国作为世界上最大的发展中国家，是“全球南方”阵营的当然成员，是发展中国家的长期合作伙伴，同时也是推动全球治理发展的实干家和行动派。</li>
<li>“全球南方”群体性增长，但其诉求和声音在当今国际治理体系下得不到充分反应。金砖合作机制承载了“全球南方”国家对和平发展和正义的期望，已然成为世界新兴市场发展国家和发展中国家团结合作的重要平台。以金砖合作引领“全球南方”大团结。</li>
<li>“全球南方“要共同做维护世界和平的稳定力量，推动世界发展的中坚力量，文化交流的促进力量，推动构建人类命运共同体。</li>
</ul>
<h2 id="第四套-4"><a href="#第四套-4" class="headerlink" title="第四套"></a>第四套</h2><h3 id="践行真正的多边主义"><a href="#践行真正的多边主义" class="headerlink" title="践行真正的多边主义"></a>践行真正的多边主义</h3><ul>
<li>面对国际环境变乱交织，真正的多边主义是人类面对风险挑战、推进全球治理的必然选择。它凝聚了世界各国人民求和平、谋发展的共识，响应了时代发展潮流，为多边主义正本清源，与单边主义和各种”伪多边主义“形成鲜明对比。</li>
<li>坚持真正的多边主义，就是要坚决维护联合国的权威和地位；要推动共商共建共享的全球治理；要推进新型国际关系民主化；要反对单边主义和各种”伪多边主义“</li>
<li>中国是真正的多边主义的积极倡导者，更是忠实践行者</li>
</ul>
<h3 id="驳斥所谓的中国新能源产业”产能过剩“，建设绿色家园"><a href="#驳斥所谓的中国新能源产业”产能过剩“，建设绿色家园" class="headerlink" title="驳斥所谓的中国新能源产业”产能过剩“，建设绿色家园"></a>驳斥所谓的中国新能源产业”产能过剩“，建设绿色家园</h3><ul>
<li>中国新能源在全球开放竞争中练就了真本领，代表先进产能，不仅丰富了世界供给，还缓解了世界通胀压力，也为全球应付气候变化作足了巨大贡献。鼓吹中国新能源”产能过剩“，是推动经济逆全球化和保护主义、单边主义的新托辞，其最大目的是遏制打压中国优势产业。</li>
<li>共同构建绿色家园是人类的追求，中国致力于推动共建全球绿色家园，积极参与全球环境治理，是全球生态文明治理的重要参与者、贡献者、引领者。中国将坚定不移走绿色发展道路，为全球绿色转型提供重要力量</li>
</ul>
<h3 id="普惠包容的经济全球化"><a href="#普惠包容的经济全球化" class="headerlink" title="普惠包容的经济全球化"></a>普惠包容的经济全球化</h3><ul>
<li>经济全球化是生产力发展的客观要求，是科学进步的必然结果，虽然曾经有过逆潮和回头浪，但发展大势从未改变。搞”小院高墙“”脱钩脱链“是不可能的，也是不符合时代发展潮流的。</li>
<li>经济全球化既带来了发展机遇，又带来了复杂的风险挑战。弥补公平赤字是经济全球化的重要命题。要正确引导经济全球化发展方向，让经济全球化释放更多正面效应。普惠包容的经济全球化是增加更多机遇的普惠，推动发展道路的包容。让经济全球化更多惠及不同国家、不同群体。</li>
</ul>
]]></content>
      <categories>
        <category>考研政治</category>
      </categories>
  </entry>
</search>
